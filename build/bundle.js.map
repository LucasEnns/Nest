{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/nest.js","../../src/methods.js","../../src/gCode.js","../../node_modules/svelte/store/index.mjs","../../src/localStore.js","../../src/sessionStore.js","../../src/stores.js","../../node_modules/file-saver/dist/FileSaver.min.js","../../src/csv.js","../../src/components/Import.svelte","../../src/components/Viewer.svelte","../../src/components/CSV.svelte","../../src/components/Info.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/////////////////TO DO//////////////////////////////////\n// interface to upload csv and return finished output\n// return info about nest efficiency\n// basic cnc setup, gCode creator\n\n/////////////////IDEAS//////////////////////////////////\n// simple gui to accept or reject nested sheets\n// potentially flag sheets with low score\n// click sheet shuffle columns\n\n\n// new technique-- class panel widths by +- %\n// if none next is +- 1/2 of width\n\n// idea 2\n// start width columns of all the similar widths\n// that join columns\n\n\n// import { toDECIMAL } from \"./methods\"\n\nlet CUTTER = 0.375         // end mill diameter used to space panels\nlet GAP = 0                // gap + bit size = total space\nlet ERRORS = []            // catch all panels that don't fit\nlet MATERIAL = {           // sheet size and options\n        width: 49,\n        height: 97,\n        margins: 0.25,\n        max_width: () => MATERIAL.width - MATERIAL.margins * 2 - CUTTER,\n        max_height: () => MATERIAL.height - MATERIAL.margins * 2 - CUTTER\n    }\n\nexport function Nest( panels,\n        firstPanelRow = 1,\n        metricUnits = false,\n        cutter = CUTTER,\n        gap = GAP,\n        material = MATERIAL\n) {\n\n    function panelArrayCreator() {\n        // console.log(CSVToArray( panels ));\n        return new List( panels\n                .slice( firstPanelRow )\n                .flatMap( i => {\n                    return quantityIDs( i ).map( i => new Panel( i )\n                    )\n                } )\n            ).flat()\n    }\n\n    function quantityIDs( [ id, quantity, width, height ] ) {\n        if ( width > MATERIAL.max_width() ||\n            height > MATERIAL.max_height() ) {\n                ERRORS.push(`Panel ${id} is too big`)\n                return []\n        } else if ( !width || !height || !quantity ) return []\n        let n = 1, uniqueIDs = []\n        while ( quantity >= n ) {\n            let q = \"\"\n            if ( quantity > 1 ) q =  ` ... ${n} of ${quantity}`\n            uniqueIDs.push( [ id + q , id, parseFloat(width), parseFloat(height) ] )\n            n++\n        }\n        return uniqueIDs\n    }\n\n\n    ERRORS = []\n    const PANELS = panelArrayCreator()          // raw csv panel input converted\n    // const METRIC_UNITS = metricUnits  // default false\n    // const TARGET_FIT = 0.8                      // ratio of a good fit per sheet\n    CUTTER = cutter\n    GAP = gap\n    MATERIAL.width = material.width\n    MATERIAL.height = material.height\n    MATERIAL.margins = material.margins\n\n\n    function fillColumn( panels ) {\n        let column = new List( panels.widest().place() )\n        let maxWidth = column[0].width\n        // add rows of panels to column until\n        // no space remains or no more panels\n        while ( panels.fitsColumn( column ) ) {\n            let row = new List(\n                panels.fitsColumn( column ).place()\n            )\n            // add more panels to row if space remains\n            while ( panels.fitsRow( row, maxWidth ) ) {\n                row.push( panels.fitsRow( row, maxWidth ).place() )\n            }\n            // return nested array only if\n            // more than one panel in row\n            if ( row.length === 1 ) column.push( row[0] )\n            else column.push( row )\n        }\n        // smallest pieces to center of column\n        // return column.shuffle()\n        return column.ascendingWidth()\n    }\n\n\n    function makeColumns ( panels ) {\n        let columns = new List()\n        while ( panels.notPlaced().length > 0 ) {\n            let column = fillColumn( panels )\n            columns.push( new Column (\n                column.columnWidth(),       //width\n                column.columnHeight(),      // height\n                column.columnArea(),        // area\n                column                      // group\n            ))\n        }\n        return columns\n    }\n\n    function fillSheet( columns ) {\n        let sheet = new List( columns.widest().place() )\n        while ( columns.fitsSheet( sheet ) ) {\n            sheet.push( columns.fitsSheet( sheet ).place() )\n        }\n        // smallest pieces to center of sheet\n        // return sheet.shuffle()\n        return sheet\n    }\n\n    function makeSheets( panels ) {\n        let columns = makeColumns( panels )\n        let sheets =  new List()\n        while ( columns.notPlaced().length > 0 ) {\n            let sheet = fillSheet( columns )\n            addCoordinates( sheet, sheets.length )\n            sheets.push( new Sheet(\n                sheet.filledWidth(),                        // width\n                sheet.filledHeight(),                       // height\n                sheet.filledArea(),                         // area\n                sheet.map(list => list.group).flatten(2),   // group\n                sheet,                                      // columns\n                sheets.length + 1                           // id\n            ))\n        }\n        return sheets\n    }\n\n    function addCoordinates( columns, multiplier ) {\n        // let startX = MATERIAL.margins + MATERIAL.width * multiplier\n        let startX = MATERIAL.margins\n        let startY = MATERIAL.margins\n        // start X and Y for svg output with multiple sheets\n\n        let xPos = new List()\n\n        columns.forEach( ( column, i ) => {\n            // xPos map of columns, first index === start\n            if ( i === 0 ) { xPos.push( startX ) }\n            // everything after calculated += prev. width\n            else { xPos.push(xPos.last() + columns[i - 1].width) }\n\n            let yPos = new List()\n\n            // iterate each row in column\n            column.group.forEach( ( row, j, rows ) => {\n                // yPos map of rows, first index === start\n                if ( j === 0 ) { yPos.push( startY ) }\n                // everything after calculated += prev. height\n                // with appropriate method for row type\n                else if ( rows[j - 1] instanceof List ) {\n                    yPos.push(yPos.last() + rows[j - 1].filledHeight())\n                }\n                else { yPos.push(yPos.last() + rows[j - 1].height) }\n\n                // add x0 and y0 prop to each row in column\n                if ( row instanceof Panel ) {\n                    row.x0 = xPos[i]\n                    row.y0 = yPos[j]\n                }\n                else {\n                    row.forEach(( rowCol, k ) => {\n                        if ( k === 0 ) { rowCol.x0 = xPos[i] }\n                        else { rowCol.x0 = row[k-1].x0 + row[k-1].width }\n                        rowCol.y0 = yPos[j]\n                    })\n                }\n            })\n        })\n    }\n    let sheets = makeSheets( PANELS )\n    return [ PANELS, sheets, ERRORS ]\n}\n\n\n\n\nclass Placement {\n    constructor() {\n        this.placed = false\n    }\n    place() {\n        this.placed = true\n        return this\n    }\n}\n\nclass Panel extends Placement {\n    constructor( [ uniqueID, id, width, height ] ) {\n        super()\n        this.uniqueID = uniqueID\n        this.id = id\n        this.width = width + CUTTER + GAP\n        this.height = height + CUTTER + GAP\n        this.area = this.height * this.width\n        this.x0 = 0\n        this.y0 = 0\n    }\n}\n\nclass Column extends Placement {\n   constructor( width, height, area, group ){\n        super()\n        this.width = width\n        this.height = height\n        this.area = area\n        this.group = group\n    }\n}\n\nclass Sheet extends Column {\n   constructor( width, height, area, group, columns, id ){\n        super( width, height, area, group  )\n        this.columns = columns\n        this.sheet_width = MATERIAL.width\n        this.sheet_height = MATERIAL.height\n        this.sheet_area = MATERIAL.width * MATERIAL.height\n        this.waste_area = this.sheet_area - this.area\n        this.waste_ratio = 1 - this.area / this.sheet_area\n        this.id = \"Sheet \" + id\n        delete this.placed\n    }\n}\n\nclass List extends Array {\n//  methods for arrays of Panel or group objects\n    // extending array methods\n    first() {\n        return this[0]\n    }\n    last() {\n        return this[this.length-1]\n    }\n    flatten( dimensions = 1 ) {\n        let flattened = this\n        while ( dimensions-- ) {\n            flattened = flattened.flat()\n            // dimensions--\n        }\n        return flattened\n    }\n    // removeIndex( index ) {\n    //     let list = [...this]\n    //     this = [...list.slice(0, index), ...list.slice(index + 1)]\n    // }\n    // removeValue( value ) {\n    //     this.removeIndex( array.indexOf( value ) )\n    // }\n    shuffle() {\n        if ( this.length < 3 ) return this\n        return new List( ...this.slice(1), this.first() )\n    }\n    // sorting methods\n    ascendingWidth() {\n        return new List( ...this )\n            .sort(( a, b ) => b.width != a.width ?\n                b.width - a.width :\n                b.height - a.height)\n    }\n    ascendingHeight() {\n        return new List( ...this )\n            .sort(( a, b ) => b.height != a.height ?\n                b.height - a.height :\n                b.width - a.width)\n    }\n    // methods to find unplaced panels\n    notPlaced() {\n        return this.filter(panel => !panel.placed)\n    }\n    widest() {\n        return this.notPlaced().ascendingWidth().first()\n    }\n    narrowest() {\n        return this.notPlaced().ascendingWidth().last()\n    }\n    tallest() {\n        return this.notPlaced().ascendingHeight().first()\n    }\n    shortest() {\n        return this.notPlaced().ascendingHeight().last()\n    }\n    biggest() {\n        return this\n            .sort(( a, b ) => b.area - a.area )\n            .notPlaced()\n            .first()\n    }\n    // group measurement methods\n    totalWidth() {\n        return this.reduce(( total, panel ) => {\n            if ( panel instanceof List ) {\n                return total + panel.ascendingWidth().first().width\n            }\n            return total + panel.width\n        }, 0)\n    }\n    totalHeight() {\n        return this.reduce( ( total, panel ) => {\n            if ( panel instanceof List ) {\n                return total + panel.ascendingHeight().first().height\n            }\n            return total + panel.height\n        }, 0 )\n    }\n    totalArea() {\n        return this.reduce((total, panel) => total + panel.area, 0)\n    }\n    columnWidth() {\n        return this.flat().ascendingWidth().first().width\n    }\n    columnHeight() {\n        return this.totalHeight()\n    }\n    columnArea() {\n        return this.flat().totalArea()\n    }\n    filledHeight() {\n        return this.ascendingHeight().first().height\n    }\n    filledWidth() {\n        return this.totalWidth()\n    }\n    filledArea() {\n        return this.flat().totalArea()\n    }\n    remainingWidth( maxWidth ) {\n        return maxWidth - this.totalWidth()\n    }\n    remainingHeight( maxHeight ) {\n        return maxHeight - this.totalHeight()\n    }\n    fitsColumn( group, maxHeight = MATERIAL.height ) {\n        return this.notPlaced()\n            .filter(panel => panel.width <= group[0].width)\n            .filter(panel => panel.height < group.remainingHeight( maxHeight ))\n            // .biggest()\n            .widest()\n    }\n    fitsRow( group, maxWidth ) {\n        return this.notPlaced()\n            .filter(panel => panel.height <= group[0].height)\n            .filter(panel => panel.width < group.remainingWidth( maxWidth ))\n            // .biggest()\n            .widest()\n    }\n    fitsSheet( group, maxWidth = MATERIAL.width ) {\n        return this.notPlaced()\n            // .filter(panel => panel.height <= group[0].height)\n            .filter(panel => panel.width < group.remainingWidth( maxWidth ))\n            .widest()\n    }\n}\n","function toFloat( str ) {\n    if (!isNaN(str)) return parseFloat(str) // if number return float\n    if (str.includes(\"/\") && !str.includes(\".\")) {\n        return str\n            .split(\" \")\n            .filter(item => item !== \"\") // for multiple spaces\n            .reduce( ( total, item ) => {\n                if ( item.includes(\"/\") ) {\n                    let frac = item.split(\"/\").filter(item => item !== \"\")\n                    return total + parseFloat(frac[0] / frac[1])}\n                return total + parseFloat(item)\n                }, 0 )\n    }\n    return \"error\"\n}\n\n\nconst removeFromArray = (array, itemValue) =>{\n    let index = array.indexOf(itemValue)\n    return [...array.slice(0, index), ...array.slice(index + 1)]\n}\n\n\nexport function trunc ( number, places ) {\n    return parseInt( number * ( 10 ** places ) ) / ( 10 ** places )\n}\n\n\nexport function formatDate(date, format) {\n    const map = {\n        mm: date.getMonth() + 1,\n        dd: date.getDate(),\n        yy: date.getFullYear().toString().slice(-2),\n        yyyy: date.getFullYear(),\n        H: date.getHours(),\n        M: date.getMinutes(),\n        S: date.getSeconds(),\n    }\n\n    return format.replace(/mm|dd|yy|yyyy|H|M|S/gi, matched => map[matched])\n}\n","///////////////////////////////////////////////////////\n// TO DO\n//////////////////////////////////////////////////////\n// add support for tool library\n\n\nimport { formatDate } from \"./methods.js\";\n\nlet TOOL_NUMBER = 9\nlet SPINDLE_SPEED = 18000\nlet FEED_RATE = 400\nlet PLUNGE_RATE = 50\nlet X_HOME = 30.0\nlet Y_HOME = 120.0\n// let Z_HOME = 0\nlet SAFE_HEIGHT = 1\nlet CUT_TO_DEPTH = 0\n\nfunction HEADER( tool, speed, fileName ) {\n    return [\n        `( ${fileName} )`,\n        `( ${formatDate(new Date(), 'yyyy/mm/dd H:M')} )`,\n        `G40 G80 G91 G28 Z0`,\n        `G70`,\n        `M6 T${tool}`,\n        `S${speed} M3`,\n        `G54 G90`,\n        `G43 H${tool}`\n    ]\n}\nfunction TOOL_CHANGE( tool, speed ) {\n    return [\n        `M05`,\n        `G91 G28 Z0`,\n        `T${tool}`,\n        `G00 G90 G54 S${speed} M3`,\n        `G43 H${tool}`\n    ]\n}\nfunction SHEET_CHANGE( x, y ) {\n    return [\n        `G0 G90 X${x} Y${y}`,\n        `M00`,\n        `(Add new sheet and press cycle start:)`\n    ]\n}\nfunction FOOTER() {\n    return [\n        `G40 G80 G91 G28 Z0 M5`,\n        `G0 G90 X${X_HOME} Y${Y_HOME}`,\n        `M30`\n    ]\n}\nfunction RAPID_MOVE( x, y, z ) { return `G00 X${x} Y${y} Z${z}` }\nfunction RETRACT_MOVE( z ) { return `G00 Z${z}` }\nfunction PLUNGE_MOVE( x, y, z, f ) { return `G01 X${x} Y${y} Z${z} F${f}` }\nfunction FEED_MOVE( x, y, z, f ) { return `G01 X${x} Y${y} Z${z} F${f}` }\nfunction MOVE( x, y, z ) { return `X${x} Y${y} Z${z}` }\nfunction MOVE_X( x ) { return `X${x}` }\nfunction MOVE_Y( y ) { return `Y${y}` }\nfunction MOVE_Z( z ) { return `Z${z}` }\n\nexport function Gcode( sheets, material ,fileName ) {\n    SAFE_HEIGHT = material.thickness + 0.5\n    X_HOME = material.width / 2\n    Y_HOME = material.height + 10 // add limit to 122\"\n    let output = [ ...HEADER( TOOL_NUMBER, SPINDLE_SPEED, fileName ) ]\n    sheets.forEach( sheet => {\n        output.push(`( ${sheet.id} )`)\n        sheet.columns.forEach( (column, index) => {\n            column.group.flat().sort(( a, b ) => index % 2 !== 0 ?\n                a.y0 != b.y0 : b.y0 != a.y0 ?\n                b.y0 - a.y0 : b.x0 - a.x0)\n            .forEach( panel => output.push( profileCut( panel ) ))\n        })\n        output.push( SHEET_CHANGE( X_HOME, Y_HOME ) )\n    })\n    output.pop() // get rid of last sheet change\n    output.push( FOOTER() )\n    return output.flat().join('\\n')\n}\n\nfunction profileCut( panel ) {\n    const { x0, y0, width, height } = panel\n    let x_ = x0 + width\n    let y_ = y0 + height\n    let yStart = y0 + 5\n    let yEnd = yStart + 1\n\n    return [\n        `( cutting panel ${panel.uniqueID} )`,\n        RAPID_MOVE( x0, yStart, SAFE_HEIGHT ),\n        PLUNGE_MOVE( x0, yEnd, CUT_TO_DEPTH, PLUNGE_RATE ),\n        FEED_MOVE( x0, y_, CUT_TO_DEPTH, FEED_RATE ),\n        MOVE_X( x_ ),\n        MOVE_Y( y0 ),\n        MOVE_X( x0 ),\n        MOVE_Y( yEnd ),\n        RETRACT_MOVE( SAFE_HEIGHT )\n    ]\n}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\n// import YAML from 'yaml';\n\nexport const localStore = (key, initial) => {\n  // receives the key of the local storage and an initial value\n\n  // helper function\n  const toString = (value) => JSON.stringify(value, null, 2)\n  // helper function\n  const toObj = JSON.parse\n\n  // item not present in local storage\n  if (localStorage.getItem(key) === null) {\n    // initialize local storage with initial value\n    localStorage.setItem(key, toString(initial))\n  }\n\n  // convert to object\n  const saved = toObj(localStorage.getItem(key))\n\n  // create the underlying writable store\n  const { subscribe, set, update } = writable(saved)\n\n  return {\n    subscribe,\n    set: (value) => {\n      // save also to local storage as a string\n      localStorage.setItem(key, toString(value))\n      return set(value)\n    },\n    update\n  }\n}\n","import { writable } from 'svelte/store';\n// import YAML from 'yaml';\n\nexport const sessionStore = (key, initial) => {\n  // receives the key of the local storage and an initial value\n\n  // helper function\n  const toString = (value) => JSON.stringify(value, null, 2)\n  // helper function\n  const toObj = JSON.parse\n\n  // item not present in local storage\n  if (sessionStorage.getItem(key) === null) {\n    // initialize local storage with initial value\n    sessionStorage.setItem(key, toString(initial))\n  }\n\n  // convert to object\n  const saved = toObj(sessionStorage.getItem(key))\n\n  // create the underlying writable store\n  const { subscribe, set, update } = writable(saved)\n\n  return {\n    subscribe,\n    set: (value) => {\n      // save also to local storage as a string\n      sessionStorage.setItem(key, toString(value))\n      return set(value)\n    },\n    update\n  }\n}\n","// stores.js\n// import { writable } from 'svelte/store'\nimport { localStore } from './localStore.js'\nimport { sessionStore } from './sessionStore.js'\nimport { formatDate } from \"./methods.js\";\n\nlet placementSettings = {\n\n  material: {\n    width: 49,\n    height: 97,\n    thickness: 0.75,\n    margins: 0.125\n  },\n  cutter: 0.375,\n  gap: 0,\n  units: false\n}\n// const fallback = [\n//   { sheet_width: 49, sheet_height: 97 }\n// ]\n\nexport const blancCSV = {\n  name: formatDate( new Date(), 'yymmdd-HM' ),\n  errors: [],\n  contents: [\n    ['Project name:', 'New'],\n    ['Border (+ or -)', 0],\n    ['Metric units', false],\n    [,,,],\n    ['Panel','Q','W','H'],\n    [1,,,]\n\n  ]\n}\n\n// export const cabinets = localStore('cabinets', [])\n\n// export const inputState = localStore('input-state', \"cabinet\")\n// export const cabinetType = localStore('cabinet-type', \"bathroom\")\n\nexport const settings = localStore('settings', placementSettings)\nexport const panels = sessionStore('panels', [])\nexport const sheets = sessionStore('sheets', [])\nexport const csvFile = sessionStore('csv-file', blancCSV)\nexport const svg = sessionStore('svg', '')\nexport const activePanel = sessionStore('activePanel', '')\n\n// export const inputTemplate = localStore('template', template)\n","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","export function CSVToArray( strData, headerRows = 1, strDelimiter = \",\" ) {\n\n    // Create a regular expression to parse the CSV values.\n    var regexPattern = new RegExp( (\n            \"(\\\\\" + strDelimiter + \"|\\\\r?\\\\n|\\\\r|^)\" +  // Delimiters.\n            \"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" +         // Quoted fields.\n            \"([^\\\"\\\\\" + strDelimiter + \"\\\\r\\\\n]*))\"     // Standard fields.\n        ), \"gi\" )\n\n    // Create an array of arrays to hold csv data.\n    var arrData = [[]];\n\n    // Create an array to hold our individual pattern\n    // matching groups.\n    var arrMatches = null;\n\n    // Keep looping over the regular expression matches\n    // until we can no longer find a match.\n    while (arrMatches = regexPattern.exec( strData )){\n\n        // Get the delimiter that was found.\n        var strMatchedDelimiter = arrMatches[ 1 ];\n\n        // Check to see if the given delimiter has a length\n        // (is not the start of string) and if it matches\n        // field delimiter. If id does not, then we know\n        // that this delimiter is a row delimiter.\n        if ( strMatchedDelimiter.length &&\n            (strMatchedDelimiter != strDelimiter)\n            ) {\n\n            // Since we have reached a new row of data,\n            // add an empty row to our data array.\n            arrData.push( [] );\n        }\n\n        // Now that we have our delimiter out of the way,\n        // let's check to see which kind of value we\n        // captured (quoted or unquoted).\n        if ( arrMatches[ 2 ] ){\n\n            // We found a quoted value. When we capture\n            // this value, unescape any double quotes.\n            var strMatchedValue = arrMatches[ 2 ].replace(\n                    new RegExp( \"\\\"\\\"\", \"g\" ), \"\\\"\" )\n\n        } else {\n            // We found a non-quoted value.\n            var strMatchedValue = arrMatches[ 3 ]\n        }\n\n        if ( hasNumber( strMatchedValue ) ) {\n            strMatchedValue = toFloat( strMatchedValue )\n        }\n\n        // Now that we have our value string, let's add\n        // it to the data array.\n        arrData[ arrData.length - 1 ].push( strMatchedValue )\n    }\n\n    // Return the parsed data.\n    return arrData.filter( ( item, index ) => {\n        // keep all header rows\n            if ( index < headerRows ) return true\n        // removes blanc rows thereafter\n            return item.filter( inner => inner !== \"\" ).length\n        } )\n}\nfunction hasNumber( str ) {\n    return /\\d/.test( str );\n}\n\nfunction toFloat( str ) {\n    if (!isNaN( str )) return parseFloat( str ) // if number return float\n    if (str.includes(\"/\") && !str.includes(\".\")) {\n        return str\n            .split( \" \" )\n            .filter( item => item !== \"\" ) // for multiple spaces\n            .reduce( ( total, item ) => {\n                if ( item.includes( \"/\" ) ) {\n                    let frac = item\n                        .split( \"/\" )\n                        .filter( item => item !== \"\" )\n                    return total + parseFloat( frac[0] / frac[1] )}\n                return total + parseFloat( item )\n                }, 0 )\n    }\n    return str\n}\n","<script>\n// TO DO\n//key bindings\n\n\n   import { Nest } from \"../nest.js\"\n   import { Gcode } from \"../gCode.js\"\n   import { settings, panels, sheets, csvFile, blancCSV, svg } from \"../stores.js\"\n   import { saveAs } from 'file-saver'\n   import { formatDate } from \"../methods.js\";\n   import { CSVToArray } from \"../csv.js\";\n   import { beforeUpdate } from 'svelte'\n   let badFile = false\n   let file\n   let csv = $csvFile.contents.join('\\n')\n   $: cnc = () => Gcode($sheets, $settings.material, $csvFile.name )\n   const csvHeaderRows = 5\n   // gCode = \"g00 \\ng20\"\n\n   beforeUpdate(() => {\n      if ( $csvFile.contents > csvHeaderRows ) {\n         calculateNest()\n      }\n})\n\n\n\nconst today = formatDate(new Date(), '_yymmdd');\n\n   function calculateNest() {\n      let nest = Nest(\n            $csvFile.contents,\n            csvHeaderRows,                   // panel starting row csv\n            $settings.units,\n            $settings.cutter,\n            $settings.gap,\n            $settings.material\n         )\n      $panels = nest[0]\n      $sheets = nest[1]\n      $csvFile.errors = nest[2]\n   }\n\n   function newFile() {\n      $csvFile = blancCSV\n   }\n\n   function loadFile() {\n\n      if ( file.files[0].name.includes('.csv') ) {\n         $csvFile.name = file.files[0].name.replace('.csv', '')\n         let reader = new FileReader()\n         reader.readAsText(file.files[0])\n         reader.onload = function (event) {\n            $csvFile.contents = CSVToArray(event.target.result, csvHeaderRows) // csv file\n            calculateNest()\n            badFile = false\n         }\n      } else {\n         badFile = true\n      }\n   }\n\nfunction highlight() {\n    this.select()\n}\n\n</script>\n\n<style>\n\n   *{\n      font-weight: 300;\n      font-family: 'Overpass', sans-serif;\n      color: #fde3b0;\n      text-align: center;\n      /* vertical-align: middle; */\n   }\n\n/* img {\n\n   vertical-align: -.5em;\n   height: 3.5em;\n} */\n.file-icon{\n   position: relative;\n   height: 2.5em;\n   width: 2.3em;\n   background-repeat: no-repeat;\n   background-position: center;\n   background-size: contain;\n   cursor: pointer;\n}\n.blocked {\n   cursor: default;\n}\n.badfile {\n   background-image: url('../upload-bad.png');\n}\n.upload {\n   background-image: url('../upload.png');\n}\n.upload:hover {\n   background-image: url('../upload-hover.png');\n}\n.new {\n   background-image: url('../new.png');\n}\n.new:hover {\n   background-image: url('../new-hover.png');\n}\n.dl-svg {\n   background-image: url('../dl-svg.png');\n}\n.dl-svg-block {\n   background-image: url('../dl-svg-block.png');\n}\n.dl-svg:hover {\n   background-image: url('../dl-svg-hover.png');\n}\n.dl-csv {\n   background-image: url('../dl-csv.png');\n}\n.dl-csv-block {\n   background-image: url('../dl-csv-block.png');\n}\n.dl-csv:hover {\n   background-image: url('../dl-csv-hover.png');\n}\n.dl-cnc {\n   background-image: url('../dl-cnc.png');\n}\n.dl-cnc-block {\n   background-image: url('../dl-cnc-block.png');\n}\n.dl-cnc:hover {\n   background-image: url('../dl-cnc-hover.png');\n}\n\n\n.file-mgmt, .settings {\n   display: flex;\n   align-items: center;\n   justify-content: space-evenly;\n}\n\n.switch input,\n.inputfile {\n   top:.5em;\n\twidth: 0.1px;\n\theight: 0.1px;\n\topacity: 0;\n\toverflow: hidden;\n\tposition: absolute;\n\tz-index: -1;\n}\n/* .inputfile + label {\n    font-size: 1.25em;\n    font-weight: 300;\n    color: white;\n    display: inherit;\n} */\n\n.inputfile:focus + label,\n/* .inputfile + label:hover, */\n.input:hover {\n    color: #75cafc;\n    border-bottom: #e7fc75 solid 1px;\n}\n\n.inputfile + label {\n\tcursor: pointer; /* \"hand\" cursor */\n}\n\n/* .inputfile:focus + label {\n\tborder-bottom: #e7fc75 solid 1px;\n} */\n\ninput[type=\"checkbox\"] {\n   opacity: 0.5;\n   /* font-size: 2em; */\n}\ninput[type=\"checkbox\"]:checked {\n   opacity: 1;\n}\n\ninput[type=\"number\"]::-webkit-outer-spin-button, input[type=\"number\"]::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n}\n\ninput[type=\"number\"] {\n    -moz-appearance: textfield;\n}\n\n\n.input{\n   width: 2.5em;\n   font-size: 1.1em;\n   border: none;\n   background: none;\n   color: #fde3b0;\n   border-bottom: transparent solid 1px;\n   outline: none;\n}\n\ninput:focus + .slider:before {\n  background-color: #333;\n}\n\ninput:focus + .slider,input:focus + .slider:after {\n   background-color: #fde3b0;\n   color: #333;\n}\n\n.switch {\n  position: relative;\n  display: inline-block;\n  width: 4.2em;\n  height: 1.5em;\n}\n\n\n.slider{\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  /* background-color: #8ffffd; */\n  -webkit-transition: .3s;\n  transition: .3s;\n  border: 1px solid #fde3b0;\n   border-radius: .4em;\n}\n\n.slider:before {\n  position: absolute;\n  content: \"\";\n  height: 1em;\n  width: 1px;\n  right: .3em;\n  top: 0;\n  background-color: #fde3b0;\n  -webkit-transition: .3s;\n  transition: .3s;\n  /* border-radius: 50%; */\n}\n\ninput:checked + .slider:before {\n  -webkit-transform: translateX(-3.5em);\n  -ms-transform: translateX(-3em);\n  transform: translateX(-3.4em);\n}\n\n.slider:after\n{\n content:'inch';\n color: #fde3b0;\n display: block;\n position: absolute;\n left: 50%;\n font-size: 1.2em;\n transform: translate(-50%,0%);\n}\n\ninput:checked + .slider:after\n{\n  content:'mm';\n}\n\n\n</style>\n\n<svelte:head>\n   <title>{$csvFile.name || \"Nest\"}</title>\n</svelte:head>\n\n<!-- change imgs for bg to use hover and more easily change img -->\n\n<div class=\"file-mgmt\">\n   <div\n      class=\"file-icon new\"\n      alt=\"new csv file\"\n      on:click={newFile}>\n   </div>\n   <input\n      class=\"inputfile\"\n      name=\"file\"\n      id=\"file\"\n      type=\"file\"\n      on:change={loadFile}\n      bind:this={file} />\n   <label for=\"file\" alt=\"upload a csv file\">\n      <div\n         class=\"file-icon {badFile ? \"badfile\" : \"upload\"}\"\n         on:mouseover={() => badFile = false}>\n      </div>\n   </label>\n   {#if  $sheets.length }\n      <a href=\"data:text/plain;charset=utf-8,{encodeURIComponent(csv)}\" download=\"{$csvFile.name + today}.csv\" alt=\"download csv file\">\n         <div class=\"file-icon dl-csv\"></div>\n      </a>\n      <a href=\"data:text/plain;charset=utf-8,{encodeURIComponent($svg)}\" download=\"{$csvFile.name + today}.svg\" alt=\"download svg file\">\n         <div class=\"file-icon dl-svg\"></div>\n      </a>\n      <a href=\"data:text/plain;charset=utf-8,{encodeURIComponent(cnc())}\" download=\"{$csvFile.name + today}.cnc\" alt=\"download g-code file\">\n         <div class=\"file-icon dl-cnc\"></div>\n      </a>\n   {:else}\n      <div class=\"file-icon dl-csv-block blocked\"></div>\n      <div class=\"file-icon dl-svg-block blocked\"></div>\n      <div class=\"file-icon dl-cnc-block blocked\"></div>\n   {/if}\n</div>\n\n<div class=\"settings\">\n<div class=\"input-wrapper\">\n   <h5>Material W x H x T</h5>\n   <input\n      class=\"input\"\n      type=\"number\"\n      on:change={calculateNest}\n      bind:value={$settings.material.width}\n      step=\"0.0625\" />\n    <span>x</span>\n    <input\n      class=\"input\"\n      type=\"number\"\n      on:change={calculateNest}\n      bind:value={$settings.material.height}\n      step=\"0.0625\"  />\n    <span>x</span>\n    <input\n      class=\"input\"\n      type=\"number\"\n      on:change={calculateNest}\n      bind:value={$settings.material.thickness}\n      step=\"0.005\" />\n</div>\n<div class=\"input-wrapper\">\n   <h5>Margins</h5>\n   <input\n      class=\"input\"\n      type=\"number\"\n      on:change={calculateNest}\n      bind:value={$settings.material.margins}\n      step=\"0.03125\" />\n</div>\n<div class=\"input-wrapper\">\n   <h5>Tool Kerf</h5>\n   <input\n      class=\"input\"\n      type=\"number\"\n      on:change={calculateNest}\n      bind:value={$settings.cutter}\n      step=\"0.03125\" />\n</div>\n<!-- <div class=\"input-wrapper\">\n   <h5>Gap</h5>\n   <input class=\"input\" type=\"number\" bind:value={$settings.gap} step=\"0.005\" />\n</div> -->\n<div class=\"input-wrapper\">\n   <h5>Units</h5>\n   <label class=\"switch\"><input type=\"checkbox\" bind:checked={$settings.units} ><div class=\"slider\"></div></label>\n\n   <!-- <input class=\"input\" type=\"checkbox\" bind:checked={$settings.units} /> -->\n   <!-- <input class=\"input\" type=\"radio\" bind:group={units} value=\"mm\" /> -->\n</div>\n</div>\n","<script>\nimport { panels, sheets, settings, svg, activePanel } from '../stores.js'\nimport { afterUpdate } from 'svelte'\n\nlet id,\n    width,\n    height,\n    checkSize = false,\n    mx = 0,\n    my = 0,\n    top = 0,\n    left = 0,\n    scale = 90, // inches to pixels\n    svgFile\n$:  viewBoxW = $sheets.length * $settings.material.width\n$:  viewBoxH = $settings.material.height\n\n\nafterUpdate(() => {\n    if ( $sheets.length ) {\n        $svg = svgFile.innerHTML.toString()\n    }\n})\n\nfunction showSizes() {\n\n    $activePanel = this.id\n    checkSize = true\n    let rect = this.getBoundingClientRect();\n    top = rect.bottom + 12\n    left = rect.left + 12\n    id = this.id\n    width = this.width.baseVal.valueAsString\n    height = this.height.baseVal.valueAsString\n}\n\nfunction hideSizes( event ) {\n    checkSize = false\n    $activePanel = ''\n}\n\n</script>\n\n<style>\n.viewer{\n    /* margin: 1rem; */\n\n    height: 76vh;\n}\n.infocard{\n    position: fixed;\n    padding: 1rem;\n    background-color: lightcoral;\n    border-radius: 4px;\n    font-weight: 100;\n    color: white;\n    /* font-size: 4in; */\n    z-index: 2;\n    animation: fadein 0.4s ;\n   /* visibility: hidden; */\n}\n    svg{\n        height: 100%;\n        width: 100%;\n        margin: auto auto;\n        }\n\n    .panel{\n        stroke: #0cf;\n        stroke-width: 5;\n        fill: lightcoral;\n        fill-opacity: 0;\n        animation: fadeout 0.2s ;\n    }\n\n    /* .panel:hover, */\n    .active{\n        fill: lightcoral;\n        fill-opacity: 1;\n        animation: fadein 0.2s ;\n        }\n\n@keyframes fadein {\n    0% {\n        opacity: 0;\n    }\n    100% {\n        opacity: 1;\n    }\n}\n\n@keyframes fadeout {\n    0% {\n        fill-opacity: 1;\n    }\n    100% {\n        fill-opacity: 0;\n    }\n}\n\n    .sheet{\n        stroke:#fde3b0;\n        stroke-width: 15;\n        /* fill: url(#pattern1); */\n        fill-opacity: 0;\n        }\n\n    .idv, .idh {\n        text-anchor: middle;\n        fill: #0cf;\n        stroke: none;\n        font-size: 3in;\n        pointer-events: none;\n        cursor: default;\n    }\n\n    .idv{\n        writing-mode: vertical-rl;\n        glyph-orientation-vertical: 0;\n    }\n\n@media print{\n    .viewer,\n.print > * {\n    display: block !important;\n    fill: none;\n    stroke-width: 3px;\n    stroke: black;\n}\n}\n\n</style>\n\n<!-- {#if checkSize}\n<div class=\"infocard\" style=\"left: {left}px; top: {top}px;\">\n    <h4 class=\"sizes\">Panel: {id}</h4>\n    <h4 class=\"sizes\">Width: {width / scale - $settings.cutter}</h4>\n    <h4 class=\"sizes\">Height: {height / scale - $settings.cutter}</h4>\n</div>\n{/if}\n -->\n\n<div class=\"viewer\"    bind:this={svgFile}>\n<svg class=\"print\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    width=\"{viewBoxW * scale}\"\n    height=\"{viewBoxH * scale}\"\n    viewBox=\"0 0 {viewBoxW * scale} {viewBoxH * scale}\"\n    preserveAspectRatio=\"xMidYMid meet\" >\n\n    {#each $sheets as sheet, index}\n        <g id=\"sheets\">\n            <rect\n                class=\"sheet print\"\n                id=\"{sheet.id}\"\n                x=\"{index * sheet.sheet_width * scale}\"\n                y=\"0\"\n                width=\"{sheet.sheet_width * scale}\"\n                height=\"{sheet.sheet_height * scale}\" />\n        </g>\n        <g id=\"panels\">\n            {#each sheet.group as panel}\n                <rect\n                    on:mouseover={showSizes}\n                    on:mouseleave={hideSizes}\n                    class=\"panel {$activePanel == panel.id ? \"active\" : \"\"} print\"\n                    id=\"{panel.id}\"\n                    x=\"{(panel.x0 + index * sheet.sheet_width) * scale}\"\n                    y=\"{panel.y0 * scale}\"\n                    width=\"{panel.width * scale}\"\n                    height=\"{panel.height * scale}\" />\n\n                    <text\n                        class=\"idh print\"\n                        x=\"{(panel.x0 + panel.width / 2 + index * sheet.sheet_width) * scale}\"\n                        y=\"{(panel.y0 + 1 + panel.height / 2) * scale}\">\n                    {panel.id}\n                    </text>\n            {/each}\n        </g>\n    {/each}\n\n</svg>\n</div>\n","<script>\n    import { sheets, csvFile, settings, panels, activePanel } from '../stores.js'\n    import { trunc } from \"../methods.js\";\n    import { Nest } from \"../nest.js\";\n    // import Import from \"./Import.svelte\";\n    import { beforeUpdate } from 'svelte'\n\n    const csvHeaderRows = 5\n    $: lines = $csvFile.contents.slice(csvHeaderRows)\n\n//    beforeUpdate(() => {\n//       if ( $csvFile.contents ) {\n//          calculateNest()\n//       }\n//     })\n\nfunction highlight() {\n    this.select()\n}\n\n    function calculateNest() {\n      let nest = Nest(\n            $csvFile.contents,\n            csvHeaderRows,                   // panel starting row csv\n            $settings.units,\n            $settings.cutter,\n            $settings.gap,\n            $settings.material\n         )\n      $panels = nest[0]\n      $sheets = nest[1]\n      $csvFile.errors = nest[2]\n   }\n\n    // function reset() {\n    //     console.log(Object.isFrozen($csvFile.original));\n    //     $csvFile.contents = [...$csvFile.original]\n    //     lines = $csvFile.contents.slice(4)\n    //     console.log(Object.isFrozen($csvFile.original));\n    // }\n\n    function addRow() {\n        let row = [lines.length + 1, , , ]\n        $csvFile.contents = [...$csvFile.contents, row]\n    }\n\n    function sortAscending(index) {\n        //add support for alpha numberic\n        lines = lines.sort( (a, b) => a[index] - b[index])\n    }\n    function sortDescending(index) {\n        lines = lines.sort( (a, b) => b[index] - a[index])\n    }\n\n\n// autoselect on focus?\n</script>\n\n\n<style>\n.container {\n    /* position: relative; */\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    overflow-y: scroll;\n    /* vertical-align: middle; */\n}\nh1{\n    /* position: relative; */\n    /* top: -3em; */\n    padding: 1.5em 0;\n}\n/* span{\n    font-size: 1.5em;\n    vertical-align: middle;\n}\nspan:hover{\n    color: lightcoral;\n    cursor: pointer;\n} */\n\nul{\n    font-size: 1.1em;\n    display: grid;\n    grid-template-columns: 3fr 2fr 4fr 4fr 1fr;\n}\n.new-row{\n    font-size: 2.5em;\n    cursor: pointer;\n    text-align: center;\n}\n.new-row{\n    color: #4bbdff;\n}\n.active{\n    background-color: rgba(240, 128, 128, 0.371);\n}\nli {\n    line-height: 2.5em;\n    text-align: center;\n    cursor: pointer;\n}\nli:hover {\n    text-decoration: overline;\n}\n input[type=\"number\"]::-webkit-outer-spin-button,\n input[type=\"number\"]::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n}\ninput:hover, input:focus {\n    color: #75cafc;\n    border-bottom: #e7fc75 solid 1px;\n}\ninput{\n    text-align: center;\n    width: 80%;\n    /* font-size: 1.15em; */\n    border: none;\n    background: none;\n    font-family: Overpass;\n    font-weight: 200;\n    color: #fde3b0;\n    border-bottom: transparent solid 1px;\n    outline: none;\n}\ninput[type=\"number\"] {\n    -moz-appearance: textfield;\n}\ndiv {\n    font-size: 0.8em;\n    /* vertical-align: bottom; */\n}\n</style>\n\n<div class=\"container\">\n    <div>\n        {#if $csvFile.name}\n\n            {#if $csvFile.errors.length}\n                <h5>ERROR{$csvFile.errors.length > 1 ? \"S\" : \"\"}:</h5>\n                {#each $csvFile.errors as error}\n                    <p>{error}</p>\n                {/each}\n            {/if}\n\n            <h1>{$csvFile.contents[0][1]}</h1>\n\n\n            <ul>\n                <li on:click={() => sortAscending(0)}>Panel</li>\n                <li on:click={() => sortDescending(1)}>Q</li>\n                <li on:click={() => sortDescending(2)}>W</li>\n                <li on:click={() => sortDescending(3)}>H</li>\n            </ul>\n            {#each lines as line}\n                <ul\n                    class=\"{$activePanel == line[0] ? \"active\" : \"\"}\"\n                    on:mouseenter={() => $activePanel = line[0]}\n                    on:mouseleave={() => $activePanel = ''}\n                >\n                    <li>\n                        <input\n                            type=\"text\"\n                            bind:value={line[0]}\n                            on:focus=\"{highlight}\"\n                            on:keyup={calculateNest} />\n                    </li>\n                    <li>\n                        <input\n                            type=\"number\"\n                            bind:value={line[1]}\n                            on:focus=\"{highlight}\"\n                            on:keyup={calculateNest}  />\n                    </li>\n                    <li>\n                        <input\n                            type=\"number\"\n                            bind:value={line[2]}\n                            on:focus=\"{highlight}\"\n                            on:keyup={calculateNest}\n                            step=\"0.03125\" />\n                    </li>\n                    <li>\n                        <input\n                            type=\"number\"\n                            bind:value={line[3]}\n                            on:focus=\"{highlight}\"\n                            on:keyup={calculateNest}\n                            step=\"0.03125\" />\n                    </li>\n                </ul>\n            {/each}\n        {/if}\n        <ul class=\"new-row\" on:click={addRow}>+</ul>\n    </div>\n</div>\n","<script>\nimport { sheets, csvFile } from '../stores.js'\nimport { trunc } from \"../methods.js\";\n</script>\n\n<style>\ndiv {\n    font-size: 0.75em;\n    line-height: 1.5em;\n    /* vertical-align: 0; */\n}\nsup {\n    font-size: .5em;\n    line-height: 1.5em;\n    /* vertical-align: .4em */\n}\n</style>\n\n<div>\n    {#if $csvFile.name}\n        {#if $sheets.length > 1}\n            <p>filled sheets</p>\n            <p>waste: {parseInt($sheets\n                .slice(0, -1)\n                .reduce( ( total, waste, i, array ) =>\n                    total + waste.waste_ratio * 100 / array.length , 0 ))}%\n            </p>\n        {/if}\n    {/if}\n</div>\n\n{#each $sheets as sheet, index}\n    <div>\n        <h4>{sheet.id}</h4>\n        <p>used area: {trunc( sheet.area / 144, 2)} pi<sup>2</sup></p>\n        <p>waste area: {trunc(sheet.waste_area / 144, 2)} pi<sup>2</sup></p>\n        <p>waste: {trunc(sheet.waste_ratio * 100, 2)}%</p>\n    </div>\n{/each}\n","import App from './App.svelte'\n\nconst app = new App({\n  target: document.body\n})\n\nexport default app"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","null_to_empty","value","set_store_value","ret","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","undefined","set_data","wholeText","set_input_value","input","current_component","set_current_component","get_current_component","Error","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","skip_bound","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","CUTTER","GAP","ERRORS","MATERIAL","width","height","margins","max_width","max_height","Nest","panels","firstPanelRow","metricUnits","cutter","gap","material","PANELS","List","slice","flatMap","id","quantity","n","uniqueIDs","q","parseFloat","quantityIDs","Panel","flat","fillColumn","column","widest","place","maxWidth","fitsColumn","row","fitsRow","ascendingWidth","fillSheet","columns","sheet","fitsSheet","addCoordinates","multiplier","startX","startY","xPos","last","yPos","group","j","rows","filledHeight","x0","y0","rowCol","k","notPlaced","Column","columnWidth","columnHeight","columnArea","makeColumns","sheets","Sheet","filledWidth","filledArea","list","flatten","makeSheets","Placement","placed","uniqueID","super","area","sheet_width","sheet_height","sheet_area","waste_area","waste_ratio","dimensions","flattened","first","sort","panel","ascendingHeight","reduce","total","totalHeight","totalArea","totalWidth","maxHeight","remainingHeight","remainingWidth","trunc","number","places","parseInt","formatDate","date","format","mm","getMonth","dd","getDate","yy","getFullYear","toString","yyyy","H","getHours","M","getMinutes","S","getSeconds","replace","matched","X_HOME","Y_HOME","SAFE_HEIGHT","HEADER","tool","speed","fileName","Date","RAPID_MOVE","x","y","z","RETRACT_MOVE","PLUNGE_MOVE","f","FEED_MOVE","MOVE_X","MOVE_Y","Gcode","thickness","output","x_","y_","yStart","yEnd","profileCut","join","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","sessionStore","key","initial","JSON","stringify","toObj","parse","sessionStorage","getItem","setItem","saved","blancCSV","errors","contents","settings","localStorage","localStore","units","csvFile","svg","activePanel","autoBom","console","warn","test","Blob","XMLHttpRequest","open","responseType","onload","g","response","onerror","error","send","status","e","dispatchEvent","MouseEvent","createEvent","initMouseEvent","window","self","global","navigator","userAgent","saveAs","HTMLAnchorElement","prototype","h","URL","webkitURL","download","rel","href","origin","location","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","title","body","innerText","HTMLElement","safari","FileReader","onloadend","result","readAsDataURL","module","toFloat","str","isNaN","includes","split","item","frac","encodeURIComponent","file","badFile","csv","$csvFile","beforeUpdate","calculateNest","today","nest","$settings","$panels","$sheets","cnc","files","reader","readAsText","strData","headerRows","strDelimiter","regexPattern","RegExp","arrData","arrMatches","exec","strMatchedDelimiter","strMatchedValue","inner","CSVToArray","svgFile","top","left","afterUpdate","$svg","innerHTML","viewBoxW","viewBoxH","$activePanel","rect","getBoundingClientRect","bottom","baseVal","valueAsString","highlight","select","sortAscending","lines","sortDescending","line","waste","array"],"mappings":"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"}