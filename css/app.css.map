{
  "version": 3,
  "file": "app.css",
  "sources": [
    "../../App.svelte",
    "../../Editor.svelte",
    "../../Viewer.svelte",
    "../../Import.svelte",
    "../../Settings.svelte",
    "../../Tooltips.svelte",
    "../../Headers.svelte",
    "../../CheckInputs.svelte",
    "../../NumInputs.svelte",
    "../../TextInputs.svelte"
  ],
  "sourcesContent": [
    "<script>\nimport Import from './components/Import.svelte'\nimport Editor from './components/Editor.svelte'\nimport Viewer from './components/Viewer.svelte'\nimport Settings from './components/Settings.svelte'\nimport { Nest } from './nest.js'\nimport { Gcode } from './gCode.js'\nimport { settings, data } from './stores.js'\nimport { toInches } from './helperFunctions.js'\n\nfunction update() {\n  $data.name = $data.csv.contents[0][1]\n  $data.csv.panels = $data.csv.contents.slice($data.csv.headerRows)\n  calculateNest()\n  $data.csv.output = $data.csv.contents.join('\\n')\n  $data.cnc = Gcode($data, $settings)\n}\n\nfunction calculateNest() {\n  let nest = Nest(panelsDimensionsInches(), $settings)\n  $data.sheets = nest.sheets\n  $data.errors = nest.errors\n  $data.averageWaste = nest.averageWaste\n\n  function panelsDimensionsInches() {\n    if ($settings.units)\n      return $data.csv.panels.map((i) => [\n        i[0],\n        i[1],\n        toInches(i[2]),\n        toInches(i[3]),\n      ])\n    return $data.csv.panels\n  }\n}\nupdate()\n\n</script>\n\n<style>\n.container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: grid;\n  grid-template-columns: 8rem minmax(24rem, 20vw) 1fr;\n  overflow: hidden;\n}\n\n.import {\n  position: relative;\n  margin: 2rem;\n  display: flex;\n  flex-direction: column;\n  z-index: 3;\n}\n\n.controls {\n  position: relative;\n  /* height: calc(100vh - 4rem); */\n  margin: 2rem 0;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  z-index: 2;\n}\n\n.main {\n  z-index: 4;\n}\n\n.splash {\n  position: absolute;\n  top: 10vh;\n  left: 45vw;\n  width: 40vw;\n  height: 40vh;\n  z-index: -1;\n}\n.splash-img {\n  position: relative;\n  left: 20%;\n  width: 40%;\n  height: 100%;\n  background-image: url('../favicon.ico');\n  background-size: contain;\n  background-position: left bottom;\n  background-repeat: no-repeat;\n  z-index: -1;\n}\nh1,\nh6 {\n  color: var(--second);\n  position: relative;\n  left: 20%;\n}\n\n</style>\n\n<svelte:body on:change=\"{update}\" />\n<div class=\"container\">\n  <div class=\"import\">\n    <Import on:update=\"{update}\" />\n  </div>\n  <div class=\"controls\">\n    <Settings on:update=\"{update}\" />\n    <Editor on:update=\"{update}\" />\n  </div>\n  <div class=\"main\" on:click=\"{() => ($settings.show = false)}\">\n    <Viewer />\n    {#if !$data.sheets.length}\n      <div class=\"splash\">\n        <div class=\"splash-img\"></div>\n        <h1><span>Ahhh! Nest:</span></h1>\n        <h6><span>sauver une feuille, peut-être deux</span></h6>\n      </div>\n    {/if}\n  </div>\n</div>\n",
    "<script>\nimport { settings, data } from '../stores.js'\nimport { toMM, toInches, trunc } from '../helperFunctions.js'\nimport Tooltips from './Tooltips.svelte'\nimport { createEventDispatcher } from 'svelte'\n\nconst dispatch = createEventDispatcher()\n\n$: metric = JSON.parse($data.csv.contents[3][1])\n$: findMax = (directionStr) => {\n  let max = $settings.material[directionStr] - $settings.material.margins * 2\n  return metric ? toMM(max) : max\n}\n\nfunction highlight() {\n  this.select()\n}\n\nfunction addRow() {\n  let row = [$data.csv.panels.length + 1, 0, 0, 0]\n  $data.csv.contents = [...$data.csv.contents, row]\n  dispatch('update')\n}\n\nfunction sortAscending(index) {\n  $data.csv.panels = $data.csv.panels.sort((a, b) => a[index] - b[index])\n}\nfunction sortDescending(index) {\n  $data.csv.panels = $data.csv.panels.sort((a, b) => b[index] - a[index])\n}\n\nfunction convertUnits() {\n  let convert = metric ? toInches : toMM\n  $data.csv.panels.forEach((index) => {\n    index[2] = convert(index[2])\n    index[3] = convert(index[3])\n  })\n  $data.csv.contents[3][1] = $settings.units = !metric\n}\n\n</script>\n\n<style>\n.wrapper {\n  height: max-content;\n  padding: 0;\n}\n\n.info {\n  color: var(--blue);\n  margin: 0.3rem 0;\n  border-top: 1px solid;\n  border-bottom: 1px solid;\n  padding-bottom: 1rem;\n}\n.info:hover {\n  background-color: var(--second-bg);\n  cursor: pointer;\n}\n.check {\n  position: absolute;\n  right: 1rem;\n  margin-top: 1rem;\n  font-size: var(--xxlarge);\n  visibility: hidden;\n}\n.info:hover .check {\n  visibility: visible;\n}\n\nul {\n  font-size: var(--small);\n  display: grid;\n  grid-template-columns: 3fr 2fr 3fr 3fr;\n  border-bottom: 1px solid;\n}\n.new-row {\n  color: var(--blue);\n  font-size: var(--xxlarge);\n  cursor: pointer;\n  text-align: center;\n}\n.active {\n  background-color: var(--second-bg);\n}\nli {\n  position: relative;\n  line-height: var(--xxlarge);\n  text-align: center;\n  cursor: pointer;\n}\ninput {\n  width: 100%;\n  height: 100%;\n  border-radius: 0;\n  text-align: center;\n}\ninput:after {\n  content: 'in';\n}\ninput:hover {\n  color: var(--primary-bg);\n  background-color: var(--second);\n}\ninput:hover::selection {\n  color: var(--primary);\n  transition: 0.2s;\n}\ndiv {\n  padding-top: 1rem;\n}\n.error {\n  color: var(--third);\n}\n\n.error:hover {\n  background-color: var(--primary-bg);\n  cursor: auto;\n}\n\n</style>\n\n<div class=\"wrapper\">\n  <div>\n    <ul class=\"header\">\n      <li on:click=\"{() => sortAscending(0)}\">\n        <h1>\n          ⊛\n          <Tooltips\n            under=\"{true}\"\n            french=\"Nom de panneau\"\n            english=\"Panel Name\" />\n        </h1>\n      </li>\n      <li on:click=\"{() => sortDescending(1)}\">\n        <h1>\n          ⧉\n          <Tooltips under=\"{true}\" french=\"Quantité\" english=\"Quantity\" />\n        </h1>\n      </li>\n      <li on:click=\"{() => sortDescending(2)}\">\n        <!-- <h4>∣X∣⍈</h4> -->\n        <h1>\n          ⍈\n          <Tooltips\n            under=\"{true}\"\n            french=\"Largeur ({metric ? 'mm' : 'po'})\"\n            english=\"Width ({metric ? 'mm' : 'in'})\" />\n        </h1>\n      </li>\n      <li on:click=\"{() => sortDescending(3)}\">\n        <!-- <h4>Y⇫⍐</h4> -->\n        <h1>\n          ⍗\n          <Tooltips\n            under=\"{true}\"\n            french=\"Hauteur ({metric ? 'mm' : 'po'})\"\n            english=\"Height ({metric ? 'mm' : 'in'})\" />\n        </h1>\n      </li>\n    </ul>\n    {#each $data.csv.panels as line}\n      <ul\n        class=\"{$settings.activePanel == line[0] ? 'active' : ''}\"\n        on:mouseenter=\"{() => ($settings.activePanel = line[0])}\"\n        on:mouseleave=\"{() => ($settings.activePanel = '')}\">\n        <li>\n          <input type=\"text\" bind:value=\"{line[0]}\" on:focus=\"{highlight}\" />\n          <Tooltips\n            under=\"{true}\"\n            french=\"Nom de panneau\"\n            english=\"Panel Name\" />\n        </li>\n        <li>\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"100\"\n            bind:value=\"{line[1]}\"\n            on:focus=\"{highlight}\" />\n          <Tooltips under=\"{true}\" french=\"Quantité\" english=\"Quantity\" />\n        </li>\n        <li>\n          <input\n            class:error=\"{line[2] > findMax('width')}\"\n            type=\"number\"\n            min=\"0\"\n            max=\"{findMax('width')}\"\n            bind:value=\"{line[2]}\"\n            on:focus=\"{highlight}\"\n            step=\"{metric ? 0.25 : 0.03125}\" />\n          <Tooltips\n            under=\"{true}\"\n            french=\"Largeur ({metric ? 'mm' : 'po'})\"\n            english=\"Width ({metric ? 'mm' : 'in'})\" />\n        </li>\n        <li>\n          <input\n            class:error=\"{line[3] > findMax('height')}\"\n            type=\"number\"\n            min=\"0\"\n            max=\"{findMax('height')}\"\n            bind:value=\"{line[3]}\"\n            on:focus=\"{highlight}\"\n            step=\"{metric ? 0.25 : 0.03125}\" />\n          <Tooltips\n            under=\"{true}\"\n            french=\"Hauteur ({metric ? 'mm' : 'po'})\"\n            english=\"Height ({metric ? 'mm' : 'in'})\" />\n        </li>\n      </ul>\n    {/each}\n    <ul class=\"new-row\" on:click=\"{addRow}\" role=\"button\">+</ul>\n  </div>\n\n  {#if $data.errors.length}\n    <div class=\"info error\">\n      <h5 class=\"error\">ERREUR{$data.errors.length > 1 ? 'S' : ''}:</h5>\n      {#each $data.errors as error}\n        <p class=\"error\">{error}</p>\n      {/each}\n    </div>\n  {/if}\n\n  {#if $data.averageWaste}\n    <div class=\"info\" on:click=\"{() => ($data.averageWaste = false)}\">\n      <h5 class=\"check\">✕</h5>\n      <h5>Moyen perte/feuille: {trunc($data.averageWaste.all, 1)} %</h5>\n      <h5>\n        Moyen perte/feuille plein:\n        {$data.sheets.length > 1 ? trunc($data.averageWaste.full, 1) : '-'}\n        %\n      </h5>\n    </div>\n  {/if}\n</div>\n",
    "<script>\n//TO DO : units to mm scale setting\n\nimport { settings, data } from '../stores.js'\nimport { afterUpdate } from 'svelte'\nimport { trunc } from '../helperFunctions.js'\n\nlet id,\n  displayInfo = false,\n  top = 0,\n  left = 0,\n  scale = 90,\n  // scale = $settings.units ? 90 * 25.4 : 90,\n  svgFile\n\nafterUpdate(() => {\n  $data.svg = svgFile.innerHTML.toString()\n})\n\nfunction panelHoverOn() {\n  $settings.activePanel = this.id\n}\nfunction panelHoverOff() {\n  $settings.activePanel = ''\n}\n\nfunction showInfo() {\n  displayInfo = true\n  let rect = this.getBoundingClientRect()\n  top = (rect.bottom - rect.top) / 2 + rect.top\n  left = (rect.right - rect.left) / 2 + rect.left\n  id = this.id\n}\nfunction hideInfo() {\n  displayInfo = false\n}\n\nfunction flipY(y, height) {\n  return $settings.material.height - height - y\n}\n\nfunction shift(index) {\n  let maxColumns = 5,\n    rows = Math.ceil($data.sheets.length / maxColumns),\n    columns = Math.ceil($data.sheets.length / rows),\n    row = Math.ceil((index + 1) / columns) - 1,\n    column = index % columns,\n    x = column * $settings.material.width,\n    y = row * $settings.material.height,\n    w = columns * $settings.material.width,\n    h = rows * $settings.material.height\n  return { x, y, w, h }\n}\n\n</script>\n\n<style>\n.viewer {\n  height: 100vh;\n  padding: 2vh 2vw;\n  z-index: 1;\n}\n.infocard {\n  position: fixed;\n  padding: 1rem;\n  background-color: var(--primary);\n  border: 1px solid var(--primary-bg);\n  border-radius: 4px;\n  font-weight: 100;\n  line-height: 1.5em;\n  color: var(--primary-bg);\n  font-size: 1.3rem;\n  z-index: 2;\n  transform: translate(-50%, -50%);\n  pointer-events: none;\n}\nsup {\n  font-size: 0.5em;\n  line-height: 1.5em;\n}\nsvg {\n  height: 100%;\n  width: 100%;\n  margin: auto auto;\n  overflow: hidden;\n}\n\n.panel {\n  stroke: var(--second);\n  fill: var(--primary-bg);\n  transition: 0.2s;\n}\n\n.active {\n  fill: var(--second);\n  stroke: var(--primary);\n  transition: 0.2s;\n}\n.sheet {\n  stroke: var(--primary);\n  fill: var(--primary-bg);\n  /* fill-opacity: 0; */\n  transition: 0.2s;\n}\n\n.sheet:hover {\n  fill: var(--primary);\n  fill-opacity: 1;\n  transition: 0.2s;\n}\n\n.id {\n  text-anchor: middle;\n  fill: var(--second);\n  stroke: none;\n  font-weight: 300;\n  pointer-events: none;\n  cursor: default;\n}\n.id.active {\n  fill: var(--primary-bg);\n}\n\n</style>\n\n{#if displayInfo}\n  <div class=\"infocard\" style=\"left: {left}px; top: {top}px;\">\n    <h4>{$data.sheets[id].id}</h4>\n    <p>\n      area des panneaux:\n      {trunc($data.sheets[id].area / 144, 2)}\n      pi<sup>2</sup>\n    </p>\n    <p>\n      area de perte:\n      {trunc($data.sheets[id].waste_area / 144, 2)}\n      pi<sup>2</sup>\n    </p>\n    <p>% de perte: {trunc($data.sheets[id].waste_ratio * 100, 2)}%</p>\n  </div>\n{/if}\n\n<div class=\"viewer\" bind:this=\"{svgFile}\">\n  <svg\n    class=\"print\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    width=\"{shift($data.sheets.last).w * scale || 0}\"\n    height=\"{shift($data.sheets.last).h * scale || 0}\"\n    viewBox=\"0 0 {shift($data.sheets.last).w * scale || 0} {shift($data.sheets.last).h * scale || 0}\"\n    preserveAspectRatio=\"xMidYMid meet\">\n    {#each $data.sheets as sheet, index}\n      <g id=\"sheets\">\n        <rect\n          style=\"stroke-width: {$settings.material.margins * scale}px;\"\n          on:mouseover=\"{showInfo}\"\n          on:mouseleave=\"{hideInfo}\"\n          class=\"sheet print\"\n          id=\"{index}\"\n          x=\"{(shift(index).x + $settings.material.margins / 2 - $data.offset.X) * scale}\"\n          y=\"{(shift(index).y + $settings.material.margins / 2 + $data.offset.Y) * scale}\"\n          width=\"{(sheet.sheet_width - $settings.material.margins) * scale}\"\n          height=\"{(sheet.sheet_height - $settings.material.margins) * scale}\"></rect>\n      </g>\n      <g id=\"panels\">\n        {#each sheet.group as panel}\n          <rect\n            style=\"stroke-width: {$settings.cnc[$settings.tools.profile].diameter * scale}px;\"\n            on:mouseover=\"{panelHoverOn}\"\n            on:mouseleave=\"{panelHoverOff}\"\n            class=\"panel {$settings.activePanel == panel.id ? 'active' : ''} print\"\n            id=\"{panel.id}\"\n            x=\"{(panel.x + shift(index).x) * scale}\"\n            y=\"{(flipY(panel.y, panel.height) + shift(index).y) * scale}\"\n            width=\"{panel.width * scale}\"\n            height=\"{panel.height * scale}\"></rect>\n\n          <text\n            style=\"font-size: {scale * (panel.id.length > 6 ? Math.min(panel.height * 0.4, 2.5) : Math.min(panel.height * 0.8, 5))}px;\"\n            class=\"id {$settings.activePanel == panel.id ? 'active' : ''} print\"\n            x=\"{(panel.x + shift(index).x + panel.width / 2) * scale}\"\n            y=\"{(flipY(panel.y, panel.height) + shift(index).y + Math.min(panel.height * 0.8, 5) / 3 + panel.height / 2) * scale}\">\n            {panel.id}\n          </text>\n        {/each}\n      </g>\n    {/each}\n  </svg>\n</div>\n",
    "<script>\nimport { settings, data } from '../stores.js'\nimport { formatDate } from '../helperFunctions.js'\nimport { CSVToArray } from '../csv.js'\nimport Tooltips from './Tooltips.svelte'\nimport { createEventDispatcher } from 'svelte'\n\nconst dispatch = createEventDispatcher()\n\nconst time = () => formatDate(new Date(), '-HHhMM')\n\nlet badFile = false,\n  keys = {},\n  dlCSV,\n  dlSVG,\n  dlCNC,\n  project = [],\n  open\n\nfunction updatePanels() {\n  $settings.units = JSON.parse($data.csv.contents[3][1])\n  dispatch('update')\n}\n\nfunction handleKeyDown(e) {\n  keys[e.code] = true\n  const key = (code) => (keys['AltLeft'] || keys['AltRight']) && keys[code]\n  if (key('KeyO')) setTimeout(() => file.click(), 140)\n  if (key('KeyN')) newFile()\n  if (key('KeyV')) dlCSV.click()\n  if (key('KeyG')) dlSVG.click()\n  if (key('KeyC')) dlCNC.click()\n  if (key('KeyP')) $settings.subsettings.show = !$settings.subsettings.show\n}\n\nfunction handleKeyUp(e) {\n  delete keys[e.code]\n}\n\nfunction newFile() {\n  $data.csv.contents = [...$data.csv.new]\n  updatePanels()\n  dispatch('name')\n}\n\nfunction loadFile() {\n  if (!open.files[0]) return\n  if (open.files[0].name.includes('.csv')) {\n    let reader = new FileReader()\n    reader.readAsText(open.files[0])\n    reader.onload = function (event) {\n      $data.csv.contents = CSVToArray(event.target.result, $data.csv.headerRows) // csv file\n      badFile = false\n      updatePanels()\n      return\n    }\n  }\n  badFile = true\n}\n\n</script>\n\n<style>\n.file-mgmt {\n  display: flex;\n  flex-direction: column;\n  vertical-align: center;\n  align-items: center;\n  text-align: center;\n  justify-content: space-between;\n  height: 22rem;\n}\n\n.file-icon {\n  position: relative;\n  height: 2em;\n  width: 1.7em;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n  cursor: pointer;\n  transition: 0.1s;\n}\n.file-icon:hover,\n.file-icon:focus,\ninput:focus + .file-icon {\n  height: 2.5em;\n  width: 2.3em;\n  transition: 0.1s;\n  outline: none;\n}\n.inputfile {\n  top: 0.5em;\n  width: 0.1px;\n  height: 0.1px;\n  opacity: 0;\n  overflow: hidden;\n  position: absolute;\n  z-index: -1;\n}\n.blocked {\n  cursor: default;\n}\n.blocked:hover::after,\n.blocked:hover::before {\n  opacity: 0;\n}\n.blocked:hover {\n  height: 2em;\n  width: 1.7em;\n}\n.badfile {\n  background-image: url('../img/upload-bad.png');\n}\n.upload {\n  background-image: url('../img/upload.png');\n}\n.upload:hover {\n  background-image: url('../img/upload-hover.png');\n}\n.new {\n  background-image: url('../img/new.png');\n}\n.new:hover {\n  background-image: url('../img/new-hover.png');\n}\n.dl-svg {\n  background-image: url('../img/dl-svg.png');\n}\n.dl-svg-block {\n  background-image: url('../img/dl-svg-block.png');\n}\n.dl-svg:hover {\n  background-image: url('../img/dl-svg-hover.png');\n}\n.dl-csv {\n  background-image: url('../img/dl-csv.png');\n}\n.dl-csv-block {\n  background-image: url('../img/dl-csv-block.png');\n}\n.dl-csv:hover {\n  background-image: url('../img/dl-csv-hover.png');\n}\n.dl-cnc {\n  background-image: url('../img/dl-cnc.png');\n}\n.dl-cnc-block {\n  background-image: url('../img/dl-cnc-block.png');\n}\n.dl-cnc:hover {\n  background-image: url('../img/dl-cnc-hover.png');\n}\n\n</style>\n\n<svelte:head>\n  <title>{'Ahhh Nest: ' + $data.csv.contents[0][1] || 'Ahhh! Nest'}</title>\n</svelte:head>\n<svelte:window on:keydown=\"{handleKeyDown}\" on:keyup=\"{handleKeyUp}\" />\n\n<div class=\"file-mgmt\">\n  <!-- <div\n    tabindex=\"0\"\n    role=\"button\"\n    class=\"file-icon setting-icon\"\n    on:click=\"{() => ($settings.show = !$settings.show)}\">\n    <Tooltips\n      french=\"ncnc + projet parametre  (alt + p)\"\n      english=\"cnc + project settings (alt + p)\" />\n  </div> -->\n  <input\n    class=\"inputfile\"\n    name=\"file\"\n    id=\"file\"\n    type=\"file\"\n    on:change=\"{loadFile}\"\n    bind:this=\"{open}\" />\n  <label\n    for=\"file\"\n    class=\"file-icon {badFile ? 'badfile' : 'upload'}\"\n    on:mouseover=\"{() => (badFile = false)}\">\n    <Tooltips\n      french=\"ouvrir fichier .csv (alt + o)\"\n      english=\"open .csv file (alt + o)\" />\n  </label>\n  <div tabindex=\"0\" role=\"button\" class=\"file-icon new\" on:click=\"{newFile}\">\n    <Tooltips french=\"nouveau fichier (alt + n)\" english=\"new file (alt + n)\" />\n  </div>\n  {#if $data.sheets.length}\n    <a\n      href=\"data:text/plain;charset=utf-8,{encodeURIComponent($data.csv.output)}\"\n      download=\"{$data.name + time()}.csv\"\n      role=\"button\"\n      class=\"file-icon dl-csv\"\n      bind:this=\"{dlCSV}\">\n      <Tooltips\n        french=\"téléchargez le fichier .csv  (alt + v)\"\n        english=\"download .csv file (alt + v)\" />\n    </a>\n    <a\n      href=\"data:text/plain;charset=utf-8,{encodeURIComponent($data.svg)}\"\n      download=\"{$data.name + time()}.svg\"\n      alt=\"download svg file\"\n      role=\"button\"\n      class=\"file-icon dl-svg\"\n      bind:this=\"{dlSVG}\">\n      <Tooltips\n        french=\"telechargez le fichier .svg (alt + g)\"\n        english=\"download .svg file (alt + g)\" />\n    </a>\n    <a\n      href=\"data:text/plain;charset=utf-8,{encodeURIComponent($data.cnc)}\"\n      download=\"{$data.name + time()}.cnc\"\n      role=\"button\"\n      class=\"file-icon dl-cnc\"\n      bind:this=\"{dlCNC}\">\n      <Tooltips\n        french=\"ntelechargez le fichier .cnc (alt + c)\"\n        english=\"download .cnc file (alt + c)\" />\n    </a>\n  {:else}\n    <div class=\"file-icon dl-csv-block blocked\"></div>\n    <div class=\"file-icon dl-svg-block blocked\"></div>\n    <div class=\"file-icon dl-cnc-block blocked\"></div>\n  {/if}\n</div>\n",
    "<script>\nimport { data, settings } from '../stores.js'\nimport { toMM, toInches } from '../helperFunctions.js'\nimport Headers from './Headers.svelte'\nimport NumInputs from './NumInputs.svelte'\nimport TextInputs from './TextInputs.svelte'\nimport CheckInputs from './CheckInputs.svelte'\n// import { createEventDispatcher } from 'svelte'\n\n// const dispatch = createEventDispatcher()\nconst french = $settings.language === 'fr'\nlet thickness = $settings.material.thickness\n\nfunction updateCut() {\n  $data.tools.profile.cut_depth -= thickness - $settings.material.thickness\n  thickness = $settings.material.thickness\n}\nfunction convertCSVUnits() {\n  let metric = JSON.parse($data.csv.contents[3][1])\n  $data.csv.panels.forEach((index) => {\n    index[2] = convertUnit(metric, index[2])\n    index[3] = convertUnit(metric, index[3])\n  })\n  $data.csv.contents[3][1] = $settings.units = !metric\n}\n\nfunction convertDiameterUnits() {\n  let tool = $settings.cnc[$settings.tools.tool]\n  tool.diameter = convertUnit(tool.mm, tool.diameter)\n}\n\nfunction convertUnit(unit, value) {\n  let convert = unit ? toInches : toMM\n  return convert(value)\n}\n\nfunction activeEngraver() {\n  activeLibraryTool($settings.tools.engraver)\n}\n\nfunction activeProfile() {\n  activeLibraryTool($settings.tools.profile)\n}\n\nfunction activeLibraryTool(activate) {\n  $settings.tools.tool = activate\n}\n\n</script>\n\n<style>\n.settings {\n  position: relative;\n  z-index: 2;\n  padding-bottom: 2px;\n  border-bottom: 1px solid var(--second-bg);\n}\n.subsetting {\n  height: 0;\n  width: 100%;\n  overflow: hidden;\n  opacity: 0;\n}\n.subsetting.active {\n  height: auto;\n  opacity: 1;\n}\n.title {\n  cursor: pointer;\n  font-size: var(--large);\n  padding: 0.7rem 0;\n  text-transform: uppercase;\n  font-weight: 100;\n  letter-spacing: 1.2rem;\n  display: grid;\n  grid-template-columns: 10fr 1fr;\n  border-bottom: 1px solid var(--second-bg);\n}\n.title:hover,\n.title.active:hover {\n  border-bottom: 1px solid var(--second);\n}\n.transparent {\n  right: 0;\n  font-size: var(--xxlarge);\n  color: rgba(0, 0, 0, 0);\n}\n.title:hover .transparent {\n  color: var(--second);\n}\n\nh5 {\n  font-size: var(--small);\n  padding-left: 2rem;\n  white-space: nowrap;\n  display: flex;\n}\nselect {\n  padding-left: 2rem;\n  padding-right: 1rem;\n  font-weight: 100;\n  font-family: Quicksand, sans-serif;\n  letter-spacing: 0.05rem;\n  direction: rtl;\n  color: var(--primary);\n  background-color: var(--primary-bg);\n  outline: none;\n  border: none;\n}\nselect:focus,\nselect:hover {\n  cursor: pointer;\n  text-decoration: underline;\n  text-underline-offset: 0.1em;\n}\noption {\n  direction: ltr;\n}\n.spread {\n  width: 2%;\n  flex: 2 !important;\n}\n\n</style>\n\n<div class=\"settings\">\n  <div\n    class=\"title\"\n    class:active=\"{$settings.subsettings.show}\"\n    on:click=\"{() => ($settings.subsettings.show = !$settings.subsettings.show)}\">\n    <span>❁{french ? 'Parametre' : 'Settings'} </span>\n    <span class=\"transparent\"> {$settings.subsettings.show ? '⩚' : '⩛'} </span>\n  </div>\n  <div class=\"subsetting\" class:active=\"{$settings.subsettings.show}\">\n    <!-- project -->\n    <Headers\n      on:toggle=\"{() => ($settings.subsettings.project = !$settings.subsettings.project)}\"\n      open=\"{$settings.subsettings.project}\"\n      icon=\"⟐\"\n      french=\"Projet\"\n      english=\"Project\" />\n    <div class=\"subsetting\" class:active=\"{$settings.subsettings.project}\">\n      <TextInputs\n        english=\"Billing #\"\n        french=\"Facture #\"\n        bind:value=\"{$data.csv.contents[0][1]}\" />\n      <TextInputs\n        english=\"{$data.csv.contents[0][4] ? $data.csv.contents[0][4] : 'Product'}\"\n        french=\"{$data.csv.contents[0][4] ? $data.csv.contents[0][4] : 'Produit'}\"\n        bind:value=\"{$data.csv.contents[0][5]}\" />\n      <CheckInputs\n        on=\"☑︎\"\n        off=\"☐\"\n        french=\"Graver les noms des panneaux\"\n        english=\"Engrave the panel names\"\n        bind:checked=\"{$data.tools.engraver.engrave}\" />\n      <CheckInputs\n        on=\"mm\"\n        off=\"{$settings.language.includes('fr') ? 'po' : 'in'}\"\n        french=\"Unites\"\n        english=\"Units\"\n        on:toggle=\"{convertCSVUnits}\"\n        bind:checked=\"{$settings.units}\" />\n    </div>\n    <!-- sheet info -->\n    <Headers\n      on:toggle=\"{() => ($settings.subsettings.sheet = !$settings.subsettings.sheet)}\"\n      open=\"{$settings.subsettings.sheet}\"\n      icon=\"☐\"\n      english=\"Material\"\n      french=\"Matériau\" />\n    <div class=\"subsetting\" class:active=\"{$settings.subsettings.sheet}\">\n      <TextInputs\n        english=\"{$data.csv.contents[0][2] ? $data.csv.contents[0][2] : 'Type of panel'}\"\n        french=\"{$data.csv.contents[0][2] ? $data.csv.contents[0][2] : 'Sorte de panneau'}\"\n        bind:value=\"{$data.csv.contents[0][3]}\" />\n      <NumInputs\n        english=\"Width\"\n        french=\"Largeur\"\n        max=\"61\"\n        bind:value=\"{$settings.material.width}\"\n        step=\"0.0625\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Height\"\n        french=\"Hauteur\"\n        bind:value=\"{$settings.material.height}\"\n        max=\"121\"\n        step=\"0.0625\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Thickness\"\n        french=\"Épaisseur\"\n        on:changed=\"{updateCut}\"\n        bind:value=\"{$settings.material.thickness}\"\n        max=\"5\"\n        step=\"0.005\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Margins\"\n        french=\"Marges\"\n        bind:value=\"{$settings.material.margins}\"\n        max=\"5\"\n        step=\"0.05\"\n        measurement=\"{'\"'}\" />\n    </div>\n    <!-- nesting options -->\n    <Headers\n      on:toggle=\"{() => ($settings.subsettings.nest = !$settings.subsettings.nest)}\"\n      open=\"{$settings.subsettings.nest}\"\n      icon=\"⊞\"\n      english=\"Nesting\"\n      french=\"Nesting\" />\n    <div class=\"subsetting\" class:active=\"{$settings.subsettings.nest}\">\n      <CheckInputs\n        english=\"Aligned to the\"\n        french=\"Aligné avec le\"\n        bind:checked=\"{$settings.nestDirectionBottom}\"\n        on=\"{french ? 'bas' : 'Bottom'} ⤓\"\n        off=\"{french ? 'haut' : 'Top'} ⤒\" />\n      <h5>\n        {french ? 'Classé par le:' : 'Sorted by:'}\n        <span class=\"spread\">{''}</span>\n        <div class=\"filler\">{''}</div>\n        <select class=\"right\" bind:value=\"{$settings.nestOrder}\">\n          <option value=\"automatic\">\n            <span>{french ? 'Automatique' : 'Automatic'}</span>\n          </option>\n          <option value=\"widest\">\n            <span>{french ? 'Plus large' : 'Widest'} ↔︎</span>\n          </option>\n          <option value=\"tallest\">\n            <span>{french ? 'Plus haut' : 'Tallest'} ↕︎</span>\n          </option>\n          <option value=\"biggest\">\n            <span>{french ? 'Plus grand' : 'Biggest'} ⤢</span>\n          </option>\n        </select>\n      </h5>\n      {#if $settings.nestOrder != 'automatic'}\n        <CheckInputs\n          english=\"Placement direction\"\n          french=\"Direction de placement\"\n          bind:checked=\"{$settings.nestTypeColumn}\"\n          on=\"{french ? 'Colonnes' : 'Columns'} ⇈\"\n          off=\"{french ? 'Lignes' : 'Rows'} ⇉\" />\n      {/if}\n    </div>\n    <!-- cutter -->\n    <Headers\n      on:toggle=\"{() => ($settings.subsettings.profile = !$settings.subsettings.profile)}\"\n      open=\"{$settings.subsettings.profile}\"\n      icon=\"⨆\"\n      english=\"Profile cut\"\n      french=\"Coupe profile\" />\n    <div class=\"subsetting\" class:active=\"{$settings.subsettings.profile}\">\n      <h5>\n        {french ? 'Outil:' : 'Tool:'}\n        <span class=\"spread\">{''}</span>\n        <!-- svelte-ignore a11y-no-onchange -->\n        <select\n          bind:value=\"{$settings.tools.profile}\"\n          on:change=\"{activeProfile}\">\n          {#each Object.keys($settings.cnc) as tool}\n            {#if $settings.cnc[tool].type.includes('mill')}\n              <option value=\"{tool}\">\n                ({tool}) -\n                {$settings.cnc[tool].diameter}\n                {$settings.cnc[tool].type}\n              </option>\n            {/if}\n          {/each}\n        </select>\n      </h5>\n      <NumInputs\n        english=\"Cut depth\"\n        french=\"Profondeur coupe\"\n        bind:value=\"{$data.tools.profile.cut_depth}\"\n        max=\"{$settings.cnc[$settings.tools.profile].max_depth}\"\n        step=\"0.05\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Smallest for one pass\"\n        french=\"Plus petit pour un passe\"\n        bind:value=\"{$data.tools.profile.min_size}\"\n        max=\"{$settings.material.width}\"\n        step=\"0.5\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Last pass link\"\n        french=\"Lien pour dernier passe\"\n        bind:value=\"{$data.tools.profile.link}\"\n        max=\"{$settings.material.thickness}\"\n        step=\"0.005\"\n        measurement=\"{'\"'}\" />\n    </div>\n    <!-- engraver -->\n    <Headers\n      on:toggle=\"{() => ($settings.subsettings.engraver = !$settings.subsettings.engraver)}\"\n      open=\"{$settings.subsettings.engraver}\"\n      icon=\"⋁\"\n      english=\"Engraving\"\n      french=\"Graver\" />\n    <div class=\"subsetting\" class:active=\"{$settings.subsettings.engraver}\">\n      <h5>\n        {french ? 'Outil:' : 'Tool:'}\n        <span class=\"spread\">{''}</span>\n        <!-- svelte-ignore a11y-no-onchange -->\n        <select\n          bind:value=\"{$settings.tools.engraver}\"\n          on:change=\"{activeEngraver}\">\n          {#each Object.keys($settings.cnc) as tool}\n            {#if $settings.cnc[tool].type.includes('nose') || $settings.cnc[tool].type.includes('V-')}\n              <option value=\"{tool}\">\n                ({tool}) -\n                {$settings.cnc[tool].diameter}\n                {$settings.cnc[tool].type}\n              </option>\n            {/if}\n          {/each}\n        </select>\n      </h5>\n      <NumInputs\n        english=\"Cut depth\"\n        french=\"Profondeur coupe\"\n        bind:value=\"{$data.tools.engraver.cut_depth}\"\n        max=\"{$settings.cnc[$settings.tools.engraver].max_depth}\"\n        step=\"0.005\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Placement from left\"\n        french=\"Placement de gauche\"\n        bind:value=\"{$data.tools.engraver.xStart}\"\n        max=\"10\"\n        step=\"0.125\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Placement from bottom\"\n        french=\"Placement de bas\"\n        bind:value=\"{$data.tools.engraver.yStart}\"\n        max=\"10\"\n        step=\"0.125\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Letter height\"\n        french=\"Hauteur de la lettre\"\n        bind:value=\"{$data.tools.engraver.size}\"\n        max=\"3\"\n        step=\"0.05\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Space between letters\"\n        french=\"Espace entre les lettres\"\n        bind:value=\"{$data.tools.engraver.spacing}\"\n        max=\"2\"\n        step=\"0.05\"\n        measurement=\"{'\"'}\" />\n    </div>\n    <!-- cnc settings -->\n    <Headers\n      on:toggle=\"{() => ($settings.subsettings.offset = !$settings.subsettings.offset)}\"\n      open=\"{$settings.subsettings.offset}\"\n      icon=\"⩐\"\n      english=\"CNC Offset\"\n      french=\"Offset CNC\" />\n    <div class=\"subsetting\" class:active=\"{$settings.subsettings.offset}\">\n      {#each Object.keys($data.offset) as offset}\n        <NumInputs\n          english=\"{offset}\"\n          french=\"{offset}\"\n          bind:value=\"{$data.offset[offset]}\"\n          max=\"{$settings.units ? 2800 : 121}\"\n          step=\"{$settings.units ? 0.5 : 0.03125}\"\n          bind:unit=\"{$settings.units}\"\n          measurement=\"{$settings.units ? 'mm' : '\"'}\" />\n      {/each}\n    </div>\n    <!-- tool library -->\n    <Headers\n      on:toggle=\"{() => ($settings.subsettings.library = !$settings.subsettings.library)}\"\n      open=\"{$settings.subsettings.library}\"\n      icon=\"⩐\"\n      english=\"CNC Library\"\n      french=\"Bibliotheque CNC\" />\n    <div class=\"subsetting\" class:active=\"{$settings.subsettings.library}\">\n      <h5>\n        {french ? 'Outil #' : 'Tool #'}\n        <span class=\"spread\">{''}</span>\n        <select bind:value=\"{$settings.tools.tool}\">\n          {#each Object.keys($settings.cnc) as tool}\n            {#if $settings.cnc[tool]}\n              <option value=\"{tool}\">\n                ({tool}) -\n                {$settings.cnc[tool].diameter}{$settings.cnc[tool].mm ? 'mm' : '\"'}\n                {$settings.cnc[tool].type}\n              </option>\n            {/if}\n          {/each}\n        </select>\n      </h5>\n      <NumInputs\n        english=\"Diameter\"\n        french=\"Diametre\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].diameter}\"\n        max=\"{$settings.cnc[$settings.tools.tool].mm ? 150 : 5}\"\n        step=\"{$settings.cnc[$settings.tools.tool].mm ? 0.5 : 0.03125}\"\n        on:convert=\"{convertDiameterUnits}\"\n        bind:unit=\"{$settings.cnc[$settings.tools.tool].mm}\"\n        measurement=\"{$settings.cnc[$settings.tools.tool].mm ? 'mm' : '\"'}\" />\n      <TextInputs\n        english=\"Type\"\n        french=\"Type\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].type}\" />\n      <NumInputs\n        english=\"Spindle speed\"\n        french=\"Vitesse spindle\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].spindle}\"\n        max=\"30000\"\n        step=\"100\"\n        measurement=\"RPM\" />\n      <NumInputs\n        english=\"Plunge rate\"\n        french=\"Vitesse de plonge\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].plunge}\"\n        max=\"1000\"\n        step=\"5\"\n        measurement=\"{'\"/min'}\" />\n      <NumInputs\n        english=\"Plunge ramp\"\n        french=\"Longeur de plonge\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].ramp}\"\n        max=\"5\"\n        step=\"0.125\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Feed rate\"\n        french=\"itesse de coupe\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].feed}\"\n        max=\"1000\"\n        step=\"10\"\n        measurement=\"{'\"/min'}\" />\n      <NumInputs\n        english=\"Max cut depth\"\n        french=\"Max profondeur coupe\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].max_depth}\"\n        max=\"5\"\n        step=\"0.03125\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Max depth/pass\"\n        french=\"Max profondeur/passe\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].pass_depth}\"\n        max=\"5\"\n        step=\"0.03125\"\n        measurement=\"{'\"'}\" />\n    </div>\n  </div>\n</div>\n",
    "<script>\nimport { settings } from '../stores.js'\n// import { createEventDispatcher } from 'svelte'\n\n// const dispatch = createEventDispatcher()\n\n// function toggle() {\n//   dispatch('toggle')\n// }\n\nexport let english = '',\n  french = '',\n  under = false\n</script>\n\n<style>\n.tooltip {\n  z-index: 99;\n  opacity: 0;\n  position: absolute;\n  left: 140%;\n  top: 50%;\n}\n\n.under {\n  left: 80%;\n  top: 100%;\n}\n\n.tip,\n.pointer {\n  z-index: 99;\n  position: fixed;\n  white-space: nowrap;\n  transition: 0.1s;\n  outline: none;\n  background-color: var(--primary);\n  color: var(--primary-bg);\n  font-size: var(--small);\n  font-weight: 600;\n  padding: var(--xsmall);\n  border-radius: var(--xsmall);\n  pointer-events: none;\n}\n.pointer {\n  transform: skew(30deg);\n  border-radius: 0.2rem;\n  content: '';\n}\n*:hover > .tooltip {\n  opacity: 1;\n  transition: 0.1s;\n  transition-delay: 1s;\n}\n</style>\n\n<div class=\"tooltip\" class:under>\n  <div class=\"pointer\"></div>\n  <div class=\"tip\">{$settings.language.includes('fr') ? french : english}</div>\n</div>\n",
    "<script>\nimport { settings } from '../stores'\nimport { createEventDispatcher } from 'svelte'\n\nconst dispatch = createEventDispatcher()\n\nexport let open,\n  english = '',\n  french = '',\n  icon = ''\n\nfunction toggle() {\n  dispatch('toggle')\n}\nfunction focused() {\n  dispatch('focused')\n}\n</script>\n\n<style>\n.drop {\n  padding-top: 1rem;\n  padding-bottom: 0.1rem;\n  cursor: pointer;\n  display: grid;\n  grid-template-columns: 10fr 1fr;\n  border-bottom: 1px solid transparent;\n}\nh3 {\n  font-weight: 300;\n  font-style: italic;\n}\nh3 span {\n  font-weight: 100;\n  font-style: normal;\n}\n/* .drop:focus, */\n.drop:hover,\n.open {\n  outline: none;\n  border-bottom: 1px solid var(--primary);\n  margin-bottom: 0.4em;\n}\n/* .drop:focus .end, */\n.drop:hover .end {\n  opacity: 1;\n  color: var(--third);\n  font-weight: 700;\n  font-size: var(--xxlarge);\n}\n.end {\n  /* position: relative; */\n  opacity: 0;\n  right: 0;\n  font-size: var(--xlarge);\n  /* vertical-align: 0.5em; */\n}\n</style>\n\n<div class=\"drop\" class:open on:click=\"{toggle}\" on:focus=\"{focused}\">\n  <h3>\n    <span>{icon} </span>\n    {$settings.language.includes('fr') ? french : english}\n  </h3>\n  <span class=\"end\">{open ? '⩓' : '⩔'}</span>\n</div>\n",
    "<script>\nimport { settings } from '../stores.js'\nimport { createEventDispatcher } from 'svelte'\n\nconst dispatch = createEventDispatcher()\n\nfunction toggle() {\n  dispatch('toggle')\n}\n\nexport let checked,\n  on,\n  off,\n  separator = ':',\n  english = '',\n  french = ''\n</script>\n\n<style>\nh5 {\n  font-size: var(--small);\n  padding-left: 2rem;\n  white-space: nowrap;\n  display: flex;\n}\n.switch {\n  position: relative;\n  width: 2%;\n  flex: 2 !important;\n}\n/* .switch {\n  position: relative;\n  display: inline-block;\n  width: 1.05in;\n  height: 1.5rem;\n} */\n.slider:after {\n  position: absolute;\n  display: block;\n  width: 100%;\n  height: 100%;\n  color: var(--primary);\n  text-align: right;\n  font-weight: 100;\n  font-size: var(--medium);\n  content: attr(data-content);\n  padding: 0 1rem;\n  cursor: pointer;\n  -webkit-transition: 0.2s;\n  transition: 0.2s;\n}\ninput:focus + .slider:after,\n.slider:hover:after {\n  text-decoration: underline;\n  text-underline-offset: 0.1em;\n}\ninput:focus + .slider:after {\n  color: var(--third);\n}\ninput[type='checkbox'] {\n  top: 0.5em;\n  width: 0.1px;\n  height: 0.1px;\n  opacity: 0;\n  overflow: hidden;\n  position: absolute;\n  z-index: -1;\n}\n</style>\n\n<h5>\n  {$settings.language.includes('fr') ? french : english}{separator}\n  <label class=\"switch\">\n    <input type=\"checkbox\" on:click=\"{toggle}\" bind:checked />\n    <div class=\"slider\" data-content=\"{checked ? on : off}\"></div></label>\n</h5>\n",
    "<script>\nimport { settings } from '../stores'\nimport { createEventDispatcher } from 'svelte'\nconst dispatch = createEventDispatcher()\nexport let value,\n  min = 0,\n  max,\n  step,\n  english = '',\n  french = '',\n  measurement = '',\n  unit = ''\n\nfunction highlight() {\n  this.select()\n}\n\nfunction changed() {\n  dispatch('changed')\n}\nfunction convert() {\n  dispatch('convert')\n  unit = !unit\n}\n</script>\n\n<style>\nh5 {\n  font-size: var(--small);\n  padding-left: 2rem;\n  white-space: nowrap;\n  display: flex;\n}\ninput {\n  width: 2%;\n  flex: 2 !important;\n  text-align: right;\n}\nspan {\n  cursor: pointer;\n  padding-right: 1rem;\n}\ninput:hover,\ninput:focus {\n  text-underline-offset: 0.1em;\n  text-decoration: underline;\n}\n</style>\n\n<h5>\n  {$settings.language.includes('fr') ? french : english}:\n  <input\n    type=\"number\"\n    on:click=\"{highlight}\"\n    on:change=\"{changed}\"\n    bind:value\n    min=\"{min}\"\n    max=\"{max}\"\n    step=\"{step}\" />\n  <span on:click=\"{convert}\">{measurement}</span>\n</h5>\n",
    "<script>\nimport { settings } from '../stores'\n\nexport let value,\n  english = '',\n  french = ''\n\nfunction highlight() {\n  this.select()\n}\n</script>\n\n<style>\nh5 {\n  font-size: var(--small);\n  padding-left: 2rem;\n  white-space: nowrap;\n  display: flex;\n  /* width: calc(100% - 6rem); */\n}\nh5 > input {\n  width: 2%;\n  flex: 2 !important;\n  text-align: right;\n  padding-right: 1rem;\n}\ninput:focus,\ninput:hover {\n  /* border-bottom: 1px solid var(--primary); */\n  /* color: var(--primary);\n  background-color: var(--primary-bg); */\n  text-underline-offset: 0.1em;\n  text-decoration: underline;\n}\n</style>\n\n<h5>\n  {$settings.language.includes('fr') ? french : english}:\n  <input type=\"text\" on:click=\"{highlight}\" bind:value />\n</h5>\n"
  ],
  "names": [],
  "mappings": "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"
}