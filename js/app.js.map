{"version":3,"file":"app.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/stores.js","../../src/cncLibrary.js","../../src/localStore.js","../../src/sessionStore.js","../../src/methods.js","../../src/components/Tooltips.svelte","../../src/components/Import.svelte","../../src/csv.js","../../src/components/TextInputs.svelte","../../src/components/CheckInputs.svelte","../../src/components/Headers.svelte","../../src/components/Editor.svelte","../../src/components/Viewer.svelte","../../src/components/NumInputs.svelte","../../src/components/Settings.svelte","../../src/nest.js","../../src/engravingFont.js","../../src/gCode.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { localStore } from './localStore.js'\nimport { sessionStore } from './sessionStore.js'\nimport { cncLibrary } from './cncLibrary.js'\n\nfunction setLanguage() {\n  let lang =\n    navigator.language.slice(0, 2) || navigator.userLanguage.slice(0, 2)\n  if (lang.slice(0, 2) === 'fr') return 'fr'\n  return 'en'\n}\n\nconst defaultSettings = {\n  BETA2: '< update key to update settings',\n  language: setLanguage(),\n  material: {\n    width: 49,\n    height: 97,\n    thickness: 0.75,\n    margins: 0.3,\n  },\n  nestTypeColumn: false,\n  nestOrder: 'widest',\n  nestDirectionBottom: true,\n  units: false,\n  tools: { profile: '9', engraver: '3', tool: '9' },\n  cnc: cncLibrary,\n  subsettings: {\n    show: false,\n    project: true,\n    profile: false,\n    engraver: false,\n    library: false,\n    sheet: false,\n    nest: true,\n  },\n  activePanel: '',\n}\n\nexport const csvTemplate = {\n  en: [\n    ['Project', 'New', 'Material', 'Plywood', 'Project Info', 'doors'],\n    ['Borders', 'Top', 'Right', 'Bottom', 'Left'],\n    [0, 0, 0, 0, 0],\n    ['Metric?', false],\n    ['Panel', 'Quantity', 'Width', 'Height'],\n    [1, 0, 0, 0],\n  ],\n  fr: [\n    ['Projét', 'Nouveau', 'Matèriaux', 'Plaquage', 'Modèle Portes', ''],\n    ['Borders', 'haut', 'droit', 'bas', 'gauche'],\n    [0, 0, 0, 0, 0],\n    ['Metric?', false],\n    ['Panneaux', 'Quantité', 'Largeur', 'Hauteur'],\n    [1, 0, 0, 0],\n  ],\n}\n\nconst defaultData = {\n  name: '',\n  sheets: [],\n  errors: [],\n  tools: {\n    engraver: {\n      tool: 3,\n      engrave: false,\n      cut_depth: 0.005,\n      xStart: 1,\n      yStart: 1,\n      size: 0.3,\n      spacing: 0.1,\n      direction: 'ltr',\n    },\n    profile: { tool: 9, cut_depth: 0.75, link: 0.02, min_size: 12 },\n  },\n  csv: {\n    new: [...csvTemplate[defaultSettings.language]],\n    contents: [...csvTemplate[defaultSettings.language]],\n    panels: [],\n    headerRows: 5,\n    output: '',\n  },\n  svg: '',\n  cnc: '',\n}\n\nexport const settings = localStore('settings', defaultSettings)\nexport const data = sessionStore('data', defaultData)\n","export const cncLibrary = {\n  1: {\n    type: 'End mill',\n    diameter: 0.1875,\n    mm: false,\n    spindle: 12000,\n    feed: 150,\n    plunge: 100,\n    ramp: 1,\n    max_depth: 0.875,\n    pass_depth: 0.125,\n    step_over: 0.125,\n  },\n  2: {\n    type: 'End mill',\n    diameter: 0.75,\n    mm: false,\n    spindle: 15000,\n    feed: 200,\n    plunge: 75,\n    ramp: 5,\n    max_depth: 3,\n    pass_depth: 0.25,\n    step_over: 0.625,\n  },\n  3: {\n    type: 'Ball-nose',\n    diameter: 0.125,\n    mm: false,\n    spindle: 12000,\n    feed: 50,\n    plunge: 50,\n    ramp: 1,\n    max_depth: 0.75,\n    pass_depth: 0.0625,\n    step_over: 0.0625,\n  },\n  4: {\n    type: 'Edge Finisher',\n    diameter: 0.75,\n    mm: false,\n    spindle: 20000,\n    feed: 75,\n    plunge: 30,\n    ramp: 4,\n    max_depth: 2.25,\n    pass_depth: 2.25,\n    step_over: 0.05,\n  },\n  5: {\n    type: 'Drill',\n    diameter: 5,\n    mm: true,\n    spindle: 8500,\n    feed: 0,\n    plunge: 75,\n    ramp: 0,\n    max_depth: 1,\n    pass_depth: 1,\n    step_over: 0,\n  },\n  6: {\n    type: 'End mill',\n    diameter: 0.25,\n    mm: false,\n    spindle: 18000,\n    feed: 150,\n    plunge: 40,\n    ramp: 1,\n    max_depth: 1,\n    pass_depth: 0.25,\n    step_over: 0.2,\n  },\n  7: {\n    type: 'Drill',\n    diameter: 8,\n    mm: true,\n    spindle: 8500,\n    feed: 0,\n    plunge: 75,\n    ramp: 0,\n    max_depth: 1,\n    pass_depth: 1,\n    step_over: 0,\n  },\n  8: {\n    type: 'Surfacing',\n    diameter: 32,\n    mm: true,\n    spindle: 12000,\n    feed: 200,\n    plunge: 30,\n    ramp: 5,\n    max_depth: 1,\n    pass_depth: 0.125,\n    step_over: 0,\n  },\n  9: {\n    type: 'End mill',\n    diameter: 0.375,\n    mm: false,\n    spindle: 18000,\n    feed: 400,\n    plunge: 70,\n    ramp: 1,\n    max_depth: 0.875,\n    pass_depth: 0.875,\n    step_over: 0.3,\n  },\n  10: {\n    type: 'End mill',\n    diameter: 0.5,\n    mm: false,\n    spindle: 18000,\n    feed: 400,\n    plunge: 70,\n    ramp: 1,\n    max_depth: 0.875,\n    pass_depth: 0.875,\n    step_over: 0.4,\n  },\n  11: {\n    type: 'Drill',\n    diameter: 10,\n    mm: true,\n    spindle: 18000,\n    feed: 0,\n    plunge: 75,\n    ramp: 0,\n    max_depth: 1,\n    pass_depth: 1,\n    step_over: 0,\n  },\n  12: {\n    type: 'V-groove',\n    diameter: 1.5,\n    mm: false,\n    spindle: 12000,\n    feed: 75,\n    plunge: 30,\n    ramp: 1,\n    max_depth: 0.75,\n    pass_depth: 0.25,\n    step_over: 0.125,\n  },\n}\n","import { writable } from 'svelte/store'\n\nexport const localStore = (key, initial) => {\n  const str = (obj) => JSON.stringify(obj, null, 2)\n  // set with initial value if item not present\n  if (!localStorage.getItem(key)) {\n    localStorage.setItem(key, str(initial))\n  }\n\n  function localKey() {\n    return JSON.parse(localStorage.getItem(key))\n  }\n  // reset with initial value as string if settings updated\n  if (!sameKeys(localKey(), initial)) {\n    console.log(localKey(), initial)\n    localStorage.setItem(key, str(initial))\n  }\n  // create the writable store\n  const { subscribe, set, update } = writable(localKey())\n\n  return {\n    subscribe,\n    set: (value) => {\n      // save also to local storage as a string\n      localStorage.setItem(key, str(value))\n      return set(value)\n    },\n    update,\n  }\n}\n\nfunction sameKeys(obj1, obj2) {\n  return Object.keys(obj1).join() === Object.keys(obj2).join()\n}\n","import { writable } from 'svelte/store'\n\nexport const sessionStore = (key, initial) => {\n  const str = (obj) => JSON.stringify(obj, null, 2)\n\n  // set with initial value if item not present\n  if (!sessionStorage.getItem(key)) {\n    sessionStorage.setItem(key, str(initial))\n  }\n\n  // create the writable store\n  const { subscribe, set, update } = writable(\n    JSON.parse(sessionStorage.getItem(key))\n  )\n\n  return {\n    subscribe,\n    set: (value) => {\n      // save also to local storage as a string\n      sessionStorage.setItem(key, str(value))\n      return set(value)\n    },\n    update,\n  }\n}\n","export function toFloat(str) {\n  if (!isNaN(str)) return cleanFloat(str) // if number return float\n  if (str.includes('/') && !str.includes('.')) {\n    return str\n      .split(' ') // covert rational string into array\n      .filter((item) => item !== '') // removes multiple spaces\n      .reduce((total, item) => {\n        // get array total of whole # + fraction\n        if (item.includes('/')) {\n          let frac = item.split('/').filter((item) => item !== '')\n          return total + cleanFloat(frac[0] / frac[1])\n        }\n        return total + cleanFloat(item)\n      }, 0)\n  }\n  return str\n}\n\nexport function hasNumber(str) {\n  return /\\d/.test(str)\n}\nexport function isNumber(str) {\n  return /(\\.|\\/)\\d/.test(str)\n}\nexport function trunc(number, places) {\n  return Math.round(parseFloat(number) * 10 ** places) / 10 ** places\n}\nexport function cleanFloat(num, trailing = 5) {\n  return trunc(num, trailing)\n}\nconst removeFromArray = (array, itemValue) => {\n  let index = array.indexOf(itemValue)\n  return [...array.slice(0, index), ...array.slice(index + 1)]\n}\n\nexport function toMM(number) {\n  return cleanFloat(number * 25.4, 3)\n}\n\nexport function toInches(number) {\n  return cleanFloat(number / 25.4)\n}\n\nexport function formatDate(date, format) {\n  const leadingZero = (digits) => ('0' + digits).slice(-2)\n  const map = {\n    mm: leadingZero(date.getMonth() + 1),\n    dd: leadingZero(date.getDate()),\n    yy: date.getFullYear().toString().slice(-2),\n    yyyy: date.getFullYear(),\n    HH: leadingZero(date.getHours()),\n    MM: leadingZero(date.getMinutes()),\n    SS: leadingZero(date.getSeconds()),\n    T: 'T',\n    h: 'h',\n  }\n\n  return format.replace(/mm|dd|yyyy|yy|HH|MM|SS/gi, (matched) => map[matched])\n}\n","<script>\nimport { settings } from '../stores.js'\n// import { createEventDispatcher } from 'svelte'\n\n// const dispatch = createEventDispatcher()\n\n// function toggle() {\n//   dispatch('toggle')\n// }\n\nexport let english = '',\n  french = '',\n  under = false\n</script>\n\n<style>\n.tooltip {\n  z-index: 99;\n  opacity: 0;\n  position: absolute;\n  left: 140%;\n  top: 50%;\n}\n\n.under {\n  left: 80%;\n  top: 100%;\n}\n\n.tip,\n.pointer {\n  z-index: 99;\n  position: fixed;\n  white-space: nowrap;\n  transition: 0.1s;\n  outline: none;\n  background-color: var(--primary);\n  color: var(--primary-bg);\n  font-size: var(--small);\n  font-weight: 600;\n  padding: var(--xsmall);\n  border-radius: var(--xsmall);\n  pointer-events: none;\n}\n.pointer {\n  transform: skew(30deg);\n  border-radius: 0.2rem;\n  content: '';\n}\n*:hover > .tooltip {\n  opacity: 1;\n  transition: 0.1s;\n  transition-delay: 1s;\n}\n</style>\n\n<div class=\"tooltip\" class:under>\n  <div class=\"pointer\"></div>\n  <div class=\"tip\">{$settings.language.includes('fr') ? french : english}</div>\n</div>\n","<script>\nimport { settings, data } from '../stores.js'\nimport { formatDate } from '../methods.js'\nimport { CSVToArray } from '../csv.js'\nimport Tooltips from './Tooltips.svelte'\nimport { createEventDispatcher } from 'svelte'\n\nconst dispatch = createEventDispatcher()\n\nconst time = () => formatDate(new Date(), '-HHhMM')\n\nlet badFile = false,\n  keys = {},\n  dlCSV,\n  dlSVG,\n  dlCNC,\n  project = [],\n  open\n\nfunction updatePanels() {\n  $settings.units = JSON.parse($data.csv.contents[3][1])\n  dispatch('update')\n}\n\nfunction handleKeyDown(e) {\n  keys[e.code] = true\n  const key = (code) => (keys['AltLeft'] || keys['AltRight']) && keys[code]\n  if (key('KeyO')) setTimeout(() => file.click(), 140)\n  if (key('KeyN')) newFile()\n  if (key('KeyV')) dlCSV.click()\n  if (key('KeyG')) dlSVG.click()\n  if (key('KeyC')) dlCNC.click()\n  if (key('KeyP')) $settings.subsettings.show = !$settings.subsettings.show\n}\n\nfunction handleKeyUp(e) {\n  delete keys[e.code]\n}\n\nfunction newFile() {\n  $data.csv.contents = [...$data.csv.new]\n  updatePanels()\n  dispatch('name')\n}\n\nfunction loadFile() {\n  if (!open.files[0]) return\n  if (open.files[0].name.includes('.csv')) {\n    let reader = new FileReader()\n    reader.readAsText(open.files[0])\n    reader.onload = function (event) {\n      $data.csv.contents = CSVToArray(event.target.result, $data.csv.headerRows) // csv file\n      badFile = false\n      updatePanels()\n      return\n    }\n  }\n  badFile = true\n}\n</script>\n\n<style>\n.file-mgmt {\n  display: flex;\n  flex-direction: column;\n  vertical-align: center;\n  align-items: center;\n  text-align: center;\n  justify-content: space-between;\n  height: 22rem;\n}\n\n.file-icon {\n  position: relative;\n  height: 2em;\n  width: 1.7em;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n  cursor: pointer;\n  transition: 0.1s;\n}\n.file-icon:hover,\n.file-icon:focus,\ninput:focus + .file-icon {\n  height: 2.5em;\n  width: 2.3em;\n  transition: 0.1s;\n  outline: none;\n}\n.inputfile {\n  top: 0.5em;\n  width: 0.1px;\n  height: 0.1px;\n  opacity: 0;\n  overflow: hidden;\n  position: absolute;\n  z-index: -1;\n}\n.blocked {\n  cursor: default;\n}\n.blocked:hover::after,\n.blocked:hover::before {\n  opacity: 0;\n}\n.blocked:hover {\n  height: 2em;\n  width: 1.7em;\n}\n.badfile {\n  background-image: url('../img/upload-bad.png');\n}\n.upload {\n  background-image: url('../img/upload.png');\n}\n.upload:hover {\n  background-image: url('../img/upload-hover.png');\n}\n.new {\n  background-image: url('../img/new.png');\n}\n.new:hover {\n  background-image: url('../img/new-hover.png');\n}\n.dl-svg {\n  background-image: url('../img/dl-svg.png');\n}\n.dl-svg-block {\n  background-image: url('../img/dl-svg-block.png');\n}\n.dl-svg:hover {\n  background-image: url('../img/dl-svg-hover.png');\n}\n.dl-csv {\n  background-image: url('../img/dl-csv.png');\n}\n.dl-csv-block {\n  background-image: url('../img/dl-csv-block.png');\n}\n.dl-csv:hover {\n  background-image: url('../img/dl-csv-hover.png');\n}\n.dl-cnc {\n  background-image: url('../img/dl-cnc.png');\n}\n.dl-cnc-block {\n  background-image: url('../img/dl-cnc-block.png');\n}\n.dl-cnc:hover {\n  background-image: url('../img/dl-cnc-hover.png');\n}\n.setting-icon {\n  background-image: url('../img/settings.png');\n}\n.setting-icon:hover {\n  background-image: url('../img/settings-hover.png');\n}\n</style>\n\n<svelte:head>\n  <title>{'Ahhh Nest: ' + $data.csv.contents[0][1] || 'Ahhh! Nest'}</title>\n</svelte:head>\n<svelte:window on:keydown=\"{handleKeyDown}\" on:keyup=\"{handleKeyUp}\" />\n\n<div class=\"file-mgmt\">\n  <!-- <div\n    tabindex=\"0\"\n    role=\"button\"\n    class=\"file-icon setting-icon\"\n    on:click=\"{() => ($settings.show = !$settings.show)}\">\n    <Tooltips\n      french=\"ncnc + projet parametre  (alt + p)\"\n      english=\"cnc + project settings (alt + p)\" />\n  </div> -->\n  <input\n    class=\"inputfile\"\n    name=\"file\"\n    id=\"file\"\n    type=\"file\"\n    on:change=\"{loadFile}\"\n    bind:this=\"{open}\" />\n  <label\n    for=\"file\"\n    class=\"file-icon {badFile ? 'badfile' : 'upload'}\"\n    on:mouseover=\"{() => (badFile = false)}\">\n    <Tooltips\n      french=\"ouvrir fichier .csv (alt + o)\"\n      english=\"open .csv file (alt + o)\" />\n  </label>\n  <div tabindex=\"0\" role=\"button\" class=\"file-icon new\" on:click=\"{newFile}\">\n    <Tooltips french=\"nouveau fichier (alt + n)\" english=\"new file (alt + n)\" />\n  </div>\n  {#if $data.sheets.length}\n    <a\n      href=\"data:text/plain;charset=utf-8,{encodeURIComponent($data.csv.output)}\"\n      download=\"{$data.name + time()}.csv\"\n      role=\"button\"\n      class=\"file-icon dl-csv\"\n      bind:this=\"{dlCSV}\">\n      <Tooltips\n        french=\"téléchargez le fichier .csv  (alt + v)\"\n        english=\"download .csv file (alt + v)\" />\n    </a>\n    <a\n      href=\"data:text/plain;charset=utf-8,{encodeURIComponent($data.svg)}\"\n      download=\"{$data.name + time()}.svg\"\n      alt=\"download svg file\"\n      role=\"button\"\n      class=\"file-icon dl-svg\"\n      bind:this=\"{dlSVG}\">\n      <Tooltips\n        french=\"telechargez le fichier .svg (alt + g)\"\n        english=\"download .svg file (alt + g)\" />\n    </a>\n    <a\n      href=\"data:text/plain;charset=utf-8,{encodeURIComponent($data.cnc)}\"\n      download=\"{$data.name + time()}.cnc\"\n      role=\"button\"\n      class=\"file-icon dl-cnc\"\n      bind:this=\"{dlCNC}\">\n      <Tooltips\n        french=\"ntelechargez le fichier .cnc (alt + c)\"\n        english=\"download .cnc file (alt + c)\" />\n    </a>\n  {:else}\n    <div class=\"file-icon dl-csv-block blocked\"></div>\n    <div class=\"file-icon dl-svg-block blocked\"></div>\n    <div class=\"file-icon dl-cnc-block blocked\"></div>\n  {/if}\n</div>\n","import { hasNumber, toFloat } from './methods.js'\n\nexport function CSVToArray(strData, headerRows = 1, strDelimiter = ',') {\n  // Create a regular expression to parse the CSV values.\n  var regexPattern = new RegExp(\n    '(\\\\' +\n      strDelimiter +\n      '|\\\\r?\\\\n|\\\\r|^)' + // Delimiters.\n      '(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|' + // Quoted fields.\n      '([^\"\\\\' +\n      strDelimiter +\n      '\\\\r\\\\n]*))', // Standard fields.\n    'gi'\n  )\n\n  // Create an array of arrays to hold csv data.\n  var arrData = [[]]\n\n  // Create an array to hold our individual pattern\n  // matching groups.\n  var arrMatches = null\n\n  // Keep looping over the regular expression matches\n  // until we can no longer find a match.\n  while ((arrMatches = regexPattern.exec(strData))) {\n    // Get the delimiter that was found.\n    var strMatchedDelimiter = arrMatches[1]\n\n    // Check to see if the given delimiter has a length\n    // (is not the start of string) and if it matches\n    // field delimiter. If id does not, then we know\n    // that this delimiter is a row delimiter.\n    if (strMatchedDelimiter.length && strMatchedDelimiter != strDelimiter) {\n      // Since we have reached a new row of data,\n      // add an empty row to our data array.\n      arrData.push([])\n    }\n\n    // Now that we have our delimiter out of the way,\n    // let's check to see which kind of value we\n    // captured (quoted or unquoted).\n    if (arrMatches[2]) {\n      // We found a quoted value. When we capture\n      // this value, unescape any double quotes.\n      var strMatchedValue = arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n    } else {\n      // We found a non-quoted value.\n      var strMatchedValue = arrMatches[3]\n    }\n\n    if (hasNumber(strMatchedValue)) {\n      strMatchedValue = toFloat(strMatchedValue)\n    }\n\n    // Now that we have our value string, let's add\n    // it to the data array.\n    arrData[arrData.length - 1].push(strMatchedValue)\n  }\n\n  // Return the parsed data.\n  return arrData.filter((item, index) => {\n    // keep all header rows\n    if (index < headerRows) return true\n    // removes blanc rows thereafter\n    return item.filter((inner) => inner !== '').length\n  })\n}\n","<script>\nimport { settings } from '../stores'\n\nexport let value,\n  english = '',\n  french = ''\n\nfunction highlight() {\n  this.select()\n}\n</script>\n\n<style>\nh5 {\n  font-size: var(--small);\n  padding-left: 2rem;\n  white-space: nowrap;\n  display: flex;\n  /* width: calc(100% - 6rem); */\n}\nh5 > input {\n  width: 2%;\n  flex: 2 !important;\n  text-align: right;\n  padding-right: 1rem;\n}\ninput:focus,\ninput:hover {\n  /* border-bottom: 1px solid var(--primary); */\n  /* color: var(--primary);\n  background-color: var(--primary-bg); */\n  text-underline-offset: 0.1em;\n  text-decoration: underline;\n}\n</style>\n\n<h5>\n  {$settings.language.includes('fr') ? french : english}:\n  <input type=\"text\" on:click=\"{highlight}\" bind:value />\n</h5>\n","<script>\nimport { settings } from '../stores.js'\nimport { createEventDispatcher } from 'svelte'\n\nconst dispatch = createEventDispatcher()\n\nfunction toggle() {\n  dispatch('toggle')\n}\n\nexport let checked,\n  on,\n  off,\n  separator = ':',\n  english = '',\n  french = ''\n</script>\n\n<style>\nh5 {\n  font-size: var(--small);\n  padding-left: 2rem;\n  white-space: nowrap;\n  display: flex;\n}\n.switch {\n  position: relative;\n  width: 2%;\n  flex: 2 !important;\n}\n/* .switch {\n  position: relative;\n  display: inline-block;\n  width: 1.05in;\n  height: 1.5rem;\n} */\n.slider:after {\n  position: absolute;\n  display: block;\n  width: 100%;\n  height: 100%;\n  color: var(--primary);\n  text-align: right;\n  font-weight: 100;\n  font-size: var(--medium);\n  content: attr(data-content);\n  padding: 0 1rem;\n  cursor: pointer;\n  -webkit-transition: 0.2s;\n  transition: 0.2s;\n}\ninput:focus + .slider:after,\n.slider:hover:after {\n  text-decoration: underline;\n  text-underline-offset: 0.1em;\n}\ninput:focus + .slider:after {\n  color: var(--third);\n}\ninput[type='checkbox'] {\n  top: 0.5em;\n  width: 0.1px;\n  height: 0.1px;\n  opacity: 0;\n  overflow: hidden;\n  position: absolute;\n  z-index: -1;\n}\n</style>\n\n<h5>\n  {$settings.language.includes('fr') ? french : english}{separator}\n  <label class=\"switch\">\n    <input type=\"checkbox\" on:click=\"{toggle}\" bind:checked />\n    <div class=\"slider\" data-content=\"{checked ? on : off}\"></div></label>\n</h5>\n","<script>\nimport { settings } from '../stores'\nimport { createEventDispatcher } from 'svelte'\n\nconst dispatch = createEventDispatcher()\n\nexport let open,\n  english = '',\n  french = '',\n  icon = ''\n\nfunction toggle() {\n  dispatch('toggle')\n}\nfunction focused() {\n  dispatch('focused')\n}\n</script>\n\n<style>\n.drop {\n  padding-top: 1rem;\n  padding-bottom: 0.1rem;\n  cursor: pointer;\n  display: grid;\n  grid-template-columns: 10fr 1fr;\n  border-bottom: 1px solid transparent;\n}\nh3 {\n  font-weight: 300;\n  font-style: italic;\n}\nh3 span {\n  font-weight: 100;\n  font-style: normal;\n}\n/* .drop:focus, */\n.drop:hover,\n.open {\n  outline: none;\n  border-bottom: 1px solid var(--primary);\n  margin-bottom: 0.4em;\n}\n/* .drop:focus .end, */\n.drop:hover .end {\n  opacity: 1;\n  color: var(--third);\n  font-weight: 700;\n  font-size: var(--xxlarge);\n}\n.end {\n  /* position: relative; */\n  opacity: 0;\n  right: 0;\n  font-size: var(--xlarge);\n  /* vertical-align: 0.5em; */\n}\n</style>\n\n<div class=\"drop\" class:open on:click=\"{toggle}\" on:focus=\"{focused}\">\n  <h3>\n    <span>{icon} </span>\n    {$settings.language.includes('fr') ? french : english}\n  </h3>\n  <span class=\"end\">{open ? '⩓' : '⩔'}</span>\n</div>\n","<script>\nimport { settings, data } from '../stores.js'\nimport { toMM, toInches } from '../methods.js'\nimport TextInputs from './TextInputs.svelte'\nimport CheckInputs from './CheckInputs.svelte'\nimport Tooltips from './Tooltips.svelte'\nimport Headers from './Headers.svelte'\nimport { createEventDispatcher } from 'svelte'\n\nconst dispatch = createEventDispatcher()\n\n$: metric = JSON.parse($data.csv.contents[3][1])\n$: findMax = (directionStr) => {\n  let max = $settings.material[directionStr] - $settings.material.margins * 2\n  return metric ? toMM(max) : max\n}\n\nfunction highlight() {\n  this.select()\n}\n\nfunction addRow() {\n  let row = [$data.csv.panels.length + 1, 0, 0, 0]\n  $data.csv.contents = [...$data.csv.contents, row]\n  dispatch('update')\n}\n\nfunction sortAscending(index) {\n  //add support for alpha numberic\n  $data.csv.panels = $data.csv.panels.sort((a, b) => a[index] - b[index])\n}\nfunction sortDescending(index) {\n  $data.csv.panels = $data.csv.panels.sort((a, b) => b[index] - a[index])\n}\n\nfunction convertUnits() {\n  let convert = metric ? toInches : toMM\n  $data.csv.panels.forEach((index) => {\n    index[2] = convert(index[2])\n    index[3] = convert(index[3])\n  })\n  // toggle boolean\n  $data.csv.contents[3][1] = $settings.units = !metric\n}\n</script>\n\n<style>\n.wrapper {\n  height: max-content;\n  padding: 0;\n}\n\nul {\n  font-size: var(--small);\n  display: grid;\n  grid-template-columns: 3fr 2fr 3fr 3fr;\n  border-bottom: 1px solid;\n}\n.new-row {\n  color: var(--blue);\n  font-size: var(--xxlarge);\n  cursor: pointer;\n  text-align: center;\n}\n.active {\n  background-color: var(--second-bg);\n}\nli {\n  position: relative;\n  line-height: var(--xxlarge);\n  text-align: center;\n  cursor: pointer;\n}\ninput {\n  width: 100%;\n  height: 100%;\n  border-radius: 0;\n  text-align: center;\n}\ninput:after {\n  content: 'in';\n}\ninput:hover {\n  color: var(--primary-bg);\n  background-color: var(--second);\n}\ninput:hover::selection {\n  color: var(--primary);\n  transition: 0.2s;\n}\ndiv {\n  padding-top: 1rem;\n}\n.error,\n.error + p {\n  color: var(--third);\n}\n</style>\n\n<div class=\"wrapper\">\n  <div>\n    {#if $data.errors.length}\n      <h5 class=\"error\">ERROR{$data.errors.length > 1 ? 'S' : ''}:</h5>\n      {#each $data.errors as error}\n        <p>{error}</p>\n      {/each}\n    {/if}\n\n    <ul class=\"header\">\n      <li on:click=\"{() => sortAscending(0)}\">\n        <h1>\n          ⊛\n          <Tooltips\n            under=\"{true}\"\n            french=\"Nom de panneau\"\n            english=\"Panel Name\" />\n        </h1>\n      </li>\n      <li on:click=\"{() => sortDescending(1)}\">\n        <h1>\n          ⧉\n          <Tooltips under=\"{true}\" french=\"Quantité\" english=\"Quantity\" />\n        </h1>\n      </li>\n      <li on:click=\"{() => sortDescending(2)}\">\n        <!-- <h4>∣X∣⍈</h4> -->\n        <h1>\n          ⍈\n          <Tooltips\n            under=\"{true}\"\n            french=\"Largeur ({metric ? 'mm' : 'po'})\"\n            english=\"Width ({metric ? 'mm' : 'in'})\" />\n        </h1>\n      </li>\n      <li on:click=\"{() => sortDescending(3)}\">\n        <!-- <h4>Y⇫⍐</h4> -->\n        <h1>\n          ⍗\n          <Tooltips\n            under=\"{true}\"\n            french=\"Hauteur ({metric ? 'mm' : 'po'})\"\n            english=\"Height ({metric ? 'mm' : 'in'})\" />\n        </h1>\n      </li>\n    </ul>\n    {#each $data.csv.panels as line}\n      <ul\n        class=\"{$settings.activePanel == line[0] ? 'active' : ''}\"\n        on:mouseenter=\"{() => ($settings.activePanel = line[0])}\"\n        on:mouseleave=\"{() => ($settings.activePanel = '')}\">\n        <li>\n          <input type=\"text\" bind:value=\"{line[0]}\" on:focus=\"{highlight}\" />\n          <Tooltips\n            under=\"{true}\"\n            french=\"Nom de panneau\"\n            english=\"Panel Name\" />\n        </li>\n        <li>\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"100\"\n            bind:value=\"{line[1]}\"\n            on:focus=\"{highlight}\" />\n          <Tooltips under=\"{true}\" french=\"Quantité\" english=\"Quantity\" />\n        </li>\n        <li>\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"{findMax('width')}\"\n            bind:value=\"{line[2]}\"\n            on:focus=\"{highlight}\"\n            step=\"{metric ? 0.25 : 0.03125}\" />\n          <Tooltips\n            under=\"{true}\"\n            french=\"Largeur ({metric ? 'mm' : 'po'})\"\n            english=\"Width ({metric ? 'mm' : 'in'})\" />\n        </li>\n        <li>\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"{findMax('height')}\"\n            bind:value=\"{line[3]}\"\n            on:focus=\"{highlight}\"\n            step=\"{metric ? 0.25 : 0.03125}\" />\n          <Tooltips\n            under=\"{true}\"\n            french=\"Hauteur ({metric ? 'mm' : 'po'})\"\n            english=\"Height ({metric ? 'mm' : 'in'})\" />\n        </li>\n      </ul>\n    {/each}\n    <ul class=\"new-row\" on:click=\"{addRow}\" role=\"button\">+</ul>\n  </div>\n</div>\n","<script>\n// to do : units to mm scale setting\n\nimport { settings, data } from '../stores.js'\nimport { afterUpdate } from 'svelte'\nimport { trunc } from '../methods.js'\n\nlet id,\n  displayInfo = false,\n  top = 0,\n  left = 0,\n  scale = 90,\n  // scale = $settings.units ? 90 * 25.4 : 90,\n  svgFile\n\nafterUpdate(() => {\n  $data.svg = svgFile.innerHTML.toString()\n})\n\nfunction panelHoverOn() {\n  $settings.activePanel = this.id\n}\nfunction panelHoverOff() {\n  $settings.activePanel = ''\n}\n\nfunction showInfo() {\n  displayInfo = true\n  let rect = this.getBoundingClientRect()\n  top = (rect.bottom - rect.top) / 2 + rect.top\n  left = (rect.right - rect.left) / 2 + rect.left\n  id = this.id\n}\nfunction hideInfo() {\n  displayInfo = false\n}\n\nfunction flipY(y, height) {\n  // return y\n  return $settings.material.height - height - y\n}\n\nfunction shift(index) {\n  let maxColumns = 5,\n    rows = Math.ceil($data.sheets.length / maxColumns),\n    columns = Math.ceil($data.sheets.length / rows),\n    row = Math.ceil((index + 1) / columns) - 1,\n    column = index % columns,\n    x = column * $settings.material.width,\n    y = row * $settings.material.height,\n    w = columns * $settings.material.width,\n    h = rows * $settings.material.height\n  return { x, y, w, h }\n}\n</script>\n\n<style>\n.viewer {\n  height: 100vh;\n  padding: 2vh 2vw;\n  z-index: -1;\n}\n.infocard {\n  position: fixed;\n  padding: 1rem;\n  background-color: var(--primary);\n  border: 1px solid var(--primary-bg);\n  border-radius: 4px;\n  font-weight: 100;\n  line-height: 1.5em;\n  color: var(--primary-bg);\n  font-size: 1.3rem;\n  z-index: 2;\n  transform: translate(-50%, -50%);\n  pointer-events: none;\n}\nsup {\n  font-size: 0.5em;\n  line-height: 1.5em;\n}\nsvg {\n  height: 100%;\n  width: 100%;\n  margin: auto auto;\n  overflow: hidden;\n}\n\n.panel {\n  stroke: var(--second);\n  fill: var(--primary-bg);\n  transition: 0.2s;\n}\n\n.active {\n  fill: var(--second);\n  stroke: var(--primary);\n  transition: 0.2s;\n}\n.sheet {\n  stroke: var(--primary);\n  fill: var(--primary-bg);\n  /* fill-opacity: 0; */\n  transition: 0.2s;\n}\n\n.sheet:hover {\n  fill: var(--primary);\n  fill-opacity: 1;\n  transition: 0.2s;\n}\n\n.id {\n  text-anchor: middle;\n  fill: var(--second);\n  stroke: none;\n  font-weight: 300;\n  pointer-events: none;\n  cursor: default;\n}\n.id.active {\n  fill: var(--primary-bg);\n}\n</style>\n\n{#if displayInfo}\n  <div class=\"infocard\" style=\"left: {left}px; top: {top}px;\">\n    <h4>{$data.sheets[id].id}</h4>\n    <p>\n      area des panneaux:\n      {trunc($data.sheets[id].area / 144, 2)}\n      pi<sup>2</sup>\n    </p>\n    <p>\n      area de perte:\n      {trunc($data.sheets[id].waste_area / 144, 2)}\n      pi<sup>2</sup>\n    </p>\n    <p>% de perte: {trunc($data.sheets[id].waste_ratio * 100, 2)}%</p>\n  </div>\n{/if}\n\n<div class=\"viewer\" bind:this=\"{svgFile}\">\n  <svg\n    class=\"print\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    width=\"{shift($data.sheets.length - 1).w * scale || 0}\"\n    height=\"{shift($data.sheets.length - 1).h * scale || 0}\"\n    viewBox=\"0 0 {shift($data.sheets.length - 1).w * scale || 0} {shift($data.sheets.length - 1).h * scale || 0}\"\n    preserveAspectRatio=\"xMidYMid meet\">\n    {#each $data.sheets as sheet, index}\n      <g id=\"sheets\">\n        <rect\n          style=\"stroke-width: {$settings.material.margins * scale}px;\"\n          on:mouseover=\"{showInfo}\"\n          on:mouseleave=\"{hideInfo}\"\n          class=\"sheet print\"\n          id=\"{index}\"\n          x=\"{(shift(index).x + $settings.material.margins / 2) * scale}\"\n          y=\"{(shift(index).y + $settings.material.margins / 2) * scale}\"\n          width=\"{(sheet.sheet_width - $settings.material.margins) * scale}\"\n          height=\"{(sheet.sheet_height - $settings.material.margins) * scale}\"></rect>\n      </g>\n      <g id=\"panels\">\n        {#each sheet.group as panel}\n          <rect\n            style=\"stroke-width: {$settings.cnc[$settings.tools.profile].diameter * scale}px;\"\n            on:mouseover=\"{panelHoverOn}\"\n            on:mouseleave=\"{panelHoverOff}\"\n            class=\"panel {$settings.activePanel == panel.id ? 'active' : ''} print\"\n            id=\"{panel.id}\"\n            x=\"{(panel.x + shift(index).x) * scale}\"\n            y=\"{(flipY(panel.y, panel.height) + shift(index).y) * scale}\"\n            width=\"{panel.width * scale}\"\n            height=\"{panel.height * scale}\"></rect>\n\n          <text\n            style=\"font-size: {scale * (panel.id.length > 6 ? Math.min(panel.height * 0.4, 2.5) : Math.min(panel.height * 0.8, 5))}px;\"\n            class=\"id {$settings.activePanel == panel.id ? 'active' : ''} print\"\n            x=\"{(panel.x + shift(index).x + panel.width / 2) * scale}\"\n            y=\"{(flipY(panel.y, panel.height) + shift(index).y + Math.min(panel.height * 0.8, 5) / 3 + panel.height / 2) * scale}\">\n            {panel.id}\n          </text>\n        {/each}\n      </g>\n    {/each}>\n  </svg>\n</div>\n","<script>\nimport { settings } from '../stores'\nimport { createEventDispatcher } from 'svelte'\nconst dispatch = createEventDispatcher()\nexport let value,\n  min = 0,\n  max,\n  step,\n  english = '',\n  french = '',\n  measurement = '',\n  unit = ''\n\nfunction highlight() {\n  this.select()\n}\n\nfunction changed() {\n  dispatch('changed')\n}\nfunction convert() {\n  dispatch('convert')\n  unit = !unit\n}\n</script>\n\n<style>\nh5 {\n  font-size: var(--small);\n  padding-left: 2rem;\n  white-space: nowrap;\n  display: flex;\n}\ninput {\n  width: 2%;\n  flex: 2 !important;\n  text-align: right;\n}\nspan {\n  cursor: pointer;\n  padding-right: 1rem;\n}\ninput:hover,\ninput:focus {\n  text-underline-offset: 0.1em;\n  text-decoration: underline;\n}\n</style>\n\n<h5>\n  {$settings.language.includes('fr') ? french : english}:\n  <input\n    type=\"number\"\n    on:click=\"{highlight}\"\n    on:change=\"{changed}\"\n    bind:value\n    min=\"{min}\"\n    max=\"{max}\"\n    step=\"{step}\" />\n  <span on:click=\"{convert}\">{measurement}</span>\n</h5>\n","<script>\nimport { data, settings } from '../stores.js'\nimport { toMM, toInches } from '../methods.js'\nimport Headers from './Headers.svelte'\nimport NumInputs from './NumInputs.svelte'\nimport TextInputs from './TextInputs.svelte'\nimport CheckInputs from './CheckInputs.svelte'\nimport { createEventDispatcher } from 'svelte'\n\nconst dispatch = createEventDispatcher()\nconst french = $settings.language === 'fr'\nlet thickness = $settings.material.thickness\n\nfunction updateCut() {\n  $data.tools.profile.cut_depth -= thickness - $settings.material.thickness\n  thickness = $settings.material.thickness\n}\nfunction convertCSVUnits() {\n  let metric = JSON.parse($data.csv.contents[3][1])\n  $data.csv.panels.forEach((index) => {\n    index[2] = convertUnit(metric, index[2])\n    index[3] = convertUnit(metric, index[3])\n  })\n  // toggle boolean\n  $data.csv.contents[3][1] = $settings.units = !metric\n}\nfunction convertDiameterUnits() {\n  let tool = $settings.cnc[$settings.tools.tool]\n  tool.diameter = convertUnit(tool.mm, tool.diameter)\n}\nfunction convertUnit(unit, value) {\n  let convert = unit ? toInches : toMM\n  return convert(value)\n}\n\nfunction activeEngraver() {\n  activeLibraryTool($settings.tools.engraver)\n}\n\nfunction activeProfile() {\n  activeLibraryTool($settings.tools.profile)\n}\n\nfunction activeLibraryTool(activate) {\n  $settings.tools.tool = activate\n}\n</script>\n\n<style>\n.settings {\n  position: relative;\n  z-index: 2;\n  padding-bottom: 2px;\n  border-bottom: 1px solid var(--second-bg);\n}\n.subsetting {\n  height: 0;\n  width: 100%;\n  overflow: hidden;\n  opacity: 0;\n}\n.subsetting.active {\n  height: auto;\n  opacity: 1;\n}\n.title {\n  cursor: pointer;\n  font-size: var(--large);\n  padding: 0.7rem 0;\n  text-transform: uppercase;\n  font-weight: 100;\n  letter-spacing: 1.2rem;\n  border-bottom: 1px solid var(--second-bg);\n}\n.title:hover,\n.title.active:hover {\n  border-bottom: 1px solid var(--second);\n}\n/* .title.active {\n  border-bottom: 1px dashed var(--primary);\n} */\n\n.transparent {\n  font-size: var(--xxlarge);\n  /* color: var(--second); */\n}\n.title:hover .transparent {\n  color: var(--second);\n}\n\nh5 {\n  font-size: var(--small);\n  padding-left: 2rem;\n  white-space: nowrap;\n  display: flex;\n}\nselect {\n  padding-left: 2rem;\n  padding-right: 1rem;\n  font-weight: 100;\n  font-family: Quicksand, sans-serif;\n  letter-spacing: 0.05rem;\n  direction: rtl;\n  color: var(--primary);\n  background-color: var(--primary-bg);\n  outline: none;\n  border: none;\n}\nselect:focus,\nselect:hover {\n  cursor: pointer;\n  text-decoration: underline;\n  text-underline-offset: 0.1em;\n}\noption {\n  direction: ltr;\n}\n.spread {\n  width: 2%;\n  flex: 2 !important;\n}\n</style>\n\n<div class=\"settings\">\n  <div\n    class=\"title\"\n    class:active=\"{$settings.subsettings.show}\"\n    on:click=\"{() => ($settings.subsettings.show = !$settings.subsettings.show)}\">\n    <span class=\"transparent\">{$settings.subsettings.show ? '⩚' : '⩛'}</span>\n    <span> {french ? 'Parametre' : ' Settings'} </span>\n  </div>\n  <div class=\"subsetting\" class:active=\"{$settings.subsettings.show}\">\n    <!-- project -->\n    <Headers\n      on:toggle=\"{() => ($settings.subsettings.project = !$settings.subsettings.project)}\"\n      open=\"{$settings.subsettings.project}\"\n      icon=\"⟐\"\n      french=\"Projet\"\n      english=\"Project\" />\n    <div class=\"subsetting\" class:active=\"{$settings.subsettings.project}\">\n      <TextInputs\n        english=\"Billing #\"\n        french=\"Facture #\"\n        bind:value=\"{$data.csv.contents[0][1]}\" />\n      <TextInputs\n        english=\"{$data.csv.contents[0][4] ? $data.csv.contents[0][4] : 'Product'}\"\n        french=\"{$data.csv.contents[0][4] ? $data.csv.contents[0][4] : 'Produit'}\"\n        bind:value=\"{$data.csv.contents[0][5]}\" />\n      <CheckInputs\n        on=\"☑︎\"\n        off=\"☐\"\n        french=\"Graver les noms des panneaux\"\n        english=\"Engrave the panel names\"\n        bind:checked=\"{$data.tools.engraver.engrave}\" />\n      <CheckInputs\n        on=\"mm\"\n        off=\"{$settings.language.includes('fr') ? 'po' : 'in'}\"\n        french=\"Unites\"\n        english=\"Units\"\n        on:toggle=\"{convertCSVUnits}\"\n        bind:checked=\"{$settings.units}\" />\n    </div>\n    <!-- sheet info -->\n    <Headers\n      on:toggle=\"{() => ($settings.subsettings.sheet = !$settings.subsettings.sheet)}\"\n      open=\"{$settings.subsettings.sheet}\"\n      icon=\"☐\"\n      english=\"Material\"\n      french=\"Matériau\" />\n    <div class=\"subsetting\" class:active=\"{$settings.subsettings.sheet}\">\n      <TextInputs\n        english=\"{$data.csv.contents[0][2] ? $data.csv.contents[0][2] : 'Type of panel'}\"\n        french=\"{$data.csv.contents[0][2] ? $data.csv.contents[0][2] : 'Sorte de panneau'}\"\n        bind:value=\"{$data.csv.contents[0][3]}\" />\n      <NumInputs\n        english=\"Width\"\n        french=\"Largeur\"\n        max=\"61\"\n        bind:value=\"{$settings.material.width}\"\n        step=\"0.0625\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Height\"\n        french=\"Hauteur\"\n        bind:value=\"{$settings.material.height}\"\n        max=\"121\"\n        step=\"0.0625\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Thickness\"\n        french=\"Épaisseur\"\n        on:changed=\"{updateCut}\"\n        bind:value=\"{$settings.material.thickness}\"\n        max=\"5\"\n        step=\"0.005\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Margins\"\n        french=\"Marges\"\n        bind:value=\"{$settings.material.margins}\"\n        max=\"5\"\n        step=\"0.05\"\n        measurement=\"{'\"'}\" />\n    </div>\n    <!-- nesting options -->\n    <Headers\n      on:toggle=\"{() => ($settings.subsettings.nest = !$settings.subsettings.nest)}\"\n      open=\"{$settings.subsettings.nest}\"\n      icon=\"⊞\"\n      english=\"Nesting\"\n      french=\"Nesting\" />\n    <div class=\"subsetting\" class:active=\"{$settings.subsettings.nest}\">\n      <CheckInputs\n        english=\"Aligned to the\"\n        french=\"Aligné avec le\"\n        bind:checked=\"{$settings.nestDirectionBottom}\"\n        on=\"{french ? 'bas' : 'Bottom'} ⤓\"\n        off=\"{french ? 'haut' : 'Top'} ⤒\" />\n      <CheckInputs\n        english=\"Placement direction\"\n        french=\"Direction de placement\"\n        bind:checked=\"{$settings.nestTypeColumn}\"\n        on=\"{french ? 'Colonnes' : 'Columns'} ⇈\"\n        off=\"{french ? 'Lignes' : 'Rows'} ⇉\" />\n      <h5>\n        {french ? 'Classé par le:' : 'Sorted by:'}\n        <span class=\"spread\">{''}</span>\n        <div class=\"filler\">{''}</div>\n        <select class=\"right\" bind:value=\"{$settings.nestOrder}\">\n          <option value=\"widest\">\n            <span>{french ? 'Plus large' : 'Widest'} ↔︎</span>\n          </option>\n          <option value=\"tallest\">\n            <span>{french ? 'Plus haut' : 'Tallest'} ↕︎</span>\n          </option>\n          <option value=\"biggest\">\n            <span>{french ? 'Plus grand' : 'Biggest'} ⤢</span>\n          </option>\n        </select>\n      </h5>\n    </div>\n    <!-- cutter -->\n    <Headers\n      on:toggle=\"{() => ($settings.subsettings.profile = !$settings.subsettings.profile)}\"\n      open=\"{$settings.subsettings.profile}\"\n      icon=\"⨆\"\n      english=\"Profile cut\"\n      french=\"Coupe profile\" />\n    <div class=\"subsetting\" class:active=\"{$settings.subsettings.profile}\">\n      <h5>\n        {french ? 'Outil:' : 'Tool:'}\n        <span class=\"spread\">{''}</span>\n        <!-- svelte-ignore a11y-no-onchange -->\n        <select\n          bind:value=\"{$settings.tools.profile}\"\n          on:change=\"{activeProfile}\">\n          {#each Object.keys($settings.cnc) as tool}\n            {#if $settings.cnc[tool].type.includes('mill')}\n              <option value=\"{tool}\">\n                ({tool}) -\n                {$settings.cnc[tool].diameter}\n                {$settings.cnc[tool].type}\n              </option>\n            {/if}\n          {/each}\n        </select>\n      </h5>\n      <NumInputs\n        english=\"Cut depth\"\n        french=\"Profondeur coupe\"\n        bind:value=\"{$data.tools.profile.cut_depth}\"\n        max=\"{$settings.cnc[$settings.tools.profile].max_depth}\"\n        step=\"0.05\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Smallest for one pass\"\n        french=\"Plus petit pour un passe\"\n        bind:value=\"{$data.tools.profile.min_size}\"\n        max=\"{$settings.material.width}\"\n        step=\"0.5\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Last pass link\"\n        french=\"Lien pour dernier passe\"\n        bind:value=\"{$data.tools.profile.link}\"\n        max=\"{$settings.material.thickness}\"\n        step=\"0.005\"\n        measurement=\"{'\"'}\" />\n    </div>\n    <!-- engraver -->\n    <Headers\n      on:toggle=\"{() => ($settings.subsettings.engraver = !$settings.subsettings.engraver)}\"\n      open=\"{$settings.subsettings.engraver}\"\n      icon=\"⋁\"\n      english=\"Engraving\"\n      french=\"Graver\" />\n    <div class=\"subsetting\" class:active=\"{$settings.subsettings.engraver}\">\n      <h5>\n        {french ? 'Outil:' : 'Tool:'}\n        <span class=\"spread\">{''}</span>\n        <!-- svelte-ignore a11y-no-onchange -->\n        <select\n          bind:value=\"{$settings.tools.engraver}\"\n          on:change=\"{activeEngraver}\">\n          {#each Object.keys($settings.cnc) as tool}\n            {#if $settings.cnc[tool].type.includes('nose') || $settings.cnc[tool].type.includes('V-')}\n              <option value=\"{tool}\">\n                ({tool}) -\n                {$settings.cnc[tool].diameter}\n                {$settings.cnc[tool].type}\n              </option>\n            {/if}\n          {/each}\n        </select>\n      </h5>\n      <NumInputs\n        english=\"Cut depth\"\n        french=\"Profondeur coupe\"\n        bind:value=\"{$data.tools.engraver.cut_depth}\"\n        max=\"{$settings.cnc[$settings.tools.engraver].max_depth}\"\n        step=\"0.005\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Placement from left\"\n        french=\"Placement de gauche\"\n        bind:value=\"{$data.tools.engraver.xStart}\"\n        max=\"10\"\n        step=\"0.125\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Placement from bottom\"\n        french=\"Placement de bas\"\n        bind:value=\"{$data.tools.engraver.yStart}\"\n        max=\"10\"\n        step=\"0.125\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Letter height\"\n        french=\"Hauteur de la lettre\"\n        bind:value=\"{$data.tools.engraver.size}\"\n        max=\"3\"\n        step=\"0.05\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Space between letters\"\n        french=\"Espace entre les lettres\"\n        bind:value=\"{$data.tools.engraver.spacing}\"\n        max=\"2\"\n        step=\"0.05\"\n        measurement=\"{'\"'}\" />\n    </div>\n    <!-- tool library -->\n    <Headers\n      on:toggle=\"{() => ($settings.subsettings.library = !$settings.subsettings.library)}\"\n      open=\"{$settings.subsettings.library}\"\n      icon=\"⩐\"\n      english=\"CNC Library\"\n      french=\"Bibliotheque CNC\" />\n    <div class=\"subsetting\" class:active=\"{$settings.subsettings.library}\">\n      <h5>\n        {french ? 'Outil #' : 'Tool #'}\n        <span class=\"spread\">{''}</span>\n        <select bind:value=\"{$settings.tools.tool}\">\n          {#each Object.keys($settings.cnc) as tool}\n            {#if $settings.cnc[tool]}\n              <option value=\"{tool}\">\n                ({tool}) -\n                {$settings.cnc[tool].diameter}{$settings.cnc[tool].mm ? 'mm' : '\"'}\n                {$settings.cnc[tool].type}\n              </option>\n            {/if}\n          {/each}\n        </select>\n      </h5>\n      <NumInputs\n        english=\"Diameter\"\n        french=\"Diametre\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].diameter}\"\n        max=\"{$settings.cnc[$settings.tools.tool].mm ? 150 : 5}\"\n        step=\"{$settings.cnc[$settings.tools.tool].mm ? 0.5 : 0.03125}\"\n        on:convert=\"{convertDiameterUnits}\"\n        bind:unit=\"{$settings.cnc[$settings.tools.tool].mm}\"\n        measurement=\"{$settings.cnc[$settings.tools.tool].mm ? 'mm' : '\"'}\" />\n      <TextInputs\n        english=\"Type\"\n        french=\"Type\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].type}\" />\n      <NumInputs\n        english=\"Spindle speed\"\n        french=\"Vitesse spindle\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].spindle}\"\n        max=\"30000\"\n        step=\"100\"\n        measurement=\"RPM\" />\n      <NumInputs\n        english=\"Plunge rate\"\n        french=\"Vitesse de plonge\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].plunge}\"\n        max=\"1000\"\n        step=\"5\"\n        measurement=\"{'\"/min'}\" />\n      <NumInputs\n        english=\"Plunge ramp\"\n        french=\"Longeur de plonge\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].ramp}\"\n        max=\"5\"\n        step=\"0.125\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Feed rate\"\n        french=\"itesse de coupe\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].feed}\"\n        max=\"1000\"\n        step=\"10\"\n        measurement=\"{'\"/min'}\" />\n      <NumInputs\n        english=\"Max cut depth\"\n        french=\"Max profondeur coupe\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].max_depth}\"\n        max=\"5\"\n        step=\"0.03125\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Max depth/pass\"\n        french=\"Max profondeur/passe\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].pass_depth}\"\n        max=\"5\"\n        step=\"0.03125\"\n        measurement=\"{'\"'}\" />\n    </div>\n  </div>\n</div>\n","/////////////////TO DO//////////////////////////////////\n// refactor ugly code\n\nlet NEST_ORDER = 'widest'\n\nexport function Nest(panelCSV, settings) {\n  NEST_ORDER = settings.nestOrder\n  let ERRORS = [],\n    IS_FROM_BOTTOM = settings.nestDirectionBottom,\n    IS_BY_COLUMNS = settings.nestTypeColumn,\n    CUTTER = settings.cnc[settings.tools.profile].diameter || 0.375,\n    MATERIAL = {\n      width: settings.material.width || 49,\n      height: settings.material.height || 97,\n      margins: settings.material.margins || 0.25,\n      max_width: () => MATERIAL.width - MATERIAL.margins * 2 - CUTTER,\n      max_height: () => MATERIAL.height - MATERIAL.margins * 2 - CUTTER,\n    },\n    PANELS = panelObjectMap(panelCSV), // raw csv panel input converted\n    SHEETS = makeSheets(PANELS)\n\n  return { sheets: SHEETS, errors: ERRORS }\n\n  ////// helper functions below ///////////////\n\n  function panelObjectMap(csv) {\n    return new List(\n      csv.flatMap((i) => panelTranslator(i).map((i) => new Panel(i)))\n    ).flat()\n\n    function panelTranslator([id, quantity, width, height]) {\n      return removeErrors()\n\n      function removeErrors() {\n        if (width > MATERIAL.max_width() || height > MATERIAL.max_height()) {\n          ERRORS.push(`Panneau ${id} est trop gros`)\n          // ERRORS.push(`Panel ${id} is too big`)\n          return []\n        } else if (!width || !height || !quantity) return []\n        return separatePanels()\n      }\n      function separatePanels(n = 0, panelOutput = []) {\n        width += CUTTER\n        height += CUTTER\n        while (quantity > n++) {\n          let qID = ''\n          if (quantity > 1) qID = `${n} sur ${quantity}`\n          // if ( quantity > 1 ) q = `${n} of ${quantity}`\n          panelOutput.push([qID, id, width, height, NEST_ORDER])\n          // n++\n        }\n        return panelOutput\n      }\n    }\n  }\n\n  function fillRow(panels) {\n    let row = new List(panels.placementBy().place())\n    let maxHeight = row[0].height\n    // add columns of panels to row until\n    // no space remains or no more panels\n    while (panels.fitsRow(row, MATERIAL.max_width())) {\n      let column = new List(panels.fitsRow(row, MATERIAL.max_width()).place())\n      // add more panels to column if space remains\n      while (panels.fitsColumn(column, maxHeight)) {\n        column.push(panels.fitsColumn(column, maxHeight).place())\n      }\n      // return nested array only if\n      // more than one panel in column\n      if (column.length === 1) row.push(column[0])\n      else row.push(column)\n    }\n    return row.ascendingHeight()\n  }\n  function makeRows(panels) {\n    let rows = new List()\n    while (panels.notPlaced().length > 0) {\n      let row = fillRow(panels)\n      rows.push(\n        new Row(\n          row.rowWidth(), //width\n          row.rowHeight(), // height\n          row.totalArea(), // area\n          row,\n          NEST_ORDER // group\n        )\n      )\n    }\n    return rows\n  }\n\n  function fillColumn(panels) {\n    let column = new List(panels.placementBy().place())\n    let maxWidth = column[0].width\n    // add rows of panels to column until\n    // no space remains or no more panels\n    while (panels.fitsColumn(column, MATERIAL.max_height())) {\n      let row = new List(\n        panels.fitsColumn(column, MATERIAL.max_height()).place()\n      )\n      // add more panels to row if space remains\n      while (panels.fitsRow(row, maxWidth)) {\n        row.push(panels.fitsRow(row, maxWidth).place())\n      }\n      // return nested array only if\n      // more than one panel in row\n      if (row.length === 1) column.push(row[0])\n      else column.push(row)\n    }\n    // smallest pieces to center of column\n    // return column.shuffle()\n    return column.ascendingWidth()\n  }\n\n  function makeColumns(panels) {\n    let columns = new List()\n    while (panels.notPlaced().length > 0) {\n      let column = fillColumn(panels)\n      columns.push(\n        new Column(\n          column.columnWidth(), //width\n          column.columnHeight(), // height\n          column.totalArea(), // area\n          column,\n          NEST_ORDER // group\n        )\n      )\n    }\n    return columns\n  }\n\n  function fillSheetColumns(columns) {\n    let sheet = new List(columns.placementBy().place())\n    while (columns.fitsSheetColumn(sheet, MATERIAL.max_width())) {\n      sheet.push(columns.fitsSheetColumn(sheet, MATERIAL.max_width()).place())\n    }\n    return sheet.ascendingHeight()\n  }\n\n  function fillSheetRows(rows) {\n    let sheet = new List(rows.placementBy().place())\n    while (rows.fitsSheetRow(sheet, MATERIAL.max_height())) {\n      sheet.push(rows.fitsSheetRow(sheet, MATERIAL.max_height()).place())\n    }\n    return sheet.ascendingWidth()\n  }\n\n  function makeSheets(panels) {\n    let sheets = new List()\n    if (IS_BY_COLUMNS) {\n      let columns = makeColumns(panels)\n      while (columns.notPlaced().length > 0) {\n        let sheet = fillSheetColumns(columns)\n        addCoordinatesColumn(sheet)\n        sheets.push(\n          new Sheet(\n            sheet.rowWidth(), // width\n            sheet.rowHeight(), // height\n            sheet.totalArea(), // area\n            sheet.map((list) => list.group).flatten(2), // group\n            sheet, // columns\n            sheets.length + 1, // id\n            MATERIAL\n          )\n        )\n      }\n    } else {\n      let rows = makeRows(panels)\n      while (rows.notPlaced().length > 0) {\n        let sheet = fillSheetRows(rows)\n        addCoordinatesRow(sheet)\n        sheets.push(\n          new Sheet(\n            sheet.columnWidth(), // width\n            sheet.columnHeight(), // height\n            sheet.totalArea(), // area\n            sheet.map((list) => list.group).flatten(2), // group\n            sheet, // columns\n            sheets.length + 1, // id\n            MATERIAL\n          )\n        )\n      }\n    }\n    return sheets\n  }\n\n  function addCoordinatesRow(rows) {\n    let margin = MATERIAL.margins - CUTTER / 2\n\n    let yPos = new List()\n    rows.forEach((row, i) => {\n      // xPos map of columns, first index === start\n      if (i === 0) {\n        yPos.push(\n          IS_FROM_BOTTOM ? margin : MATERIAL.height - margin - row.height\n        )\n      }\n      // everything after calculated += prev. width\n      else {\n        yPos.push(\n          IS_FROM_BOTTOM\n            ? yPos.last() + rows[i - 1].height\n            : yPos.last() - row.height\n        )\n      }\n      // iterate each row in column\n      let xPos = new List()\n      row.group.forEach((column, j, columns) => {\n        // yPos map of rows, first index === start\n        xPos.push(\n          firstIndex(j) ? margin : xPos.last() + columns[j - 1].columnWidth()\n        )\n        // add x and y prop to each row in column\n        // not good clean code -- needs refactoring\n        let isFirstRow = firstIndex(i) && rows.length > 1\n        if (column instanceof Panel) {\n          // set x pos\n          column.y = isFirstRow // true? align right otherwise align left\n            ? yPos[i] + rows[i].height - column.height\n            : yPos[i]\n          // set y pos\n          column.x = xPos[j]\n        } else {\n          column.forEach((rowCol, k) => {\n            // set x pos\n            rowCol.y = firstIndex(k)\n              ? isFirstRow // true? align right otherwise align left\n                ? yPos[i] + rows[i].height - rowCol.height\n                : yPos[i]\n              : isFirstRow // true? align right otherwise align left\n              ? column[k - 1].y - rowCol.height\n              : column[k - 1].y + column[k - 1].height\n            // set y pos\n            rowCol.x =\n              // firstIndex(k)\n              // ? xPos[j] + row.rowWidth() - rowCol.width\n              // :\n              xPos[j]\n            // IS_FROM_BOTTOM ?\n          })\n        }\n      })\n    })\n  }\n\n  function addCoordinatesColumn(columns) {\n    let margin = MATERIAL.margins - CUTTER / 2\n\n    let xPos = new List()\n    columns.forEach((column, i) => {\n      // xPos map of columns, first index === start\n      if (i === 0) {\n        xPos.push(margin)\n      }\n      // everything after calculated += prev. width\n      else {\n        xPos.push(xPos.last() + columns[i - 1].width)\n      }\n      // iterate each row in column\n      let yPos = new List()\n      column.group.forEach((row, j, rows) => {\n        // yPos map of rows, first index === start\n        yPos.push(\n          firstIndex(j)\n            ? IS_FROM_BOTTOM\n              ? margin\n              : MATERIAL.height - margin - row.rowHeight()\n            : IS_FROM_BOTTOM\n            ? yPos.last() + rows[j - 1].rowHeight()\n            : yPos.last() - row.rowHeight()\n        )\n        // add x and y prop to each row in column\n        // not good clean code -- needs refactoring\n        let isFirstColumn = firstIndex(i) && columns.length > 1\n        if (row instanceof Panel) {\n          // set x pos\n          row.x = isFirstColumn // true? align right otherwise align left\n            ? xPos[i] + columns[i].width - row.width\n            : xPos[i]\n          // set y pos\n          row.y = yPos[j]\n        } else {\n          row.forEach((rowCol, k) => {\n            // set x pos\n            rowCol.x = firstIndex(k)\n              ? isFirstColumn // true? align right otherwise align left\n                ? xPos[i] + columns[i].width - rowCol.width\n                : xPos[i]\n              : isFirstColumn // true? align right otherwise align left\n              ? row[k - 1].x - rowCol.width\n              : row[k - 1].x + row[k - 1].width\n            // set y pos\n            rowCol.y = IS_FROM_BOTTOM ? yPos[j] : yPos[j - 1] - rowCol.height\n          })\n        }\n      })\n    })\n  }\n\n  function firstIndex(index) {\n    return index === 0\n  }\n}\n\nclass Placement {\n  constructor(nestOrder) {\n    this.placed = false\n    this.nestOrder = nestOrder\n  }\n  place() {\n    this.placed = true\n    return this\n  }\n}\nclass Panel extends Placement {\n  constructor([quantityID, id, width, height, nestOrder]) {\n    super(nestOrder)\n    this.nestOrder = nestOrder\n    this.quantityID = quantityID\n    this.id = id\n    this.width = width\n    this.height = height\n    this.area = this.height * this.width\n    this.x = 0\n    this.y = 0\n  }\n\n  columnWidth() {\n    return this.width\n  }\n  rowHeight() {\n    return this.height\n  }\n}\nclass Column extends Placement {\n  constructor(width, height, area, group, nestOrder) {\n    super(nestOrder)\n    this.width = width\n    this.height = height\n    this.area = area\n    this.group = group\n  }\n}\nclass Row extends Column {\n  constructor(width, height, area, group, nestOrder) {\n    super(width, height, area, group, nestOrder)\n  }\n}\nclass Sheet extends Column {\n  constructor(width, height, area, group, columns, id, sheet) {\n    super(width, height, area, group)\n    this.columns = columns\n    this.sheet_width = sheet.width\n    this.sheet_height = sheet.height\n    this.sheet_area = sheet.width * sheet.height\n    this.waste_area = this.sheet_area - this.area\n    this.waste_ratio = 1 - this.area / this.sheet_area\n    this.id = 'Feuille ' + id\n    // this.id = \"Sheet \" + id\n    delete this.placed\n  }\n}\nclass List extends Array {\n  //  methods for arrays of Panel or group objects\n  // extending array methods\n  first() {\n    return this[0]\n  }\n  last() {\n    return this[this.length - 1]\n  }\n  flatten(dimensions = 1) {\n    let flattened = this\n    while (dimensions--) {\n      flattened = flattened.flat()\n    }\n    return flattened\n  }\n  // sorting methods\n  ascendingWidth() {\n    return new List(...this).sort((a, b) =>\n      b.width != a.width ? b.width - a.width : b.height - a.height\n    )\n  }\n  ascendingHeight() {\n    return new List(...this).sort((a, b) =>\n      b.height != a.height ? b.height - a.height : b.width - a.width\n    )\n  }\n  // methods to find unplaced panels\n  notPlaced() {\n    return this.filter((panel) => !panel.placed)\n  }\n  widest() {\n    return this.notPlaced().ascendingWidth().first()\n  }\n  narrowest() {\n    return this.notPlaced().ascendingWidth().last()\n  }\n  tallest() {\n    return this.notPlaced().ascendingHeight().first()\n  }\n  shortest() {\n    return this.notPlaced().ascendingHeight().last()\n  }\n  biggest() {\n    return this.sort((a, b) => b.area - a.area)\n      .notPlaced()\n      .first()\n  }\n  smallest() {\n    return this.sort((a, b) => a.area - b.area)\n      .notPlaced()\n      .first()\n  }\n  placementBy() {\n    return {\n      widest: this.widest(),\n      tallest: this.tallest(),\n      biggest: this.biggest(),\n    }[this.length ? this[0].nestOrder : '']\n  }\n  // group measurement methods\n  totalWidth() {\n    return this.reduce((total, panel) => {\n      if (panel instanceof List) {\n        return total + panel.ascendingWidth().first().width\n      }\n      return total + panel.width\n    }, 0)\n  }\n  totalHeight() {\n    return this.reduce((total, panel) => {\n      if (panel instanceof List) {\n        return total + panel.ascendingHeight().first().height\n      }\n      return total + panel.height\n    }, 0)\n  }\n  totalArea() {\n    return this.flatten(3).reduce((total, panel) => total + panel.area, 0)\n  }\n  columnWidth() {\n    return this.flat().ascendingWidth().first().width\n  }\n  columnHeight() {\n    return this.totalHeight()\n  }\n  rowWidth() {\n    return this.totalWidth()\n  }\n  rowHeight() {\n    return this.flat().ascendingHeight().first().height\n  }\n  remainingWidth(maxWidth) {\n    return maxWidth - this.totalWidth()\n  }\n  remainingHeight(maxHeight) {\n    return maxHeight - this.totalHeight()\n  }\n  fitsColumn(group, maxHeight) {\n    return this.filter((panel) => panel.width <= group[0].width).fitsSheetRow(\n      group,\n      maxHeight\n    )\n  }\n  fitsRow(group, maxWidth) {\n    return this.filter(\n      (panel) => panel.height <= group[0].height\n    ).fitsSheetColumn(group, maxWidth)\n  }\n  fitsSheetColumn(group, maxWidth) {\n    return this.notPlaced()\n      .filter((panel) => panel.width < group.remainingWidth(maxWidth))\n      .placementBy()\n  }\n  fitsSheetRow(group, maxHeight) {\n    return this.notPlaced()\n      .filter((panel) => panel.height < group.remainingHeight(maxHeight))\n      .placementBy()\n  }\n}\n","export const CHARACTERS = {\n  A: [\n    [0, 0],\n    [0, 1],\n    [1, 4],\n    [2, 1],\n    [2, 0],\n    [2, 1],\n    [0, 1],\n  ],\n  B: [\n    [0, 0],\n    [0, 4],\n    [1, 4],\n    [2, 3],\n    [1, 2],\n    [2, 1],\n    [1, 0],\n    [0, 0],\n  ],\n  C: [\n    [2, 1],\n    [1, 0],\n    [0, 1],\n    [0, 3],\n    [1, 4],\n    [2, 3],\n  ],\n  D: [\n    [0, 0],\n    [0, 4],\n    [1, 4],\n    [2, 3],\n    [2, 1],\n    [1, 0],\n    [0, 0],\n  ],\n  E: [\n    [2, 0],\n    [0, 0],\n    [0, 2],\n    [1, 2],\n    [0, 2],\n    [0, 4],\n    [2, 4],\n  ],\n  F: [\n    [0, 0],\n    [0, 2],\n    [1, 2],\n    [0, 2],\n    [0, 4],\n    [2, 4],\n  ],\n  G: [\n    [1, 2],\n    [2, 2],\n    [2, 1],\n    [1, 0],\n    [0, 1],\n    [0, 3],\n    [1, 4],\n    [2, 3],\n  ],\n  H: [\n    [0, 0],\n    [0, 4],\n    [0, 2],\n    [2, 2],\n    [2, 4],\n    [2, 0],\n  ],\n  I: [\n    [0, 0],\n    [2, 0],\n    [1, 0],\n    [1, 4],\n    [0, 4],\n    [2, 4],\n  ],\n  J: [\n    [0, 1],\n    [1, 0],\n    [2, 1],\n    [2, 4],\n    [1, 4],\n  ],\n  K: [\n    [0, 0],\n    [0, 4],\n    [0, 2],\n    [1, 2],\n    [2, 4],\n    [1, 2],\n    [2, 0],\n  ],\n  L: [\n    [2, 1],\n    [2, 0],\n    [0, 0],\n    [0, 4],\n  ],\n  M: [\n    [0, 0],\n    [0, 4],\n    [1, 2],\n    [2, 4],\n    [2, 0],\n  ],\n  N: [\n    [0, 0],\n    [0, 4],\n    [2, 0],\n    [2, 4],\n  ],\n  O: [\n    [2, 1],\n    [1, 0],\n    [0, 1],\n    [0, 3],\n    [1, 4],\n    [2, 3],\n    [2, 1],\n  ],\n  P: [\n    [0, 0],\n    [0, 4],\n    [1, 4],\n    [2, 3],\n    [1, 2],\n    [0, 2],\n  ],\n  Q: [\n    [1, 2],\n    [2, 1],\n    [1, 0],\n    [0, 1],\n    [0, 3],\n    [1, 4],\n    [2, 3],\n    [2, 1],\n  ],\n  R: [\n    [0, 0],\n    [0, 4],\n    [1, 4],\n    [2, 3],\n    [1, 2],\n    [2, 0],\n  ],\n  S: [\n    [0, 1],\n    [1, 0],\n    [2, 1],\n    [0, 3],\n    [1, 4],\n    [2, 3],\n  ],\n  T: [\n    [1, 0],\n    [1, 4],\n    [0, 4],\n    [2, 4],\n  ],\n  U: [\n    [0, 4],\n    [0, 1],\n    [1, 0],\n    [2, 1],\n    [2, 4],\n  ],\n  V: [\n    [0, 4],\n    [0, 3],\n    [1, 0],\n    [2, 3],\n    [2, 4],\n  ],\n  W: [\n    [0, 4],\n    [0, 0],\n    [1, 2],\n    [2, 0],\n    [2, 4],\n  ],\n  X: [\n    [0, 0],\n    [2, 4],\n    [1, 2],\n    [0, 4],\n    [2, 0],\n  ],\n  Y: [\n    [1, 0],\n    [1, 2],\n    [0, 4],\n    [1, 2],\n    [2, 4],\n  ],\n  Z: [\n    [2, 0],\n    [0, 0],\n    [2, 4],\n    [0, 4],\n  ],\n  1: [\n    [0, 0],\n    [2, 0],\n    [1, 0],\n    [1, 4],\n    [0, 3],\n  ],\n  2: [\n    [0, 3],\n    [1, 4],\n    [2, 3],\n    [0, 0],\n    [2, 0],\n  ],\n  3: [\n    [0, 1],\n    [1, 0],\n    [2, 1],\n    [1, 2],\n    [2, 3],\n    [1, 4],\n    [0, 3],\n  ],\n  4: [\n    [2, 0],\n    [2, 4],\n    [0, 1],\n    [2, 1],\n  ],\n  5: [\n    [0, 1],\n    [1, 0],\n    [2, 1],\n    [2, 2],\n    [1, 3],\n    [0, 2],\n    [0, 4],\n    [2, 4],\n  ],\n  6: [\n    [0, 2],\n    [1, 2],\n    [2, 1],\n    [1, 0],\n    [0, 1],\n    [0, 3],\n    [1, 4],\n    [2, 3],\n  ],\n  7: [\n    [0, 0],\n    [2, 4],\n    [0, 4],\n    [0, 3],\n  ],\n  8: [\n    [1, 0],\n    [0, 1],\n    [2, 3],\n    [1, 4],\n    [0, 3],\n    [2, 1],\n    [1, 0],\n  ],\n  9: [\n    [0, 1],\n    [1, 0],\n    [2, 1],\n    [2, 3],\n    [1, 4],\n    [0, 3],\n    [1, 2],\n    [2, 2],\n  ],\n  0: [\n    [0, 1],\n    [0, 3],\n    [1, 4],\n    [2, 3],\n    [2, 1],\n    [1, 0],\n    [0, 1],\n    [2, 3],\n  ],\n  '=': [\n    // square or back panel icon\n    [\n      [0, 1],\n      [1, 3],\n      [2, 3],\n      [2, 1],\n      [0, 1],\n    ],\n  ],\n  '-': [\n    // dash or shelf icon?\n    [0, 2],\n    [2, 2],\n  ],\n  '[': [\n    // xStart side icon\n    [0, 1],\n    [0, 3],\n    [1, 3, '+'], // lift bit before next move\n    [1, 3, '-'],\n    [2, 3],\n    [2, 1],\n    [1, 1],\n    [1, 3],\n  ],\n  ']': [\n    //right side icon\n    [0, 1],\n    [0, 3],\n    [1, 3],\n    [1, 1],\n    [0, 1],\n    [2, 1, '+'], // lift bit before next move\n    [2, 1, '-'],\n    [2, 3],\n  ],\n  \"'\": [\n    // rop icon\n    [0, 1],\n    [0, 2],\n    [2, 2],\n    [2, 1],\n    [0, 1],\n    [0, 3, '+'],\n    [0, 3, '-'],\n    [2, 3],\n  ],\n\n  ',': [\n    //yStart icon\n    [0, 1],\n    [2, 1],\n    [2, 2, '+'],\n    [2, 2, '-'],\n    [0, 2],\n    [0, 3],\n    [2, 3],\n    [2, 2],\n  ],\n}\n","import { CHARACTERS } from './engravingFont.js'\nimport { formatDate, cleanFloat } from './methods.js'\n\nexport function Gcode(data, settings) {\n  let CURRENT_TOOL = 9\n  const SHEETS = data.sheets,\n    RAPID = '00',\n    FEED = '01',\n    SPINDLE_SPEED = () => settings.cnc[CURRENT_TOOL].spindle,\n    FEED_RATE = () => settings.cnc[CURRENT_TOOL].feed,\n    PLUNGE_RATE = () => settings.cnc[CURRENT_TOOL].plunge,\n    PLUNGE_DISTANCE = () => settings.cnc[CURRENT_TOOL].ramp,\n    X_HOME = settings.material.width / 2 || 30.0,\n    Y_HOME = Math.min(settings.material.height + 10, 122),\n    SAFE_HEIGHT = settings.material.thickness + 0.25 || 2,\n    MATERIAL_HEIGHT = settings.material.thickness,\n    PROFILE_DEPTH = cleanFloat(\n      Math.max(MATERIAL_HEIGHT - data.tools.profile.cut_depth, 0)\n    ),\n    MAX_PASS_DEPTH = settings.cnc[CURRENT_TOOL].pass_depth,\n    LINK_DEPTH = PROFILE_DEPTH + data.tools.profile.link,\n    SMALL_PANEL = data.tools.profile.min_size,\n    PROFILE_TOOL = settings.tools.profile,\n    ENGRAVE = data.tools.engraver.engrave,\n    ENGRAVE_TOOL = settings.tools.engraver\n\n  let output = HEADER()\n  SHEETS.forEach((sheet, index, array) => {\n    output += `( []: ${index + 1} )\\n`\n    if (ENGRAVE) {\n      output += TOOL_CHANGE(ENGRAVE_TOOL)\n      sheet.columns.forEach((column, index) => {\n        column.group\n          .flat()\n          .sort((a, b) => sortColumnOrRow(settings.nestTypeColumn, a, b, index))\n          .forEach(\n            (panel) =>\n              (output += ENGRAVE_LABEL({\n                label: panel.id,\n                engravingDepth: data.tools.engraver.cut_depth,\n                xStart: panel.x + 1,\n                yStart: panel.y + 1,\n                size: data.tools.engraver.size,\n                spacing: data.tools.engraver.spacing,\n                direction: data.tools.engraver.direction,\n              }))\n          )\n      })\n    }\n    output += TOOL_CHANGE(PROFILE_TOOL)\n    sheet.columns.forEach((column, index) => {\n      column.group\n        .flat()\n        .sort((a, b) => sortColumnOrRow(settings.nestTypeColumn, a, b, index))\n        .forEach((panel) => (output += PROFILE_CUT(panel)))\n    })\n    if (index !== array.length - 1) output += SHEET_CHANGE()\n  })\n  output += FOOTER()\n\n  return output\n\n  ///////////////////////////////////\n  //    helpers to write g-code\n  //////////////////////////////////\n\n  function PROFILE_CUT(panel) {\n    const x = cleanFloat(panel.x),\n      y = cleanFloat(panel.y),\n      x_ = cleanFloat(x + panel.width),\n      y_ = cleanFloat(y + panel.height),\n      yStart = cleanFloat(y_ - PLUNGE_DISTANCE())\n\n    return (\n      `( ------------------ )\\n` +\n      `( ${panel.id} )\\n` +\n      MOVE({ x, y: yStart, z: SAFE_HEIGHT }) +\n      MOVE({ z: MATERIAL_HEIGHT + 0.005 }) +\n      pass() +\n      MOVE({ g: RAPID, z: SAFE_HEIGHT })\n    )\n\n    function pass() {\n      const contour = (depth) =>\n        MOVE({ g: FEED, y: y_, z: depth, f: PLUNGE_RATE() }) +\n        MOVE({ x: x_, f: FEED_RATE() }) +\n        MOVE({ y }) +\n        MOVE({ x }) +\n        MOVE({ y: depth === PROFILE_DEPTH ? y_ : yStart })\n\n      let fullDepth = false,\n        passes = '',\n        depth = MATERIAL_HEIGHT,\n        smallPanel = () =>\n          depth === PROFILE_DEPTH &&\n          (panel.width < SMALL_PANEL || panel.height < SMALL_PANEL)\n      while (!fullDepth) {\n        depth = Math.max(depth - MAX_PASS_DEPTH, PROFILE_DEPTH)\n        if (smallPanel()) passes += contour(LINK_DEPTH)\n        passes += contour(depth)\n        if (depth === PROFILE_DEPTH) fullDepth = true\n      }\n      return passes\n    }\n  }\n  function ENGRAVE_LABEL({\n    label,\n    engravingDepth = 0.005,\n    xStart = 1,\n    yStart = 1,\n    size = 0.3,\n    spacing = 0.1,\n    direction = 'ltr',\n  }) {\n    return engravingGcode()\n\n    function engravingGcode() {\n      return characterArray()\n        .map((character, index) => characterToGcode(character, index))\n        .join('')\n      function characterArray() {\n        return sanitizeString(label).split('')\n      }\n      function sanitizeString(string) {\n        return (\n          string + ''.toUpperCase().replace(/[^A-Z0-9\\[\\]\\,\\'\\s\\-\\=]/gi, '')\n        )\n      }\n    }\n    function characterToGcode(character, notFirstCharacter) {\n      if (notFirstCharacter) moveStartingPoint()\n      if (character === ' ') return\n\n      return (\n        `( ------------------ )\\n( ${character} )\\n` +\n        engravePath() +\n        liftEngraver()\n      )\n\n      function moveStartingPoint() {\n        if (direction === 'ltr') xStart += spacing + size / 2\n        else yStart -= spacing + size\n      }\n      function engravePath() {\n        return (\n          CHARACTERS[character]\n            .map(([x, y, z = ''], index) => {\n              // only for the first point\n              if (!index) {\n                return (\n                  // rapid move to first point\n                  MOVE({ g: RAPID, x: posX(x), y: posY(y) }) +\n                  // lower engraver to material\n                  MOVE({ g: FEED, z: posZ('-'), f: 200 })\n                )\n              }\n              // move engraver to next point\n              return MOVE({ x: posX(x), y: posY(y), z: posZ(z) })\n            })\n            // turn array back to string\n            .join('')\n        )\n      }\n      function liftEngraver() {\n        return MOVE({ g: RAPID, z: SAFE_HEIGHT })\n      }\n      function posX(x) {\n        return cleanFloat(xStart + resizeCharacter(x))\n      }\n      function posY(y) {\n        return cleanFloat(yStart + resizeCharacter(y))\n      }\n      function posZ(z) {\n        if (z === '+') return SAFE_HEIGHT\n        if (z === '-') return MATERIAL_HEIGHT - engravingDepth\n        return z\n      }\n      function resizeCharacter(point) {\n        return point * 0.25 * size\n      }\n    }\n  }\n  function MOVE({ g = '', x = '', y = '', z = '', f = '' }) {\n    return G() + X() + Y() + Z() + F() + '\\n'\n\n    function G() {\n      return g === '' ? g : `G${g} `\n    }\n    function X() {\n      return x === '' ? x : `X${addDecimal(x)} `\n    }\n    function Y() {\n      return y === '' ? y : `Y${addDecimal(y)} `\n    }\n    function Z() {\n      return z === '' ? z : `Z${addDecimal(z)} `\n    }\n    function F() {\n      return f === '' ? f : `F${f}`\n    }\n  }\n  function HEADER() {\n    let [, , , material, , info] = data.csv.contents[0]\n    return (\n      `( ${formatDate(new Date(), 'dd.mm.yyyy HH:MM')} )\\n` +\n      `( ${data.name} )\\n` +\n      `${info ? `( ${info} )\\n` : ''}` +\n      `( ------------------ )\\n` +\n      `G40 G80 G70\\n` +\n      `( ------------------ )\\n` +\n      `( ${SHEETS.length}: [] ${material ? material : ''} )\\n`\n    )\n  }\n  function TOOL_CHANGE(tool) {\n    if (CURRENT_TOOL === tool) return ''\n    CURRENT_TOOL = tool\n    return (\n      `( ------------------ )\\n` +\n      `M05\\n` +\n      `M06 T${CURRENT_TOOL}\\n` +\n      `G43 H${CURRENT_TOOL}\\n` +\n      `S${SPINDLE_SPEED()} M03\\n` +\n      `G54 G90 G00\\n`\n    )\n  }\n  function SHEET_CHANGE() {\n    return (\n      `( ------------------ )\\n` +\n      `M05 M104\\n` +\n      MOVE({ g: '90', x: X_HOME, y: Y_HOME }) +\n      `M00\\n` +\n      `M103 M03 G00\\n` +\n      `( ------------------ )\\n` +\n      `( CYCLE START :)\\n`\n    )\n  }\n  function FOOTER() {\n    return (\n      `( ------------------ )\\n` +\n      `G40 G80 G91 G28 Z0 M5\\n` +\n      'G90\\n' +\n      MOVE({ g: RAPID, x: X_HOME, y: Y_HOME }) +\n      `M30`\n    )\n  }\n}\n\n// helper functions\n\nfunction addDecimal(num) {\n  if (/\\./.test(num) || num === 0) return num\n  return num.toFixed(1)\n}\n\nfunction sortColumnOrRow(test, a, b, i) {\n  return test ? columnSort() : rowSort()\n  function columnSort() {\n    return i % 2 === 0\n      ? b.y !== a.y\n        ? b.y - a.y\n        : a.x - b.x\n      : a.y !== b.y\n      ? a.y - b.y\n      : b.x - a.x\n  }\n  function rowSort() {\n    return i % 2 === 0\n      ? a.x !== b.x\n        ? a.x - b.x\n        : a.y - b.y\n      : b.x !== a.x\n      ? b.x - a.x\n      : b.y - a.y\n  }\n}\n","<script>\nimport Import from './components/Import.svelte'\nimport Editor from './components/Editor.svelte'\nimport Viewer from './components/Viewer.svelte'\nimport Settings from './components/Settings.svelte'\nimport { Nest } from './nest.js'\nimport { Gcode } from './gCode.js'\nimport { settings, data } from './stores.js'\nimport { toInches } from './methods.js'\n\nfunction update() {\n  $data.name = $data.csv.contents[0][1]\n  $data.csv.panels = $data.csv.contents.slice($data.csv.headerRows)\n  calculateNest()\n  $data.csv.output = $data.csv.contents.join('\\n')\n  $data.cnc = Gcode($data, $settings)\n}\n\nfunction calculateNest() {\n  let nest = Nest(panelsDimensionsInches(), $settings)\n  $data.sheets = nest.sheets\n  $data.errors = nest.errors\n\n  function panelsDimensionsInches() {\n    if ($settings.units)\n      return $data.csv.panels.map((i) => [\n        i[0],\n        i[1],\n        toInches(i[2]),\n        toInches(i[3]),\n      ])\n    return $data.csv.panels\n  }\n}\nupdate()\n</script>\n\n<style>\n.container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: grid;\n  grid-template-columns: 8rem minmax(24rem, 20vw) 1fr;\n  overflow: hidden;\n}\n\n.import {\n  position: relative;\n  margin: 2rem;\n  display: flex;\n  flex-direction: column;\n  z-index: 3;\n}\n\n.controls {\n  position: relative;\n  /* height: calc(100vh - 4rem); */\n  margin: 2rem 0;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  z-index: 2;\n}\n\n.main {\n  z-index: -1;\n}\n\n.splash {\n  position: absolute;\n  top: 10vh;\n  left: 45vw;\n  width: 40vw;\n  height: 40vh;\n  z-index: -1;\n}\n.splash-img {\n  position: relative;\n  left: 20%;\n  width: 40%;\n  height: 100%;\n  background-image: url('../favicon.ico');\n  background-size: contain;\n  background-position: left bottom;\n  background-repeat: no-repeat;\n  z-index: -1;\n}\nh1,\nh6 {\n  color: var(--second);\n  position: relative;\n  left: 20%;\n}\n</style>\n\n<svelte:body on:change=\"{update}\" />\n<div class=\"container\">\n  <div class=\"import\">\n    <Import on:update=\"{update}\" />\n  </div>\n  <div class=\"controls\">\n    <Settings on:update=\"{update}\" />\n    <Editor on:update=\"{update}\" />\n  </div>\n  <div class=\"main\" on:click=\"{() => ($settings.show = false)}\">\n    <Viewer />\n    {#if !$data.sheets.length}\n      <div class=\"splash\">\n        <div class=\"splash-img\"></div>\n        <h1><span>Ahhh! Nest:</span></h1>\n        <h6><span>sauver une feuille, peut-être deux</span></h6>\n      </div>\n    {/if}\n  </div>\n</div>\n","import App from './App.svelte'\n\nconst app = new App({\n  target: document.body,\n})\n\nexport default app\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","null_to_empty","value","set_store_value","ret","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","undefined","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","select_option","select","option","__value","selected","select_value","selected_option","querySelector","toggle_class","toggle","classList","current_component","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","bind","index","props","bound","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","skip_bound","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","defaultSettings","BETA2","language","navigator","userLanguage","material","width","height","thickness","margins","nestTypeColumn","nestOrder","nestDirectionBottom","units","tools","profile","engraver","tool","cnc","1","diameter","mm","spindle","feed","plunge","ramp","max_depth","pass_depth","step_over","2","3","4","5","6","7","8","9","10","11","12","subsettings","show","project","library","sheet","nest","activePanel","csvTemplate","en","fr","defaultData","sheets","errors","engrave","cut_depth","xStart","yStart","size","spacing","direction","link","min_size","csv","new","contents","panels","headerRows","output","svg","settings","initial","str","JSON","stringify","localKey","parse","localStorage","getItem","obj1","obj2","setItem","join","console","log","localStore","sessionStorage","sessionStore","toFloat","isNaN","includes","split","item","reduce","total","frac","cleanFloat","trunc","number","places","Math","round","parseFloat","num","trailing","toMM","toInches","formatDate","date","format","leadingZero","digits","getMonth","dd","getDate","yy","getFullYear","toString","yyyy","HH","getHours","MM","getMinutes","SS","getSeconds","T","h","replace","matched","english","french","under","encodeURIComponent","dispatch","dlCSV","dlSVG","dlCNC","open","badFile","updatePanels","$settings","$data","newFile","Date","code","setTimeout","file","click","files","reader","FileReader","readAsText","onload","strData","strDelimiter","regexPattern","RegExp","arrData","arrMatches","exec","strMatchedDelimiter","strMatchedValue","test","inner","CSVToArray","result","highlight","checked","on","off","separator","icon","sortAscending","sort","sortDescending","metric","findMax","directionStr","max","row","line","id","area","waste_area","waste_ratio","x","y","min","group","sheet_width","sheet_height","w","svgFile","displayInfo","top","left","innerHTML","rect","getBoundingClientRect","bottom","right","rows","ceil","columns","step","measurement","unit","convertUnit","activeLibraryTool","activate","NEST_ORDER","Nest","panelCSV","ERRORS","IS_FROM_BOTTOM","IS_BY_COLUMNS","CUTTER","MATERIAL","max_width","max_height","List","notPlaced","column","fillColumn","Column","columnWidth","columnHeight","totalArea","makeColumns","fillSheetColumns","addCoordinatesColumn","Sheet","rowWidth","rowHeight","list","flatten","fillRow","Row","makeRows","fillSheetRows","addCoordinatesRow","makeSheets","flatMap","quantity","removeErrors","separatePanels","n","panelOutput","qID","panelTranslator","Panel","flat","placementBy","place","maxHeight","fitsRow","fitsColumn","ascendingHeight","maxWidth","ascendingWidth","fitsSheetColumn","fitsSheetRow","margin","yPos","last","xPos","j","firstIndex","isFirstRow","rowCol","k","isFirstColumn","Placement","placed","quantityID","super","sheet_area","dimensions","flattened","panel","first","widest","tallest","biggest","totalHeight","totalWidth","remainingWidth","remainingHeight","CHARACTERS","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","U","V","W","X","Y","Z","0","=","-","[","]","'",",","Gcode","CURRENT_TOOL","SHEETS","RAPID","FEED","FEED_RATE","PLUNGE_RATE","X_HOME","Y_HOME","SAFE_HEIGHT","MATERIAL_HEIGHT","PROFILE_DEPTH","MAX_PASS_DEPTH","LINK_DEPTH","SMALL_PANEL","PROFILE_TOOL","ENGRAVE","ENGRAVE_TOOL","info","HEADER","array","TOOL_CHANGE","sortColumnOrRow","label","engravingDepth","engravingGcode","characterArray","character","characterToGcode","sanitizeString","string","toUpperCase","notFirstCharacter","moveStartingPoint","engravePath","liftEngraver","z","MOVE","posX","posY","posZ","g","f","resizeCharacter","point","ENGRAVE_LABEL","x_","y_","pass","contour","depth","fullDepth","passes","smallPanel","PROFILE_CUT","addDecimal","toFixed","panelsDimensionsInches","calculateNest","body"],"mappings":"gCAAA,SAASA,KAgBT,SAASC,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAyBhF,SAASE,EAAoBC,EAAWC,EAAOC,GAC3CF,EAAUG,GAAGC,WAAWC,KAb5B,SAAmBJ,KAAUK,GACzB,GAAa,MAATL,EACA,OAAOhB,EAEX,MAAMsB,EAAQN,EAAMO,aAAaF,GACjC,OAAOC,EAAME,YAAc,IAAMF,EAAME,cAAgBF,EAQ1BC,CAAUP,EAAOC,IA8DlD,SAASQ,EAAcC,GACnB,OAAgB,MAATA,EAAgB,GAAKA,EAEhC,SAASC,EAAgBX,EAAOY,EAAKF,EAAQE,GAEzC,OADAZ,EAAMa,IAAIH,GACHE,EAuDX,SAASE,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAEvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAExC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAEhC,SAASQ,EAAaC,EAAYC,GAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,GAAK,EACpCF,EAAWE,IACXF,EAAWE,GAAGE,EAAEH,GAG5B,SAASI,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAiBlC,SAASG,EAAYH,GACjB,OAAOC,SAASG,gBAAgB,6BAA8BJ,GAElE,SAASK,EAAKC,GACV,OAAOL,SAASM,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAEhB,SAASI,IACL,OAAOJ,EAAK,IAEhB,SAASK,EAAOzB,EAAM0B,EAAOC,EAASC,GAElC,OADA5B,EAAK6B,iBAAiBH,EAAOC,EAASC,GAC/B,IAAM5B,EAAK8B,oBAAoBJ,EAAOC,EAASC,GAuB1D,SAASG,EAAK/B,EAAMgC,EAAWtC,GACd,MAATA,EACAM,EAAKiC,gBAAgBD,GAChBhC,EAAKkC,aAAaF,KAAetC,GACtCM,EAAKmC,aAAaH,EAAWtC,GAkDrC,SAAS0C,EAAU1C,GACf,MAAiB,KAAVA,OAAe2C,GAAa3C,EA6CvC,SAAS4C,EAASlB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKmB,YAAclB,IACnBD,EAAKC,KAAOA,GAEpB,SAASmB,EAAgBC,EAAO/C,GAC5B+C,EAAM/C,MAAiB,MAATA,EAAgB,GAAKA,EAUvC,SAASgD,EAAU1C,EAAM2C,EAAKjD,EAAOkD,GACjC5C,EAAK6C,MAAMC,YAAYH,EAAKjD,EAAOkD,EAAY,YAAc,IAEjE,SAASG,EAAcC,EAAQtD,GAC3B,IAAK,IAAIiB,EAAI,EAAGA,EAAIqC,EAAOpB,QAAQhB,OAAQD,GAAK,EAAG,CAC/C,MAAMsC,EAASD,EAAOpB,QAAQjB,GAC9B,GAAIsC,EAAOC,UAAYxD,EAEnB,YADAuD,EAAOE,UAAW,IAW9B,SAASC,EAAaJ,GAClB,MAAMK,EAAkBL,EAAOM,cAAc,aAAeN,EAAOpB,QAAQ,GAC3E,OAAOyB,GAAmBA,EAAgBH,QA2D9C,SAASK,EAAazC,EAASC,EAAMyC,GACjC1C,EAAQ2C,UAAUD,EAAS,MAAQ,UAAUzC,GA4KjD,IAAI2C,EACJ,SAASC,EAAsB5E,GAC3B2E,EAAoB3E,EAExB,SAAS6E,IACL,IAAKF,EACD,MAAM,IAAIG,MAAM,oDACpB,OAAOH,EAcX,SAASI,IACL,MAAM/E,EAAY6E,IAClB,MAAO,CAACG,EAAMC,KACV,MAAM3E,EAAYN,EAAUG,GAAGG,UAAU0E,GACzC,GAAI1E,EAAW,CAGX,MAAMqC,EAtMlB,SAAsBqC,EAAMC,GACxB,MAAMC,EAAIjD,SAASkD,YAAY,eAE/B,OADAD,EAAEE,gBAAgBJ,GAAM,GAAO,EAAOC,GAC/BC,EAmMeG,CAAaL,EAAMC,GACjC3E,EAAUgF,QAAQ7F,SAAQN,IACtBA,EAAGoG,KAAKvF,EAAW2C,QAqBnC,MAAM6C,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoB7G,GACzBuG,EAAiBrF,KAAKlB,GAE1B,SAAS8G,EAAmB9G,GACxBwG,EAAgBtF,KAAKlB,GAEzB,IAAI+G,GAAW,EACf,MAAMC,EAAiB,IAAIC,IAC3B,SAASC,IACL,IAAIH,EAAJ,CAEAA,GAAW,EACX,EAAG,CAGC,IAAK,IAAItE,EAAI,EAAGA,EAAI4D,EAAiB3D,OAAQD,GAAK,EAAG,CACjD,MAAM5B,EAAYwF,EAAiB5D,GACnCgD,EAAsB5E,GACtBsG,EAAOtG,EAAUG,IAGrB,IADAqF,EAAiB3D,OAAS,EACnB4D,EAAkB5D,QACrB4D,EAAkBc,KAAlBd,GAIJ,IAAK,IAAI7D,EAAI,EAAGA,EAAI8D,EAAiB7D,OAAQD,GAAK,EAAG,CACjD,MAAM1B,EAAWwF,EAAiB9D,GAC7BuE,EAAeK,IAAItG,KAEpBiG,EAAeM,IAAIvG,GACnBA,KAGRwF,EAAiB7D,OAAS,QACrB2D,EAAiB3D,QAC1B,KAAO8D,EAAgB9D,QACnB8D,EAAgBY,KAAhBZ,GAEJI,GAAmB,EACnBG,GAAW,EACXC,EAAeO,SAEnB,SAASJ,EAAOnG,GACZ,GAAoB,OAAhBA,EAAGwG,SAAmB,CACtBxG,EAAGmG,SACH/G,EAAQY,EAAGyG,eACX,MAAMC,EAAQ1G,EAAG0G,MACjB1G,EAAG0G,MAAQ,EAAE,GACb1G,EAAGwG,UAAYxG,EAAGwG,SAASG,EAAE3G,EAAG4G,IAAKF,GACrC1G,EAAG6G,aAAavH,QAAQuG,IAiBhC,MAAMiB,EAAW,IAAIb,IACrB,IAAIc,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACHC,EAAG,GACHP,EAAGI,GAGX,SAASI,IACAJ,EAAOE,GACR7H,EAAQ2H,EAAOG,GAEnBH,EAASA,EAAOJ,EAEpB,SAASS,EAAcC,EAAOC,GACtBD,GAASA,EAAM5F,IACfqF,EAASS,OAAOF,GAChBA,EAAM5F,EAAE6F,IAGhB,SAASE,EAAeH,EAAOC,EAAOnG,EAAQpB,GAC1C,GAAIsH,GAASA,EAAMI,EAAG,CAClB,GAAIX,EAAST,IAAIgB,GACb,OACJP,EAASR,IAAIe,GACbN,EAAOG,EAAEhH,MAAK,KACV4G,EAASS,OAAOF,GACZtH,IACIoB,GACAkG,EAAM1F,EAAE,GACZ5B,QAGRsH,EAAMI,EAAEH,IAgkBhB,SAASI,EAAK7H,EAAWgC,EAAM9B,GAC3B,MAAM4H,EAAQ9H,EAAUG,GAAG4H,MAAM/F,QACnBsB,IAAVwE,IACA9H,EAAUG,GAAG6H,MAAMF,GAAS5H,EAC5BA,EAASF,EAAUG,GAAG4G,IAAIe,KAGlC,SAASG,EAAiBT,GACtBA,GAASA,EAAMH,IAKnB,SAASa,EAAgBlI,EAAWgB,EAAQI,GACxC,MAAMuF,SAAEA,EAAQwB,SAAEA,EAAQ/H,WAAEA,EAAU4G,aAAEA,GAAiBhH,EAAUG,GACnEwG,GAAYA,EAASyB,EAAEpH,EAAQI,GAE/B4E,GAAoB,KAChB,MAAMqC,EAAiBF,EAASG,IAAIpJ,GAAKqJ,OAAO7I,GAC5CU,EACAA,EAAWC,QAAQgI,GAKnB9I,EAAQ8I,GAEZrI,EAAUG,GAAGgI,SAAW,MAE5BnB,EAAavH,QAAQuG,GAEzB,SAASwC,EAAkBxI,EAAW2B,GAClC,MAAMxB,EAAKH,EAAUG,GACD,OAAhBA,EAAGwG,WACHpH,EAAQY,EAAGC,YACXD,EAAGwG,UAAYxG,EAAGwG,SAAS7E,EAAEH,GAG7BxB,EAAGC,WAAaD,EAAGwG,SAAW,KAC9BxG,EAAG4G,IAAM,IAGjB,SAAS0B,EAAWzI,EAAW4B,IACI,IAA3B5B,EAAUG,GAAG0G,MAAM,KACnBrB,EAAiBnF,KAAKL,GA1tBrB+F,IACDA,GAAmB,EACnBH,EAAiB8C,KAAKrC,IA0tBtBrG,EAAUG,GAAG0G,MAAM8B,KAAK,IAE5B3I,EAAUG,GAAG0G,MAAOjF,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAASgH,GAAK5I,EAAW6C,EAASgG,EAAUC,EAAiBC,EAAWhB,EAAOlB,EAAQ,EAAE,IACrF,MAAMmC,EAAmBrE,EACzBC,EAAsB5E,GACtB,MAAMiJ,EAAcpG,EAAQkF,OAAS,GAC/B5H,EAAKH,EAAUG,GAAK,CACtBwG,SAAU,KACVI,IAAK,KAELgB,MAAAA,EACAzB,OAAQrH,EACR8J,UAAAA,EACAf,MAAO5I,IAEP+I,SAAU,GACV/H,WAAY,GACZwG,cAAe,GACfI,aAAc,GACdkC,QAAS,IAAIC,IAAIH,EAAmBA,EAAiB7I,GAAG+I,QAAU,IAElE5I,UAAWlB,IACXyH,MAAAA,EACAuC,YAAY,GAEhB,IAAIC,GAAQ,EAkBZ,GAjBAlJ,EAAG4G,IAAM8B,EACHA,EAAS7I,EAAWiJ,GAAa,CAACrH,EAAGf,KAAQyI,KAC3C,MAAM3I,EAAQ2I,EAAKzH,OAASyH,EAAK,GAAKzI,EAOtC,OANIV,EAAG4G,KAAOgC,EAAU5I,EAAG4G,IAAInF,GAAIzB,EAAG4G,IAAInF,GAAKjB,MACtCR,EAAGiJ,YAAcjJ,EAAG6H,MAAMpG,IAC3BzB,EAAG6H,MAAMpG,GAAGjB,GACZ0I,GACAZ,EAAWzI,EAAW4B,IAEvBf,KAET,GACNV,EAAGmG,SACH+C,GAAQ,EACR9J,EAAQY,EAAGyG,eAEXzG,EAAGwG,WAAWmC,GAAkBA,EAAgB3I,EAAG4G,KAC/ClE,EAAQ7B,OAAQ,CAChB,GAAI6B,EAAQ0G,QAAS,CACjB,MAAMC,EAtnClB,SAAkBzH,GACd,OAAO0H,MAAMC,KAAK3H,EAAQ4H,YAqnCJC,CAAS/G,EAAQ7B,QAE/Bb,EAAGwG,UAAYxG,EAAGwG,SAASkD,EAAEL,GAC7BA,EAAM/J,QAAQ6B,QAIdnB,EAAGwG,UAAYxG,EAAGwG,SAASU,IAE3BxE,EAAQiH,OACRvC,EAAcvH,EAAUG,GAAGwG,UAC/BuB,EAAgBlI,EAAW6C,EAAQ7B,OAAQ6B,EAAQzB,QACnDiF,IAEJzB,EAAsBoE,GA0C1B,MAAMe,GACFC,WACIxB,EAAkByB,KAAM,GACxBA,KAAKC,SAAWjL,EAEpB+K,IAAIhF,EAAM9E,GACN,MAAMI,EAAa2J,KAAK9J,GAAGG,UAAU0E,KAAUiF,KAAK9J,GAAGG,UAAU0E,GAAQ,IAEzE,OADA1E,EAAUD,KAAKH,GACR,KACH,MAAM4H,EAAQxH,EAAU6J,QAAQjK,IACjB,IAAX4H,GACAxH,EAAU8J,OAAOtC,EAAO,IAGpCkC,KAAKK,GAj9CT,IAAkBC,EAk9CNL,KAAKM,QAl9CCD,EAk9CkBD,EAj9CG,IAA5BhL,OAAOmL,KAAKF,GAAKzI,UAk9ChBoI,KAAK9J,GAAGiJ,YAAa,EACrBa,KAAKM,MAAMF,GACXJ,KAAK9J,GAAGiJ,YAAa,ICp/CjC,MAAMqB,GAAmB,GAgBzB,SAASC,GAAS/J,EAAOgK,EAAQ1L,GAC7B,IAAI2L,EACJ,MAAMC,EAAc,GACpB,SAAS/J,EAAIgK,GACT,GAAIlL,EAAee,EAAOmK,KACtBnK,EAAQmK,EACJF,GAAM,CACN,MAAMG,GAAaN,GAAiB5I,OACpC,IAAK,IAAID,EAAI,EAAGA,EAAIiJ,EAAYhJ,OAAQD,GAAK,EAAG,CAC5C,MAAMoJ,EAAIH,EAAYjJ,GACtBoJ,EAAE,KACFP,GAAiBpK,KAAK2K,EAAGrK,GAE7B,GAAIoK,EAAW,CACX,IAAK,IAAInJ,EAAI,EAAGA,EAAI6I,GAAiB5I,OAAQD,GAAK,EAC9C6I,GAAiB7I,GAAG,GAAG6I,GAAiB7I,EAAI,IAEhD6I,GAAiB5I,OAAS,IA0B1C,MAAO,CAAEf,IAAAA,EAAKwF,OArBd,SAAgBnH,GACZ2B,EAAI3B,EAAGwB,KAoBWH,UAlBtB,SAAmBtB,EAAK+L,EAAahM,GACjC,MAAMiM,EAAa,CAAChM,EAAK+L,GAMzB,OALAJ,EAAYxK,KAAK6K,GACU,IAAvBL,EAAYhJ,SACZ+I,EAAOD,EAAM7J,IAAQ7B,GAEzBC,EAAIyB,GACG,KACH,MAAMmH,EAAQ+C,EAAYV,QAAQe,IACnB,IAAXpD,GACA+C,EAAYT,OAAOtC,EAAO,GAEH,IAAvB+C,EAAYhJ,SACZ+I,IACAA,EAAO,SC/CvB,MAAMO,GAAkB,CACtBC,MAAO,kCACPC,SANyB,QADvBC,UAAUD,SAAS/F,MAAM,EAAG,IAAMgG,UAAUC,aAAajG,MAAM,EAAG,IAC3DA,MAAM,EAAG,GAAoB,KAC/B,KAMPkG,SAAU,CACRC,MAAO,GACPC,OAAQ,GACRC,UAAW,IACXC,QAAS,IAEXC,gBAAgB,EAChBC,UAAW,SACXC,qBAAqB,EACrBC,OAAO,EACPC,MAAO,CAAEC,QAAS,IAAKC,SAAU,IAAKC,KAAM,KAC5CC,ICzBwB,CACxBC,EAAG,CACDtH,KAAM,WACNuH,SAAU,MACVC,IAAI,EACJC,QAAS,KACTC,KAAM,IACNC,OAAQ,IACRC,KAAM,EACNC,UAAW,KACXC,WAAY,KACZC,UAAW,MAEbC,EAAG,CACDhI,KAAM,WACNuH,SAAU,IACVC,IAAI,EACJC,QAAS,KACTC,KAAM,IACNC,OAAQ,GACRC,KAAM,EACNC,UAAW,EACXC,WAAY,IACZC,UAAW,MAEbE,EAAG,CACDjI,KAAM,YACNuH,SAAU,KACVC,IAAI,EACJC,QAAS,KACTC,KAAM,GACNC,OAAQ,GACRC,KAAM,EACNC,UAAW,IACXC,WAAY,MACZC,UAAW,OAEbG,EAAG,CACDlI,KAAM,gBACNuH,SAAU,IACVC,IAAI,EACJC,QAAS,IACTC,KAAM,GACNC,OAAQ,GACRC,KAAM,EACNC,UAAW,KACXC,WAAY,KACZC,UAAW,KAEbI,EAAG,CACDnI,KAAM,QACNuH,SAAU,EACVC,IAAI,EACJC,QAAS,KACTC,KAAM,EACNC,OAAQ,GACRC,KAAM,EACNC,UAAW,EACXC,WAAY,EACZC,UAAW,GAEbK,EAAG,CACDpI,KAAM,WACNuH,SAAU,IACVC,IAAI,EACJC,QAAS,KACTC,KAAM,IACNC,OAAQ,GACRC,KAAM,EACNC,UAAW,EACXC,WAAY,IACZC,UAAW,IAEbM,EAAG,CACDrI,KAAM,QACNuH,SAAU,EACVC,IAAI,EACJC,QAAS,KACTC,KAAM,EACNC,OAAQ,GACRC,KAAM,EACNC,UAAW,EACXC,WAAY,EACZC,UAAW,GAEbO,EAAG,CACDtI,KAAM,YACNuH,SAAU,GACVC,IAAI,EACJC,QAAS,KACTC,KAAM,IACNC,OAAQ,GACRC,KAAM,EACNC,UAAW,EACXC,WAAY,KACZC,UAAW,GAEbQ,EAAG,CACDvI,KAAM,WACNuH,SAAU,KACVC,IAAI,EACJC,QAAS,KACTC,KAAM,IACNC,OAAQ,GACRC,KAAM,EACNC,UAAW,KACXC,WAAY,KACZC,UAAW,IAEbS,GAAI,CACFxI,KAAM,WACNuH,SAAU,GACVC,IAAI,EACJC,QAAS,KACTC,KAAM,IACNC,OAAQ,GACRC,KAAM,EACNC,UAAW,KACXC,WAAY,KACZC,UAAW,IAEbU,GAAI,CACFzI,KAAM,QACNuH,SAAU,GACVC,IAAI,EACJC,QAAS,KACTC,KAAM,EACNC,OAAQ,GACRC,KAAM,EACNC,UAAW,EACXC,WAAY,EACZC,UAAW,GAEbW,GAAI,CACF1I,KAAM,WACNuH,SAAU,IACVC,IAAI,EACJC,QAAS,KACTC,KAAM,GACNC,OAAQ,GACRC,KAAM,EACNC,UAAW,IACXC,WAAY,IACZC,UAAW,ODrHbY,YAAa,CACXC,MAAM,EACNC,SAAS,EACT3B,SAAS,EACTC,UAAU,EACV2B,SAAS,EACTC,OAAO,EACPC,MAAM,GAERC,YAAa,IAGFC,GAAc,CACzBC,GAAI,CACF,CAAC,UAAW,MAAO,WAAY,UAAW,eAAgB,SAC1D,CAAC,UAAW,MAAO,QAAS,SAAU,QACtC,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,WAAW,GACZ,CAAC,QAAS,WAAY,QAAS,UAC/B,CAAC,EAAG,EAAG,EAAG,IAEZC,GAAI,CACF,CAAC,SAAU,UAAW,YAAa,WAAY,gBAAiB,IAChE,CAAC,UAAW,OAAQ,QAAS,MAAO,UACpC,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,WAAW,GACZ,CAAC,WAAY,WAAY,UAAW,WACpC,CAAC,EAAG,EAAG,EAAG,KAIRC,GAAc,CAClBrM,KAAM,GACNsM,OAAQ,GACRC,OAAQ,GACRtC,MAAO,CACLE,SAAU,CACRC,KAAM,EACNoC,SAAS,EACTC,UAAW,KACXC,OAAQ,EACRC,OAAQ,EACRC,KAAM,GACNC,QAAS,GACTC,UAAW,OAEb5C,QAAS,CAAEE,KAAM,EAAGqC,UAAW,IAAMM,KAAM,IAAMC,SAAU,KAE7DC,IAAK,CACHC,IAAK,IAAIhB,GAAY/C,GAAgBE,WACrC8D,SAAU,IAAIjB,GAAY/C,GAAgBE,WAC1C+D,OAAQ,GACRC,WAAY,EACZC,OAAQ,IAEVC,IAAK,GACLlD,IAAK,IAGMmD,GEnFa,EAAC5L,EAAK6L,KAC9B,MAAMC,EAAOpF,GAAQqF,KAAKC,UAAUtF,EAAK,KAAM,GAM/C,SAASuF,IACP,OAAOF,KAAKG,MAAMC,aAAaC,QAAQpM,IAqB3C,IAAkBqM,EAAMC,EA1BjBH,aAAaC,QAAQpM,IACxBmM,aAAaI,QAAQvM,EAAK8L,EAAID,IAyBhBQ,EAlBFJ,IAkBQK,EAlBIT,EAmBnBpQ,OAAOmL,KAAKyF,GAAMG,SAAW/Q,OAAOmL,KAAK0F,GAAME,SAlBpDC,QAAQC,IAAIT,IAAYJ,GACxBM,aAAaI,QAAQvM,EAAK8L,EAAID,KAGhC,MAAMjP,UAAEA,EAASM,IAAEA,EAAGwF,OAAEA,GAAWoE,GAASmF,KAE5C,MAAO,CACLrP,UAAAA,EACAM,IAAMH,IAEJoP,aAAaI,QAAQvM,EAAK8L,EAAI/O,IACvBG,EAAIH,IAEb2F,OAAAA,IF0DoBiK,CAAW,WAAYpF,IAClC7I,GGpFe,EAACsB,EAAK6L,KAChC,MAAMC,EAAOpF,GAAQqF,KAAKC,UAAUtF,EAAK,KAAM,GAG1CkG,eAAeR,QAAQpM,IAC1B4M,eAAeL,QAAQvM,EAAK8L,EAAID,IAIlC,MAAMjP,UAAEA,EAASM,IAAEA,EAAGwF,OAAEA,GAAWoE,GACjCiF,KAAKG,MAAMU,eAAeR,QAAQpM,KAGpC,MAAO,CACLpD,UAAAA,EACAM,IAAMH,IAEJ6P,eAAeL,QAAQvM,EAAK8L,EAAI/O,IACzBG,EAAIH,IAEb2F,OAAAA,IHgEgBmK,CAAa,OAAQpC,IItFlC,SAASqC,GAAQhB,GACtB,OAAKiB,MAAMjB,GACPA,EAAIkB,SAAS,OAASlB,EAAIkB,SAAS,KAC9BlB,EACJmB,MAAM,KACNtI,QAAQuI,GAAkB,KAATA,IACjBC,QAAO,CAACC,EAAOF,KAEd,GAAIA,EAAKF,SAAS,KAAM,CACtB,IAAIK,EAAOH,EAAKD,MAAM,KAAKtI,QAAQuI,GAAkB,KAATA,IAC5C,OAAOE,EAAQE,GAAWD,EAAK,GAAKA,EAAK,IAE3C,OAAOD,EAAQE,GAAWJ,KACzB,GAEApB,EAdiBwB,GAAWxB,GAuB9B,SAASyB,GAAMC,EAAQC,GAC5B,OAAOC,KAAKC,MAAMC,WAAWJ,GAAU,IAAMC,GAAU,IAAMA,EAExD,SAASH,GAAWO,EAAKC,EAAW,GACzC,OAAOP,GAAMM,EAAKC,GAOb,SAASC,GAAKP,GACnB,OAAOF,GAAoB,KAATE,EAAe,GAG5B,SAASQ,GAASR,GACvB,OAAOF,GAAWE,EAAS,MAGtB,SAASS,GAAWC,EAAMC,GAC/B,MAAMC,EAAeC,IAAY,IAAMA,GAAQ3M,OAAO,GAChDgD,EAAM,CACVkE,GAAIwF,EAAYF,EAAKI,WAAa,GAClCC,GAAIH,EAAYF,EAAKM,WACrBC,GAAIP,EAAKQ,cAAcC,WAAWjN,OAAO,GACzCkN,KAAMV,EAAKQ,cACXG,GAAIT,EAAYF,EAAKY,YACrBC,GAAIX,EAAYF,EAAKc,cACrBC,GAAIb,EAAYF,EAAKgB,cACrBC,EAAG,IACHC,EAAG,KAGL,OAAOjB,EAAOkB,QAAQ,4BAA6BC,GAAY5K,EAAI4K,qCCCjDnM,KAAUsE,SAASuF,SAAS,MAAQ7J,KAASA,uQAA7CA,KAAUsE,SAASuF,SAAS,MAAQ7J,KAASA,4HAhDtDoM,EAAU,cACnBC,EAAS,aACTC,GAAQ,2lCCuLiCC,mBAAmBvM,KAAMkI,IAAIK,0BACvDvI,KAAM/E,KAAO+E,iIASauM,mBAAmBvM,KAAMwI,uBACnDxI,KAAM/E,KAAO+E,gKAUauM,mBAAmBvM,KAAMsF,uBACnDtF,KAAM/E,KAAO+E,uQAtBauM,mBAAmBvM,KAAMkI,IAAIK,2CACvDvI,KAAM/E,KAAO+E,sFASauM,mBAAmBvM,KAAMwI,wCACnDxI,KAAM/E,KAAO+E,sFAUauM,mBAAmBvM,KAAMsF,wCACnDtF,KAAM/E,KAAO+E,yVAxDpB,cAAgBA,KAAMkI,IAAIE,SAAS,GAAG,IAAM,2OAgC/CpI,KAAMuH,OAAOzM,0SATEkF,KAAU,UAAY,6SArBhBA,uBAA2BA,mBAiBvCA,0CAUmDA,0CA7BzD,cAAgBA,KAAMkI,IAAIE,SAAS,GAAG,IAAM,iEAuBhCpI,KAAU,UAAY,2aAjLtCwM,EAAWxO,QAMfyO,EACAC,EACAC,EAEAC,EANEC,GAAU,EACZpJ,cAOOqJ,SACPC,EAAU9H,MAAQ2D,KAAKG,MAAMiE,EAAM9E,IAAIE,SAAS,GAAG,OACnDoE,EAAS,mBAkBFS,SACPD,EAAM9E,IAAIE,aAAe4E,EAAM9E,IAAIC,QACnC2E,IACAN,EAAS,+BAjCQ1B,OAAeoC,KAAQ,mBAenB/O,GACrBsF,EAAKtF,EAAEgP,OAAQ,QACTtQ,EAAOsQ,IAAU1J,EAAc,SAAKA,EAAe,WAAMA,EAAK0J,GAChEtQ,EAAI,SAASuQ,gBAAiBC,KAAKC,SAAS,KAC5CzQ,EAAI,SAASoQ,IACbpQ,EAAI,SAAS4P,EAAMa,QACnBzQ,EAAI,SAAS6P,EAAMY,QACnBzQ,EAAI,SAAS8P,EAAMW,QACnBzQ,EAAI,cAASkQ,EAAUnG,YAAYC,MAAQkG,EAAUnG,YAAYC,kBAGlD1I,UACZsF,EAAKtF,EAAEgP,uBAUTP,EAAKW,MAAM,OACZX,EAAKW,MAAM,GAAGtS,KAAK4O,SAAS,aAC1B2D,MAAaC,WACjBD,EAAOE,WAAWd,EAAKW,MAAM,IAC7BC,EAAOG,gBAAmB/R,QACxBoR,EAAM9E,IAAIE,SCjDT,SAAoBwF,EAAStF,EAAa,EAAGuF,EAAe,KAsBjE,IApBA,IAAIC,EAAe,IAAIC,OACrB,MACEF,EADF,iDAKEA,EACA,aACF,MAIEG,EAAU,CAAC,IAIXC,EAAa,KAITA,EAAaH,EAAaI,KAAKN,IAAW,CAEhD,IAAIO,EAAsBF,EAAW,GAerC,GATIE,EAAoBrT,QAAUqT,GAAuBN,GAGvDG,EAAQ1U,KAAK,IAMX2U,EAAW,GAGb,IAAIG,EAAkBH,EAAW,GAAG/B,QAAQ,IAAI6B,OAAO,KAAM,KAAM,UAG/DK,EAAkBH,EAAW,GH5B9B,KAAKI,KG+BID,KACZA,EAAkBzE,GAAQyE,IAK5BJ,EAAQA,EAAQlT,OAAS,GAAGxB,KAAK8U,GAInC,OAAOJ,EAAQxM,QAAO,CAACuI,EAAMhJ,IAEvBA,EAAQuH,GAELyB,EAAKvI,QAAQ8M,GAAoB,KAAVA,IAAcxT,SDbrByT,CAAW3S,EAAM3B,OAAOuU,OAAQxB,EAAM9E,IAAII,mBAC/DuE,GAAU,GACVC,SAIJD,GAAU,6CA4HID,uBAIUC,GAAU,2CAclBJ,uDAWAC,uDAUAC,oHEvLf3M,KAAUsE,SAASuF,SAAS,MAAQ7J,KAASA,iNAChByO,qDAD7BzO,KAAUsE,SAASuF,SAAS,MAAQ7J,KAASA,4FA9BvCyO,KACPvL,KAAKhG,kEALItD,cACTwS,EAAU,cACVC,EAAS,sSCkERrM,KAAUsE,SAASuF,SAAS,MAAQ7J,KAASA,yCAASA,sKAGlBA,KAAUA,KAAKA,6KADhBA,yDAFnCA,KAAUsE,SAASuF,SAAS,MAAQ7J,KAASA,2BAASA,wCAGlBA,KAAUA,KAAKA,oHAtEhDwM,EAAWxO,gBAMN0Q,SACTC,UACAC,gBACAC,EAAY,gBACZzC,EAAU,cACVC,EAAS,oOARTG,EAAS,+MCuDNxM,KAAUsE,SAASuF,SAAS,MAAQ7J,KAASA,WAE7BA,KAAO,IAAM,oDAHvBA,sRAF6BA,kBAAoBA,gCAEjDA,oBACNA,KAAUsE,SAASuF,SAAS,MAAQ7J,KAASA,8BAE7BA,KAAO,IAAM,0HA5D5BwM,EAAWxO,aAEN4O,cACTR,EAAU,cACVC,EAAS,YACTyC,EAAO,kKAGPtC,EAAS,sBAGTA,EAAS,kRCuFmBxM,KAAMwH,OAAO1M,OAAS,EAAI,IAAM,KACjDkF,KAAMwH,4BAAX1M,4RADsBkF,KAAMwH,OAAO1M,OAAS,EAAI,IAAM,6BACjDkF,KAAMwH,eAAX1M,uIAAAA,wEACIkF,6GAAAA,kVAiDQ,0EAWQ,kEAWR,sBACUA,KAAS,KAAO,6BACjBA,KAAS,KAAO,qCAWzB,sBACUA,KAAS,KAAO,8BAChBA,KAAS,KAAO,kdApB5BA,KAAQ,uBAGPA,KAAS,IAAO,kHAUjBA,KAAQ,wBAGPA,KAAS,IAAO,kFAvCnBA,KAAUkH,aAAelH,MAAK,GAAK,SAAW,yDAIpBA,MAAK,gDAWtBA,MAAK,gDASLA,MAAK,gDAaLA,MAAK,8DAjCiCyO,+BAYxCA,+BASAA,+BAaAA,kFAlCmBzO,MAAK,QAALA,MAAK,sBAWtBA,MAAK,QAALA,MAAK,qBAQZA,KAAQ,0CAGPA,KAAS,IAAO,0CAFVA,MAAK,QAALA,MAAK,2CAKAA,KAAS,KAAO,sCACjBA,KAAS,KAAO,sCAM3BA,KAAQ,2CAGPA,KAAS,IAAO,0CAFVA,MAAK,QAALA,MAAK,2CAKAA,KAAS,KAAO,uCAChBA,KAAS,KAAO,yCA3C9BA,KAAUkH,aAAelH,MAAK,GAAK,SAAW,uVA9CrDA,KAAMwH,OAAO1M,sCAYF,0EAQQ,kEAQR,sBACUkF,KAAS,KAAO,6BACjBA,KAAS,KAAO,qCAQzB,sBACUA,KAAS,KAAO,8BAChBA,KAAS,KAAO,mBAInCA,KAAMkI,IAAIG,4BAAfvN,4kCAiD6BkF,uBA7F1BA,KAAMwH,OAAO1M,qGA6BQkF,KAAS,KAAO,sCACjBA,KAAS,KAAO,+DASfA,KAAS,KAAO,uCAChBA,KAAS,KAAO,uCAInCA,KAAMkI,IAAIG,eAAfvN,oHAAAA,0IAAAA,gPAhIG2T,KACPvL,KAAKhG,sFATDsP,EAAWxO,aAkBR+Q,EAAchO,QAErBiM,EAAM9E,IAAIG,OAAS2E,EAAM9E,IAAIG,OAAO2G,OAAMlW,EAAGC,IAAMD,EAAEiI,GAAShI,EAAEgI,iBAEzDkO,EAAelO,QACtBiM,EAAM9E,IAAIG,OAAS2E,EAAM9E,IAAIG,OAAO2G,OAAMlW,EAAGC,IAAMA,EAAEgI,GAASjI,EAAEiI,0DArB/DmO,EAAStG,KAAKG,MAAMiE,EAAM9E,IAAIE,SAAS,GAAG,uBAC1C+G,EAAWC,QACRC,EAAMtC,EAAUtI,SAAS2K,GAA6C,EAA7BrC,EAAUtI,SAASI,eACzDqK,EAAStE,GAAKyE,GAAOA,6BAQxBC,GAAOtC,EAAM9E,IAAIG,OAAOvN,OAAS,EAAG,EAAG,EAAG,QAC9CkS,EAAM9E,IAAIE,aAAe4E,EAAM9E,IAAIE,SAAUkH,MAC7C9C,EAAS,mBAqFgBuC,EAAc,OASdE,EAAe,OAMfA,EAAe,OAUfA,EAAe,sBAiBK,kCAWjB,qCASA,qCAaA,0BApCClC,EAAU7F,YAAcqI,EAAK,eAC7BxC,EAAU7F,YAAc,gQCvB9ClH,KAAMuH,OAAOvH,MAAIwP,QAGnBpF,GAAMpK,KAAMuH,OAAOvH,MAAIyP,KAAO,IAAK,QAKnCrF,GAAMpK,KAAMuH,OAAOvH,MAAI0P,WAAa,IAAK,QAG5BtF,GAAqC,IAA/BpK,KAAMuH,OAAOvH,MAAI2P,YAAmB,qZAZxB3P,qBAAeA,sLAC5CA,KAAMuH,OAAOvH,MAAIwP,4BAGnBpF,GAAMpK,KAAMuH,OAAOvH,MAAIyP,KAAO,IAAK,4BAKnCrF,GAAMpK,KAAMuH,OAAOvH,MAAI0P,WAAa,IAAK,4BAG5BtF,GAAqC,IAA/BpK,KAAMuH,OAAOvH,MAAI2P,YAAmB,+BAZxB3P,0BAAeA,4EAyDxCA,MAAMwP,mEAfexP,KAAUsF,IAAItF,KAAUkF,MAAMC,SAASK,SAAWxF,mCAG1DA,KAAUkH,aAAelH,MAAMwP,GAAK,SAAW,uCACxDxP,MAAMwP,eACNxP,MAAM4P,EAAI5P,MAAMA,OAAO4P,GAAK5P,iBAC5BA,MAAMA,MAAM6P,EAAG7P,MAAM2E,QAAU3E,MAAMA,OAAO6P,GAAK7P,oBAC9CA,MAAM0E,MAAQ1E,qBACbA,MAAM2E,OAAS3E,sBAGLA,MAASA,MAAMwP,GAAG1U,OAAS,EAAIyP,KAAKuF,IAAmB,GAAf9P,MAAM2E,OAAc,KAAO4F,KAAKuF,IAAmB,GAAf9P,MAAM2E,OAAc,+BACxG3E,KAAUkH,aAAelH,MAAMwP,GAAK,SAAW,uCACrDxP,MAAM4P,EAAI5P,MAAMA,OAAO4P,EAAI5P,MAAM0E,MAAQ,GAAK1E,iBAC9CA,MAAMA,MAAM6P,EAAG7P,MAAM2E,QAAU3E,MAAMA,OAAO6P,EAAItF,KAAKuF,IAAmB,GAAf9P,MAAM2E,OAAc,GAAK,EAAI3E,MAAM2E,OAAS,GAAK3E,8DAbhGA,uBACCA,8CAFMA,KAAUsF,IAAItF,KAAUkF,MAAMC,SAASK,SAAWxF,kCAG1DA,KAAUkH,aAAelH,MAAMwP,GAAK,SAAW,yDACxDxP,MAAMwP,+BACNxP,MAAM4P,EAAI5P,MAAMA,OAAO4P,GAAK5P,gCAC5BA,MAAMA,MAAM6P,EAAG7P,MAAM2E,QAAU3E,MAAMA,OAAO6P,GAAK7P,+BAC9CA,MAAM0E,MAAQ1E,mCACbA,MAAM2E,OAAS3E,oCAOvBA,MAAMwP,qCAJYxP,MAASA,MAAMwP,GAAG1U,OAAS,EAAIyP,KAAKuF,IAAmB,GAAf9P,MAAM2E,OAAc,KAAO4F,KAAKuF,IAAmB,GAAf9P,MAAM2E,OAAc,8BACxG3E,KAAUkH,aAAelH,MAAMwP,GAAK,SAAW,0DACrDxP,MAAM4P,EAAI5P,MAAMA,OAAO4P,EAAI5P,MAAM0E,MAAQ,GAAK1E,gCAC9CA,MAAMA,MAAM6P,EAAG7P,MAAM2E,QAAU3E,MAAMA,OAAO6P,EAAItF,KAAKuF,IAAmB,GAAf9P,MAAM2E,OAAc,GAAK,EAAI3E,MAAM2E,OAAS,GAAK3E,6FAhB5GA,MAAM+P,2BAAXjV,gIAXsBkF,KAAUyE,SAASI,QAAU7E,+DAI9CA,kBACAA,MAAMA,OAAO4P,EAAI5P,KAAUyE,SAASI,QAAU,GAAK7E,iBACnDA,MAAMA,OAAO6P,EAAI7P,KAAUyE,SAASI,QAAU,GAAK7E,qBAC/CA,MAAMgQ,YAAchQ,KAAUyE,SAASI,SAAW7E,sBACjDA,MAAMiQ,aAAejQ,KAAUyE,SAASI,SAAW7E,+IAP9CA,wBACCA,kDAFMA,KAAUyE,SAASI,QAAU7E,yBAK9CA,MAAMA,OAAO4P,EAAI5P,KAAUyE,SAASI,QAAU,GAAK7E,gCACnDA,MAAMA,OAAO6P,EAAI7P,KAAUyE,SAASI,QAAU,GAAK7E,gCAC/CA,MAAMgQ,YAAchQ,KAAUyE,SAASI,SAAW7E,oCACjDA,MAAMiQ,aAAejQ,KAAUyE,SAASI,SAAW7E,4CAGxDA,MAAM+P,cAAXjV,+HAAAA,oFAzCLkF,cA2BMA,KAAMuH,4BAAXzM,+RAJMkF,MAAMA,KAAMuH,OAAOzM,OAAS,GAAGoV,EAAIlQ,MAAS,kBAC3CA,MAAMA,KAAMuH,OAAOzM,OAAS,GAAGmR,EAAIjM,MAAS,2BACvCA,MAAMA,KAAMuH,OAAOzM,OAAS,GAAGoV,EAAIlQ,MAAS,QAAIA,MAAMA,KAAMuH,OAAOzM,OAAS,GAAGmR,EAAIjM,MAAS,wMAzBzGA,4FA2BMA,KAAMuH,eAAXzM,4HAAAA,oBAJMkF,MAAMA,KAAMuH,OAAOzM,OAAS,GAAGoV,EAAIlQ,MAAS,gCAC3CA,MAAMA,KAAMuH,OAAOzM,OAAS,GAAGmR,EAAIjM,MAAS,yCACvCA,MAAMA,KAAMuH,OAAOzM,OAAS,GAAGoV,EAAIlQ,MAAS,QAAIA,MAAMA,KAAMuH,OAAOzM,OAAS,GAAGmR,EAAIjM,MAAS,8JA9I1GwP,EAMFW,EALAC,GAAc,EACdC,EAAM,EACNC,EAAO,Ed4mBT,IAAqBlY,SAAAA,YctmBnB4U,EAAMxE,IAAM2H,EAAQI,UAAU/E,edumB5B1N,IAAwB1E,GAAG6G,aAAa3G,KAAKlB,kBc5mBvC,mBASR2U,EAAU7F,YAAchE,KAAKsM,uBAG7BzC,EAAU7F,YAAc,sBAIxBkJ,GAAc,OACVI,EAAOtN,KAAKuN,4BAChBJ,GAAOG,EAAKE,OAASF,EAAKH,KAAO,EAAIG,EAAKH,SAC1CC,GAAQE,EAAKG,MAAQH,EAAKF,MAAQ,EAAIE,EAAKF,UAC3Cd,EAAKtM,KAAKsM,oBAGVY,GAAc,aAGDP,EAAGlL,UAEToI,EAAUtI,SAASE,OAASA,EAASkL,YAG/B9O,OAEX6P,EAAOrG,KAAKsG,KAAK7D,EAAMzF,OAAOzM,OADf,GAEfgW,EAAUvG,KAAKsG,KAAK7D,EAAMzF,OAAOzM,OAAS8V,GAC1CtB,EAAM/E,KAAKsG,MAAM9P,EAAQ,GAAK+P,GAAW,SAMlClB,EALE7O,EAAQ+P,EACJ/D,EAAUtI,SAASC,MAItBmL,EAHNP,EAAMvC,EAAUtI,SAASE,OAGhBuL,EAFTY,EAAU/D,EAAUtI,SAASC,MAEjBuH,EADZ2E,EAAO7D,EAAUtI,SAASE,iDA0FFwL,0HC3F7BnQ,KAAUsE,SAASuF,SAAS,MAAQ7J,KAASA,qFASlBA,qCAHpBA,gBACAA,iBACCA,wLALIyO,iBACCzO,qCAKGA,sCAThBA,KAAUsE,SAASuF,SAAS,MAAQ7J,KAASA,iCAMtCA,qBACAA,sBACCA,kDACmBA,iDA9CrByO,KACPvL,KAAKhG,8DAXDsP,EAAWxO,cACNpE,UACTkW,EAAM,UACNT,WACA0B,cACA3E,EAAU,cACVC,EAAS,mBACT2E,EAAc,YACdC,EAAO,6RAOPzE,EAAS,uBAGTA,EAAS,gBACTyE,GAAQA,iYC6OQjR,WACDA,KAAUsF,IAAItF,OAAMwF,cACpBxF,KAAUsF,IAAItF,OAAM/B,oHAHP+B,+IACZA,iCACDA,KAAUsF,IAAItF,OAAMwF,oCACpBxF,KAAUsF,IAAItF,OAAM/B,gCAHP+B,+EADbA,KAAUsF,IAAItF,OAAM/B,KAAK4L,SAAS,6FAAlC7J,KAAUsF,IAAItF,OAAM/B,KAAK4L,SAAS,8IAkDjC7J,WACDA,KAAUsF,IAAItF,OAAMwF,cACpBxF,KAAUsF,IAAItF,OAAM/B,oHAHP+B,+IACZA,iCACDA,KAAUsF,IAAItF,OAAMwF,oCACpBxF,KAAUsF,IAAItF,OAAM/B,gCAHP+B,+EADbA,KAAUsF,IAAItF,OAAM/B,KAAK4L,SAAS,SAAW7J,KAAUsF,IAAItF,OAAM/B,KAAK4L,SAAS,2FAA/E7J,KAAUsF,IAAItF,OAAM/B,KAAK4L,SAAS,SAAW7J,KAAUsF,IAAItF,OAAM/B,KAAK4L,SAAS,8IA6D9E7J,WACDA,KAAUsF,IAAItF,OAAMwF,cAAUxF,KAAUsF,IAAItF,OAAMyF,GAAK,KAAO,MAC9DzF,KAAUsF,IAAItF,OAAM/B,2HAHP+B,sJACZA,iCACDA,KAAUsF,IAAItF,OAAMwF,oCAAUxF,KAAUsF,IAAItF,OAAMyF,GAAK,KAAO,4BAC9DzF,KAAUsF,IAAItF,OAAM/B,gCAHP+B,+EADbA,KAAUsF,IAAItF,6EAAdA,KAAUsF,IAAItF,shBA5OAA,KAAU4G,YAAYC,KAAO,IAAM,OAiGzD7G,KAAS,iBAAmB,gBAyB5BA,KAAS,SAAW,WAgDpBA,KAAS,SAAW,WA8DpBA,KAAS,UAAY,iEAjOjBA,KAAU4G,YAAYE,sKAQd9G,KAAMkI,IAAIE,SAAS,GAAG,cAAtBpI,KAAMkI,IAAIE,SAAS,GAAG,uEAEzBpI,KAAMkI,IAAIE,SAAS,GAAG,GAAKpI,KAAMkI,IAAIE,SAAS,GAAG,GAAK,iBACvDpI,KAAMkI,IAAIE,SAAS,GAAG,GAAKpI,KAAMkI,IAAIE,SAAS,GAAG,GAAK,sDAClDpI,KAAMkI,IAAIE,SAAS,GAAG,cAAtBpI,KAAMkI,IAAIE,SAAS,GAAG,mMAMpBpI,KAAMkF,MAAME,SAASqC,qBAArBzH,KAAMkF,MAAME,SAASqC,kFAG9BzH,KAAUsE,SAASuF,SAAS,MAAQ,KAAO,iFAIlC7J,KAAUiF,mBAAVjF,KAAUiF,2EADbjF,4BAMPA,KAAU4G,YAAYI,6FAMjBhH,KAAMkI,IAAIE,SAAS,GAAG,GAAKpI,KAAMkI,IAAIE,SAAS,GAAG,GAAK,uBACvDpI,KAAMkI,IAAIE,SAAS,GAAG,GAAKpI,KAAMkI,IAAIE,SAAS,GAAG,GAAK,+DAClDpI,KAAMkI,IAAIE,SAAS,GAAG,cAAtBpI,KAAMkI,IAAIE,SAAS,GAAG,mIAOrB,gDAFDpI,KAAUyE,SAASC,iBAAnB1E,KAAUyE,SAASC,wIASlB,gDAHD1E,KAAUyE,SAASE,kBAAnB3E,KAAUyE,SAASE,6IAWlB,gDAHD3E,KAAUyE,SAASG,qBAAnB5E,KAAUyE,SAASG,iFADnB5E,gFAWC,gDAHDA,KAAUyE,SAASI,mBAAnB7E,KAAUyE,SAASI,qFAQ3B7E,KAAU4G,YAAYK,wIAStBjH,KAAS,MAAQ,oBAChBA,KAAS,OAAS,wDAFTA,KAAUgF,iCAAVhF,KAAUgF,sJAOpBhF,KAAS,WAAa,qBACrBA,KAAS,SAAW,uBAFXA,KAAU8E,4BAAV9E,KAAU8E,8FAuBpB9E,KAAU4G,YAAYzB,+FAYlB7M,OAAOmL,KAAKzD,KAAUsF,4BAA3BxK,6HAeEkF,KAAUsF,IAAItF,KAAUkF,MAAMC,SAASW,kCAE/B,gDAHD9F,KAAMkF,MAAMC,QAAQuC,qBAApB1H,KAAMkF,MAAMC,QAAQuC,8IAQ3B1H,KAAUyE,SAASC,6BAEX,gDAHD1E,KAAMkF,MAAMC,QAAQ8C,oBAApBjI,KAAMkF,MAAMC,QAAQ8C,qIAQ3BjI,KAAUyE,SAASG,mCAEX,cAHD5E,KAAMkF,MAAMC,QAAQ6C,gBAApBhI,KAAMkF,MAAMC,QAAQ6C,kFAQ5BhI,KAAU4G,YAAYxB,uFAYlB9M,OAAOmL,KAAKzD,KAAUsF,4BAA3BxK,6HAeEkF,KAAUsF,IAAItF,KAAUkF,MAAME,UAAUU,mCAEhC,gDAHD9F,KAAMkF,MAAME,SAASsC,qBAArB1H,KAAMkF,MAAME,SAASsC,qKAUpB,gDAHD1H,KAAMkF,MAAME,SAASuC,kBAArB3H,KAAMkF,MAAME,SAASuC,iKAUpB,gDAHD3H,KAAMkF,MAAME,SAASwC,kBAArB5H,KAAMkF,MAAME,SAASwC,2JAUpB,gDAHD5H,KAAMkF,MAAME,SAASyC,gBAArB7H,KAAMkF,MAAME,SAASyC,qKAUpB,cAHD7H,KAAMkF,MAAME,SAAS0C,mBAArB9H,KAAMkF,MAAME,SAAS0C,qFAQ7B9H,KAAU4G,YAAYG,kGASlBzO,OAAOmL,KAAKzD,KAAUsF,4BAA3BxK,sJAeEkF,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMI,GAAK,IAAM,OAC9CzF,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMI,GAAK,GAAM,mBAGxCzF,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMI,GAAK,KAAO,gDALjDzF,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMG,oBAApCxF,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMG,mBAIrCxF,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMI,aAApCzF,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMI,wGADnCzF,uFAMAA,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMpH,gBAApC+B,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMpH,yMAIpC+B,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMK,mBAApC1F,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMK,uJAUnC,oDAHD1F,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMO,kBAApC5F,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMO,uJAUnC,gDAHD5F,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMQ,gBAApC7F,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMQ,iJAUnC,oDAHD7F,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMM,gBAApC3F,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMM,4JAUnC,gDAHD3F,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMS,qBAApC9F,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMS,kKAUnC,qBAHD9F,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMU,sBAApC/F,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMU,oJAxS7C/F,KAAS,YAAc,gjBAqGhBA,KAAS,aAAe,mEAGxBA,KAAS,YAAc,oEAGvBA,KAAS,aAAe,o+BA9GxBA,KAAU4G,YAAYC,4DAaE7G,KAAU4G,YAAYE,+DA8BtB9G,KAAU4G,YAAYI,yUA2DtBhH,KAAU+E,0HAjBV/E,KAAU4G,YAAYK,oFA2C1CjH,KAAUkF,MAAMC,wHANInF,KAAU4G,YAAYzB,uFAsD1CnF,KAAUkF,MAAME,yHANIpF,KAAU4G,YAAYxB,wFAkEpCpF,KAAUkF,MAAMG,qHAJFrF,KAAU4G,YAAYG,+DAnOxB/G,KAAU4G,YAAYC,qjBAiGpB7G,KAAU+E,yJA0B9B/E,KAAUkF,MAAMC,4NAgDhBnF,KAAUkF,MAAME,2QA4DVpF,KAAUkF,MAAMG,uRA3GvBrF,yCAgDAA,mEA/KSA,KAAU4G,YAAYC,KAAO,IAAM,mCAF/C7G,KAAU4G,YAAYC,iCAS5B7G,KAAU4G,YAAYE,wDAQd9G,KAAMkI,IAAIE,SAAS,GAAG,0DAEzBpI,KAAMkI,IAAIE,SAAS,GAAG,GAAKpI,KAAMkI,IAAIE,SAAS,GAAG,GAAK,6BACvDpI,KAAMkI,IAAIE,SAAS,GAAG,GAAKpI,KAAMkI,IAAIE,SAAS,GAAG,GAAK,qCAClDpI,KAAMkI,IAAIE,SAAS,GAAG,mEAMpBpI,KAAMkF,MAAME,SAASqC,2DAG9BzH,KAAUsE,SAASuF,SAAS,MAAQ,KAAO,kCAIlC7J,KAAUiF,oDArBUjF,KAAU4G,YAAYE,oCA0BpD9G,KAAU4G,YAAYI,+CAMjBhH,KAAMkI,IAAIE,SAAS,GAAG,GAAKpI,KAAMkI,IAAIE,SAAS,GAAG,GAAK,mCACvDpI,KAAMkI,IAAIE,SAAS,GAAG,GAAKpI,KAAMkI,IAAIE,SAAS,GAAG,GAAK,8CAClDpI,KAAMkI,IAAIE,SAAS,GAAG,iEAKtBpI,KAAUyE,SAASC,sEAMnB1E,KAAUyE,SAASE,yEAQnB3E,KAAUyE,SAASG,4EAOnB5E,KAAUyE,SAASI,wDA9BG7E,KAAU4G,YAAYI,kCAsCpDhH,KAAU4G,YAAYK,0DAQZjH,KAAUgF,wFAMVhF,KAAU8E,uDAOU9E,KAAU+E,iCAjBV/E,KAAU4G,YAAYK,oCAiCpDjH,KAAU4G,YAAYzB,yCAYlB7M,OAAOmL,KAAKzD,KAAUsF,cAA3BxK,0IAAAA,oBAFWkF,KAAUkF,MAAMC,mCAiBzBnF,KAAUsF,IAAItF,KAAUkF,MAAMC,SAASW,uCADhC9F,KAAMkF,MAAMC,QAAQuC,+DAQ3B1H,KAAUyE,SAASC,mCADZ1E,KAAMkF,MAAMC,QAAQ8C,8DAQ3BjI,KAAUyE,SAASG,uCADZ5E,KAAMkF,MAAMC,QAAQ6C,sDApCEhI,KAAU4G,YAAYzB,uCA4CpDnF,KAAU4G,YAAYxB,0CAYlB9M,OAAOmL,KAAKzD,KAAUsF,cAA3BxK,0IAAAA,oBAFWkF,KAAUkF,MAAME,oCAiBzBpF,KAAUsF,IAAItF,KAAUkF,MAAME,UAAUU,uCADjC9F,KAAMkF,MAAME,SAASsC,4EAOrB1H,KAAMkF,MAAME,SAASuC,yEAOrB3H,KAAMkF,MAAME,SAASwC,yEAOrB5H,KAAMkF,MAAME,SAASyC,uEAOrB7H,KAAMkF,MAAME,SAAS0C,yDAlDC9H,KAAU4G,YAAYxB,wCA0DpDpF,KAAU4G,YAAYG,yCASlBzO,OAAOmL,KAAKzD,KAAUsF,cAA3BxK,0IAAAA,oBADiBkF,KAAUkF,MAAMG,gCAgB/BrF,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMI,GAAK,IAAM,mBAC9CzF,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMI,GAAK,GAAM,+BAGxCzF,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMI,GAAK,KAAO,iCALjDzF,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMG,oDAIrCxF,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMI,qEAKnCzF,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMpH,uEAIpC+B,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMK,0EAOpC1F,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMO,2EAOpC5F,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMQ,0EAOpC7F,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMM,0EAOpC3F,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMS,+EAOpC9F,KAAUsF,IAAItF,KAAUkF,MAAMG,MAAMU,6DAnEd/F,KAAU4G,YAAYG,8BAnOxB/G,KAAU4G,YAAYC,qnDA1H9C7I,UACXqO,EAAgC,OAAvBU,EAAUzI,aACrBM,EAAYmI,EAAUtI,SAASG,mBAmB1BsM,EAAYD,EAAMrX,UACXqX,EAAOpG,GAAWD,IACjBhR,YAWRuX,EAAkBC,QACzBrE,EAAU7H,MAAMG,KAAO+L,kCA9BvBpE,EAAM9H,MAAMC,QAAQuC,WAAa9C,EAAYmI,EAAUtI,SAASG,aAChEA,EAAYmI,EAAUtI,SAASG,0BAG3BsK,EAAStG,KAAKG,MAAMiE,EAAM9E,IAAIE,SAAS,GAAG,IAC9C4E,EAAM9E,IAAIG,OAAO3P,SAASqI,IACxBA,EAAM,GAAKmQ,EAAYhC,EAAQnO,EAAM,IACrCA,EAAM,GAAKmQ,EAAYhC,EAAQnO,EAAM,YAGvCiM,EAAM9E,IAAIE,SAAS,GAAG,QAAK2E,EAAU9H,OAASiK,wBAG1C7J,EAAO0H,EAAUzH,IAAIyH,EAAU7H,MAAMG,MACzCA,EAAKG,SAAW0L,EAAY7L,EAAKI,GAAIJ,EAAKG,sBAQ1C2L,EAAkBpE,EAAU7H,MAAME,sBAIlC+L,EAAkBpE,EAAU7H,MAAMC,mBAuFd4H,EAAUnG,YAAYC,MAAQkG,EAAUnG,YAAYC,iBAOjDkG,EAAUnG,YAAYE,SAAWiG,EAAUnG,YAAYE,uBAS3DkG,EAAM9E,IAAIE,SAAS,GAAG,4BAItB4E,EAAM9E,IAAIE,SAAS,GAAG,4BAMpB4E,EAAM9H,MAAME,SAASqC,iCAOrBsF,EAAU9H,4BAIR8H,EAAUnG,YAAYI,OAAS+F,EAAUnG,YAAYI,qBASzDgG,EAAM9E,IAAIE,SAAS,GAAG,4BAKtB2E,EAAUtI,SAASC,+BAMnBqI,EAAUtI,SAASE,gCAQnBoI,EAAUtI,SAASG,mCAOnBmI,EAAUtI,SAASI,8BAOfkI,EAAUnG,YAAYK,MAAQ8F,EAAUnG,YAAYK,oBAStD8F,EAAU/H,6CAMV+H,EAAUjI,uCAOUiI,EAAUhI,sCAe5BgI,EAAUnG,YAAYzB,SAAW4H,EAAUnG,YAAYzB,sBAWzD4H,EAAU7H,MAAMC,uCAgBlB6H,EAAM9H,MAAMC,QAAQuC,mCAOpBsF,EAAM9H,MAAMC,QAAQ8C,kCAOpB+E,EAAM9H,MAAMC,QAAQ6C,2BAOhB+E,EAAUnG,YAAYxB,UAAY2H,EAAUnG,YAAYxB,uBAW1D2H,EAAU7H,MAAME,wCAgBlB4H,EAAM9H,MAAME,SAASsC,mCAOrBsF,EAAM9H,MAAME,SAASuC,gCAOrBqF,EAAM9H,MAAME,SAASwC,gCAOrBoF,EAAM9H,MAAME,SAASyC,8BAOrBmF,EAAM9H,MAAME,SAAS0C,8BAOjBiF,EAAUnG,YAAYG,SAAWgG,EAAUnG,YAAYG,sBASnDgG,EAAU7H,MAAMG,oCAexB0H,EAAUzH,IAAIyH,EAAU7H,MAAMG,MAAMG,kCAIrCuH,EAAUzH,IAAIyH,EAAU7H,MAAMG,MAAMI,4BAKnCsH,EAAUzH,IAAIyH,EAAU7H,MAAMG,MAAMpH,8BAIpC8O,EAAUzH,IAAIyH,EAAU7H,MAAMG,MAAMK,iCAOpCqH,EAAUzH,IAAIyH,EAAU7H,MAAMG,MAAMO,gCAOpCmH,EAAUzH,IAAIyH,EAAU7H,MAAMG,MAAMQ,8BAOpCkH,EAAUzH,IAAIyH,EAAU7H,MAAMG,MAAMM,8BAOpCoH,EAAUzH,IAAIyH,EAAU7H,MAAMG,MAAMS,mCAOpCiH,EAAUzH,IAAIyH,EAAU7H,MAAMG,MAAMU,mGCtazD,IAAIsL,GAAa,SAEV,SAASC,GAAKC,EAAU9I,GAC7B4I,GAAa5I,EAAS1D,UACtB,IAAIyM,EAAS,GACXC,EAAiBhJ,EAASzD,oBAC1B0M,EAAgBjJ,EAAS3D,eACzB6M,EAASlJ,EAASnD,IAAImD,EAASvD,MAAMC,SAASK,UAAY,KAC1DoM,EAAW,CACTlN,MAAO+D,EAAShE,SAASC,OAAS,GAClCC,OAAQ8D,EAAShE,SAASE,QAAU,GACpCE,QAAS4D,EAAShE,SAASI,SAAW,IACtCgN,UAAW,IAAMD,EAASlN,MAA2B,EAAnBkN,EAAS/M,QAAc8M,EACzDG,WAAY,IAAMF,EAASjN,OAA4B,EAAnBiN,EAAS/M,QAAc8M,GAK/D,MAAO,CAAEpK,OA8HT,SAAoBc,GAClB,IAAId,EAAS,IAAIwK,GACjB,GAAIL,EAAe,CACjB,IAAIZ,EApCR,SAAqBzI,GACnB,IAAIyI,EAAU,IAAIiB,GAClB,KAAO1J,EAAO2J,YAAYlX,OAAS,GAAG,CACpC,IAAImX,EAASC,EAAW7J,GACxByI,EAAQxX,KACN,IAAI6Y,GACFF,EAAOG,cACPH,EAAOI,eACPJ,EAAOK,YACPL,EACAZ,KAIN,OAAOP,EAsBSyB,CAAYlK,GAC1B,KAAOyI,EAAQkB,YAAYlX,OAAS,GAAG,CACrC,IAAIkM,EAAQwL,EAAiB1B,GAC7B2B,EAAqBzL,GACrBO,EAAOjO,KACL,IAAIoZ,GACF1L,EAAM2L,WACN3L,EAAM4L,YACN5L,EAAMsL,YACNtL,EAAMzF,KAAKsR,GAASA,EAAK9C,QAAO+C,QAAQ,GACxC9L,EACAO,EAAOzM,OAAS,EAChB8W,SAID,CACL,IAAIhB,EA7FR,SAAkBvI,GAChB,IAAIuI,EAAO,IAAImB,GACf,KAAO1J,EAAO2J,YAAYlX,OAAS,GAAG,CACpC,IAAIwU,EAAMyD,EAAQ1K,GAClBuI,EAAKtX,KACH,IAAI0Z,GACF1D,EAAIqD,WACJrD,EAAIsD,YACJtD,EAAIgD,YACJhD,EACA+B,KAIN,OAAOT,EA+EMqC,CAAS5K,GACpB,KAAOuI,EAAKoB,YAAYlX,OAAS,GAAG,CAClC,IAAIkM,EAAQkM,EAActC,GAC1BuC,EAAkBnM,GAClBO,EAAOjO,KACL,IAAIoZ,GACF1L,EAAMoL,cACNpL,EAAMqL,eACNrL,EAAMsL,YACNtL,EAAMzF,KAAKsR,GAASA,EAAK9C,QAAO+C,QAAQ,GACxC9L,EACAO,EAAOzM,OAAS,EAChB8W,KAKR,OAAOrK,EArKE6L,CAOF,IAAIrB,GARaR,EASlB8B,SAASxY,GAGf,UAA0B2U,EAAI8D,EAAU5O,EAAOC,IAC7C,OAAO4O,IAEP,SAASA,IACP,OAAI7O,EAAQkN,EAASC,aAAelN,EAASiN,EAASE,cACpDN,EAAOlY,KAAK,WAAWkW,mBAEhB,IACG9K,GAAUC,GAAW2O,EAC1BE,IAD2C,GAGpD,SAASA,EAAeC,EAAI,EAAGC,EAAc,IAG3C,IAFAhP,GAASiN,EACThN,GAAUgN,EACH2B,EAAWG,KAAK,CACrB,IAAIE,EAAM,GACNL,EAAW,IAAGK,EAAM,GAAGF,SAASH,KAEpCI,EAAYpa,KAAK,CAACqa,EAAKnE,EAAI9K,EAAOC,EAAQ0M,KAG5C,OAAOqC,GAxBUE,CAAgB/Y,GAAG0G,KAAK1G,GAAM,IAAIgZ,GAAMhZ,QAC3DiZ,QAPqBtM,OAAQgK,GAmCjC,SAASuB,EAAQ1K,GACf,IAAIiH,EAAM,IAAIyC,GAAK1J,EAAO0L,cAAcC,SACpCC,EAAY3E,EAAI,GAAG3K,OAGvB,KAAO0D,EAAO6L,QAAQ5E,EAAKsC,EAASC,cAAc,CAChD,IAAII,EAAS,IAAIF,GAAK1J,EAAO6L,QAAQ5E,EAAKsC,EAASC,aAAamC,SAEhE,KAAO3L,EAAO8L,WAAWlC,EAAQgC,IAC/BhC,EAAO3Y,KAAK+O,EAAO8L,WAAWlC,EAAQgC,GAAWD,SAI7B,IAAlB/B,EAAOnX,OAAcwU,EAAIhW,KAAK2Y,EAAO,IACpC3C,EAAIhW,KAAK2Y,GAEhB,OAAO3C,EAAI8E,kBAmBb,SAASlC,EAAW7J,GAClB,IAAI4J,EAAS,IAAIF,GAAK1J,EAAO0L,cAAcC,SACvCK,EAAWpC,EAAO,GAAGvN,MAGzB,KAAO2D,EAAO8L,WAAWlC,EAAQL,EAASE,eAAe,CACvD,IAAIxC,EAAM,IAAIyC,GACZ1J,EAAO8L,WAAWlC,EAAQL,EAASE,cAAckC,SAGnD,KAAO3L,EAAO6L,QAAQ5E,EAAK+E,IACzB/E,EAAIhW,KAAK+O,EAAO6L,QAAQ5E,EAAK+E,GAAUL,SAItB,IAAf1E,EAAIxU,OAAcmX,EAAO3Y,KAAKgW,EAAI,IACjC2C,EAAO3Y,KAAKgW,GAInB,OAAO2C,EAAOqC,iBAoBhB,SAAS9B,EAAiB1B,GACxB,IAAI9J,EAAQ,IAAI+K,GAAKjB,EAAQiD,cAAcC,SAC3C,KAAOlD,EAAQyD,gBAAgBvN,EAAO4K,EAASC,cAC7C7K,EAAM1N,KAAKwX,EAAQyD,gBAAgBvN,EAAO4K,EAASC,aAAamC,SAElE,OAAOhN,EAAMoN,kBAGf,SAASlB,EAActC,GACrB,IAAI5J,EAAQ,IAAI+K,GAAKnB,EAAKmD,cAAcC,SACxC,KAAOpD,EAAK4D,aAAaxN,EAAO4K,EAASE,eACvC9K,EAAM1N,KAAKsX,EAAK4D,aAAaxN,EAAO4K,EAASE,cAAckC,SAE7D,OAAOhN,EAAMsN,iBA2Cf,SAASnB,EAAkBvC,GACzB,IAAI6D,EAAS7C,EAAS/M,QAAU8M,EAAS,EAErC+C,EAAO,IAAI3C,GACfnB,EAAKlY,SAAQ,CAAC4W,EAAKzU,KAEP,IAANA,EACF6Z,EAAKpb,KACHmY,EAAiBgD,EAAS7C,EAASjN,OAAS8P,EAASnF,EAAI3K,QAK3D+P,EAAKpb,KACHmY,EACIiD,EAAKC,OAAS/D,EAAK/V,EAAI,GAAG8J,OAC1B+P,EAAKC,OAASrF,EAAI3K,QAI1B,IAAIiQ,EAAO,IAAI7C,GACfzC,EAAIS,MAAMrX,SAAQ,CAACuZ,EAAQ4C,EAAG/D,KAE5B8D,EAAKtb,KACHwb,EAAWD,GAAKJ,EAASG,EAAKD,OAAS7D,EAAQ+D,EAAI,GAAGzC,eAIxD,IAAI2C,EAAaD,EAAWja,IAAM+V,EAAK9V,OAAS,EAC5CmX,aAAkB4B,IAEpB5B,EAAOpC,EAAIkF,EACPL,EAAK7Z,GAAK+V,EAAK/V,GAAG8J,OAASsN,EAAOtN,OAClC+P,EAAK7Z,GAEToX,EAAOrC,EAAIgF,EAAKC,IAEhB5C,EAAOvZ,SAAQ,CAACsc,EAAQC,KAEtBD,EAAOnF,EAAIiF,EAAWG,GAClBF,EACEL,EAAK7Z,GAAK+V,EAAK/V,GAAG8J,OAASqQ,EAAOrQ,OAClC+P,EAAK7Z,GACPka,EACA9C,EAAOgD,EAAI,GAAGpF,EAAImF,EAAOrQ,OACzBsN,EAAOgD,EAAI,GAAGpF,EAAIoC,EAAOgD,EAAI,GAAGtQ,OAEpCqQ,EAAOpF,EAILgF,EAAKC,YAQjB,SAASpC,EAAqB3B,GAC5B,IAAI2D,EAAS7C,EAAS/M,QAAU8M,EAAS,EAErCiD,EAAO,IAAI7C,GACfjB,EAAQpY,SAAQ,CAACuZ,EAAQpX,KAEb,IAANA,EACF+Z,EAAKtb,KAAKmb,GAIVG,EAAKtb,KAAKsb,EAAKD,OAAS7D,EAAQjW,EAAI,GAAG6J,OAGzC,IAAIgQ,EAAO,IAAI3C,GACfE,EAAOlC,MAAMrX,SAAQ,CAAC4W,EAAKuF,EAAGjE,KAE5B8D,EAAKpb,KACHwb,EAAWD,GACPpD,EACEgD,EACA7C,EAASjN,OAAS8P,EAASnF,EAAIsD,YACjCnB,EACAiD,EAAKC,OAAS/D,EAAKiE,EAAI,GAAGjC,YAC1B8B,EAAKC,OAASrF,EAAIsD,aAIxB,IAAIsC,EAAgBJ,EAAWja,IAAMiW,EAAQhW,OAAS,EAClDwU,aAAeuE,IAEjBvE,EAAIM,EAAIsF,EACJN,EAAK/Z,GAAKiW,EAAQjW,GAAG6J,MAAQ4K,EAAI5K,MACjCkQ,EAAK/Z,GAETyU,EAAIO,EAAI6E,EAAKG,IAEbvF,EAAI5W,SAAQ,CAACsc,EAAQC,KAEnBD,EAAOpF,EAAIkF,EAAWG,GAClBC,EACEN,EAAK/Z,GAAKiW,EAAQjW,GAAG6J,MAAQsQ,EAAOtQ,MACpCkQ,EAAK/Z,GACPqa,EACA5F,EAAI2F,EAAI,GAAGrF,EAAIoF,EAAOtQ,MACtB4K,EAAI2F,EAAI,GAAGrF,EAAIN,EAAI2F,EAAI,GAAGvQ,MAE9BsQ,EAAOnF,EAAI4B,EAAiBiD,EAAKG,GAAKH,EAAKG,EAAI,GAAKG,EAAOrQ,gBAOrE,SAASmQ,EAAW/T,GAClB,OAAiB,IAAVA,GAIX,MAAMoU,GACJlS,YAAY8B,GACV7B,KAAKkS,QAAS,EACdlS,KAAK6B,UAAYA,EAEnB9B,QAEE,OADAC,KAAKkS,QAAS,EACPlS,MAGX,MAAM2Q,WAAcsB,GAClBlS,aAAaoS,EAAY7F,EAAI9K,EAAOC,EAAQI,IAC1CuQ,MAAMvQ,GACN7B,KAAK6B,UAAYA,EACjB7B,KAAKmS,WAAaA,EAClBnS,KAAKsM,GAAKA,EACVtM,KAAKwB,MAAQA,EACbxB,KAAKyB,OAASA,EACdzB,KAAKuM,KAAOvM,KAAKyB,OAASzB,KAAKwB,MAC/BxB,KAAK0M,EAAI,EACT1M,KAAK2M,EAAI,EAGX5M,cACE,OAAOC,KAAKwB,MAEdzB,YACE,OAAOC,KAAKyB,QAGhB,MAAMwN,WAAegD,GACnBlS,YAAYyB,EAAOC,EAAQ8K,EAAMM,EAAOhL,GACtCuQ,MAAMvQ,GACN7B,KAAKwB,MAAQA,EACbxB,KAAKyB,OAASA,EACdzB,KAAKuM,KAAOA,EACZvM,KAAK6M,MAAQA,GAGjB,MAAMiD,WAAYb,GAChBlP,YAAYyB,EAAOC,EAAQ8K,EAAMM,EAAOhL,GACtCuQ,MAAM5Q,EAAOC,EAAQ8K,EAAMM,EAAOhL,IAGtC,MAAM2N,WAAcP,GAClBlP,YAAYyB,EAAOC,EAAQ8K,EAAMM,EAAOe,EAAStB,EAAIxI,GACnDsO,MAAM5Q,EAAOC,EAAQ8K,EAAMM,GAC3B7M,KAAK4N,QAAUA,EACf5N,KAAK8M,YAAchJ,EAAMtC,MACzBxB,KAAK+M,aAAejJ,EAAMrC,OAC1BzB,KAAKqS,WAAavO,EAAMtC,MAAQsC,EAAMrC,OACtCzB,KAAKwM,WAAaxM,KAAKqS,WAAarS,KAAKuM,KACzCvM,KAAKyM,YAAc,EAAIzM,KAAKuM,KAAOvM,KAAKqS,WACxCrS,KAAKsM,GAAK,WAAaA,SAEhBtM,KAAKkS,QAGhB,MAAMrD,WAAarP,MAGjBO,QACE,OAAOC,KAAK,GAEdD,OACE,OAAOC,KAAKA,KAAKpI,OAAS,GAE5BmI,QAAQuS,EAAa,GACnB,IAAIC,EAAYvS,KAChB,KAAOsS,KACLC,EAAYA,EAAU3B,OAExB,OAAO2B,EAGTxS,iBACE,OAAO,IAAI8O,MAAQ7O,MAAM8L,MAAK,CAAClW,EAAGC,IAChCA,EAAE2L,OAAS5L,EAAE4L,MAAQ3L,EAAE2L,MAAQ5L,EAAE4L,MAAQ3L,EAAE4L,OAAS7L,EAAE6L,SAG1D1B,kBACE,OAAO,IAAI8O,MAAQ7O,MAAM8L,MAAK,CAAClW,EAAGC,IAChCA,EAAE4L,QAAU7L,EAAE6L,OAAS5L,EAAE4L,OAAS7L,EAAE6L,OAAS5L,EAAE2L,MAAQ5L,EAAE4L,QAI7DzB,YACE,OAAOC,KAAK1B,QAAQkU,IAAWA,EAAMN,SAEvCnS,SACE,OAAOC,KAAK8O,YAAYsC,iBAAiBqB,QAE3C1S,YACE,OAAOC,KAAK8O,YAAYsC,iBAAiBK,OAE3C1R,UACE,OAAOC,KAAK8O,YAAYoC,kBAAkBuB,QAE5C1S,WACE,OAAOC,KAAK8O,YAAYoC,kBAAkBO,OAE5C1R,UACE,OAAOC,KAAK8L,MAAK,CAAClW,EAAGC,IAAMA,EAAE0W,KAAO3W,EAAE2W,OACnCuC,YACA2D,QAEL1S,WACE,OAAOC,KAAK8L,MAAK,CAAClW,EAAGC,IAAMD,EAAE2W,KAAO1W,EAAE0W,OACnCuC,YACA2D,QAEL1S,cACE,MAAO,CACL2S,OAAQ1S,KAAK0S,SACbC,QAAS3S,KAAK2S,UACdC,QAAS5S,KAAK4S,WACd5S,KAAKpI,OAASoI,KAAK,GAAG6B,UAAY,IAGtC9B,aACE,OAAOC,KAAK8G,QAAO,CAACC,EAAOyL,IACrBA,aAAiB3D,GACZ9H,EAAQyL,EAAMpB,iBAAiBqB,QAAQjR,MAEzCuF,EAAQyL,EAAMhR,OACpB,GAELzB,cACE,OAAOC,KAAK8G,QAAO,CAACC,EAAOyL,IACrBA,aAAiB3D,GACZ9H,EAAQyL,EAAMtB,kBAAkBuB,QAAQhR,OAE1CsF,EAAQyL,EAAM/Q,QACpB,GAEL1B,YACE,OAAOC,KAAK4P,QAAQ,GAAG9I,QAAO,CAACC,EAAOyL,IAAUzL,EAAQyL,EAAMjG,MAAM,GAEtExM,cACE,OAAOC,KAAK4Q,OAAOQ,iBAAiBqB,QAAQjR,MAE9CzB,eACE,OAAOC,KAAK6S,cAEd9S,WACE,OAAOC,KAAK8S,aAEd/S,YACE,OAAOC,KAAK4Q,OAAOM,kBAAkBuB,QAAQhR,OAE/C1B,eAAeoR,GACb,OAAOA,EAAWnR,KAAK8S,aAEzB/S,gBAAgBgR,GACd,OAAOA,EAAY/Q,KAAK6S,cAE1B9S,WAAW8M,EAAOkE,GAChB,OAAO/Q,KAAK1B,QAAQkU,GAAUA,EAAMhR,OAASqL,EAAM,GAAGrL,QAAO8P,aAC3DzE,EACAkE,GAGJhR,QAAQ8M,EAAOsE,GACb,OAAOnR,KAAK1B,QACTkU,GAAUA,EAAM/Q,QAAUoL,EAAM,GAAGpL,SACpC4P,gBAAgBxE,EAAOsE,GAE3BpR,gBAAgB8M,EAAOsE,GACrB,OAAOnR,KAAK8O,YACTxQ,QAAQkU,GAAUA,EAAMhR,MAAQqL,EAAMkG,eAAe5B,KACrDN,cAEL9Q,aAAa8M,EAAOkE,GAClB,OAAO/Q,KAAK8O,YACTxQ,QAAQkU,GAAUA,EAAM/Q,OAASoL,EAAMmG,gBAAgBjC,KACvDF,eCheA,MAAMoC,GAAa,CACxBC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENtL,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENurS,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENU,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CA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"}