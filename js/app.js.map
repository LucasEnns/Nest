{"version":3,"file":"app.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/sessionStore.js","../../src/stores.js","../../src/cncLibrary.js","../../src/localStore.js","../../src/methods.js","../../src/components/Import.svelte","../../src/csv.js","../../src/components/Editor.svelte","../../src/components/Viewer.svelte","../../src/components/Settings.svelte","../../src/nest.js","../../src/gCode.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store'\n\nexport const sessionStore = (key, initial) => {\n  const str = (obj) => JSON.stringify(obj, null, 2)\n\n  // set with initial value if item not present\n  if (!sessionStorage.getItem(key)) {\n    sessionStorage.setItem(key, str(initial))\n  }\n\n  // create the writable store\n  const { subscribe, set, update } = writable(\n    JSON.parse(sessionStorage.getItem(key))\n  )\n\n  return {\n    subscribe,\n    set: (value) => {\n      // save also to local storage as a string\n      sessionStorage.setItem(key, str(value))\n      return set(value)\n    },\n    update,\n  }\n}\n","// tool library\n// missing pass max CUT_TO_DEPTH\n// missing angle\n\nimport { localStore } from './localStore.js'\nimport { sessionStore } from './sessionStore.js'\nimport { cncLibrary } from './cncLibrary.js'\n\nconst defaultSettings = {\n  version1: 'update key',\n  language:\n    navigator.language.slice(0, 2) ||\n    navigator.userLanguage.slice(0, 2) ||\n    'en',\n  material: {\n    width: 49,\n    height: 97,\n    thickness: 0.75,\n    margins: 0.3,\n    cut_depth: 0.75,\n  },\n  nestTypeColumn: false,\n  nestOrder: 'widest',\n  nestDirectionBottom: true,\n  units: false,\n  tool: 9,\n  cnc: cncLibrary,\n  show: true,\n  activePanel: '',\n}\n\nexport const csvTemplate = {\n  en: [\n    ['Project', 'New', 'Material', 'Plywood', ''],\n    ['Borders', 'Top', 'Right', 'Bottom', 'Left'],\n    [0, 0, 0, 0, 0],\n    ['Metric?', false],\n    ['Panel', 'Quantity', 'Width', 'Height'],\n    [1, 0, 0, 0],\n  ],\n  fr: [\n    ['Projét', 'Nouveau', 'Matèriaux', 'Plaquage', 'Modèle Portes', ''],\n    ['Borders', 'Top', 'Right', 'Bottom', 'Left'],\n    [0, 0, 0, 0, 0],\n    ['Metric?', false],\n    ['Panneaux', 'Quantité', 'Largeur', 'Hauteur'],\n    [1, 0, 0, 0],\n    ,\n  ],\n}\n\nconst defaultData = {\n  name: '',\n  sheets: [],\n  errors: [],\n  csv: {\n    new: { ...csvTemplate },\n    contents: [...csvTemplate.en],\n    panels: [],\n    headerRows: 5,\n    output: '',\n  },\n  svg: '',\n  cnc: '',\n}\n\nexport const settings = localStore('settings', defaultSettings)\nexport const data = sessionStore('data', defaultData)\n// export const sheets = sessionStore('sheets', [])\n// export const CSV = sessionStore('csv-file', csvTemplate)\n// export const svg = sessionStore('svg', '')\n","export const cncLibrary = {\n  1: {\n    name: '3/16\" End mill',\n    type: 'End mill',\n    diameter: 0.1875,\n    spindle: 12000,\n    feed: 150,\n    plunge: 100,\n    ramp: 1,\n    max_depth: 0.875,\n    pass_depth: 0.125,\n    step_over: 0.125,\n  },\n  2: {\n    name: '3/4\" End mill',\n    type: 'End mill',\n    diameter: 0.75,\n    spindle: 15000,\n    feed: 200,\n    plunge: 75,\n    ramp: 5,\n    max_depth: 3,\n    pass_depth: 0.25,\n    step_over: 0.625,\n  },\n  3: {\n    name: '1/8\" Engraver/Drill',\n    type: 'Ballnose',\n    diameter: 0.125,\n    spindle: 12000,\n    feed: 50,\n    plunge: 50,\n    ramp: 1,\n    max_depth: 0.0625,\n    pass_depth: 0.25,\n    step_over: 0.0625,\n  },\n  4: {\n    name: '3/4\" Edge Finisher',\n    type: 'Edge Finisher',\n    diameter: 0.75,\n    spindle: 20000,\n    feed: 75,\n    plunge: 30,\n    ramp: 4,\n    max_depth: 2.25,\n    pass_depth: 2.25,\n    step_over: 0.05,\n  },\n  5: {\n    name: '5mm Drill',\n    type: 'Drill',\n    diameter: 0.19685,\n    spindle: 8500,\n    feed: 0,\n    plunge: 60,\n    ramp: 0,\n    max_depth: 1,\n    pass_depth: 1,\n    step_over: 0,\n  },\n  6: {\n    name: '1/4\" Endmill',\n    type: 'Endmill',\n    diameter: 0.25,\n    spindle: 18000,\n    feed: 150,\n    plunge: 40,\n    ramp: 1,\n    max_depth: 1,\n    pass_depth: 0.25,\n    step_over: 0.2,\n  },\n  7: {\n    name: '8mm Drill',\n    type: 'Drill',\n    diameter: 0.31496,\n    spindle: 8500,\n    feed: 0,\n    plunge: 60,\n    ramp: 0,\n    max_depth: 1,\n    pass_depth: 1,\n    step_over: 0,\n  },\n  8: {\n    name: '32mm Surfacing',\n    type: 'Surfacing',\n    diameter: 1.25985,\n    spindle: 12000,\n    feed: 200,\n    plunge: 30,\n    ramp: 5,\n    max_depth: 0.125,\n    pass_depth: 1,\n    step_over: 0,\n  },\n  9: {\n    name: '3/8\" Endmill',\n    type: 'Endmill',\n    diameter: 0.375,\n    spindle: 18000,\n    feed: 400,\n    plunge: 70,\n    ramp: 1,\n    max_depth: 0.875,\n    pass_depth: 0.875,\n    step_over: 0.3,\n  },\n  10: {\n    name: '1/2\" Endmill',\n    type: 'Endmill',\n    diameter: 0.5,\n    spindle: 18000,\n    feed: 400,\n    plunge: 70,\n    ramp: 1,\n    max_depth: 0.875,\n    pass_depth: 0.875,\n    step_over: 0.4,\n  },\n  11: {\n    name: '10mm Drill',\n    type: 'Drill',\n    diameter: 0.3937,\n    spindle: 18000,\n    feed: 0,\n    plunge: 60,\n    ramp: 0,\n    max_depth: 1,\n    pass_depth: 1,\n    step_over: 0,\n  },\n  12: {\n    name: '90deg 1.5\" V-bit',\n    type: 'V-bit',\n    diameter: 1.5,\n    spindle: 12000,\n    feed: 75,\n    plunge: 30,\n    ramp: 1,\n    max_depth: 0.75,\n    pass_depth: 0.25,\n    step_over: 0.125,\n  },\n}\n","import { writable } from 'svelte/store'\n\nexport const localStore = (key, initial) => {\n  const str = (obj) => JSON.stringify(obj, null, 2)\n  // set with initial value if item not present\n  if (!localStorage.getItem(key)) {\n    localStorage.setItem(key, str(initial))\n  }\n\n  const localKey = JSON.parse(localStorage.getItem(key))\n  // reset with initial value as string if settings updated\n  if (!sameKeys(localKey, initial)) {\n    localStorage.setItem(key, str(initial))\n  }\n  // create the writable store\n  const { subscribe, set, update } = writable(localKey)\n\n  return {\n    subscribe,\n    set: (value) => {\n      // save also to local storage as a string\n      localStorage.setItem(key, str(value))\n      return set(value)\n    },\n    update,\n  }\n}\n\nfunction sameKeys(obj1, obj2) {\n  return Object.keys(obj1).join() === Object.keys(obj2).join()\n}\n","export function toFloat(str) {\n  // const cleanFloat = (str) => cleanFloat(parseFloat(str))\n  if (!isNaN(str)) return cleanFloat(str) // if number return float\n  if (str.includes('/') && !str.includes('.')) {\n    return str\n      .split(' ') // covert rational string into array\n      .filter((item) => item !== '') // removes multiple spaces\n      .reduce((total, item) => {\n        // get array total of whole # + fraction\n        if (item.includes('/')) {\n          let frac = item.split('/').filter((item) => item !== '')\n          return total + cleanFloat(frac[0] / frac[1])\n        }\n        return total + cleanFloat(item)\n      }, 0)\n  }\n  return str\n}\n\nexport function hasNumber(str) {\n  return /\\d/.test(str)\n}\nexport function isNumber(str) {\n  return /(\\.|\\/)\\d/.test(str)\n}\nexport function trunc(number, places) {\n  return Math.round(parseFloat(number) * 10 ** places) / 10 ** places\n}\nexport function cleanFloat(num) {\n  return trunc(num, 5)\n}\nconst removeFromArray = (array, itemValue) => {\n  let index = array.indexOf(itemValue)\n  return [...array.slice(0, index), ...array.slice(index + 1)]\n}\n\nexport function toMM(number) {\n  return cleanFloat(number * 25.4)\n}\n\nexport function toInches(number) {\n  return cleanFloat(number / 25.4)\n}\n\nexport function formatDate(date, format) {\n  const leadingZero = (digits) => ('0' + digits).slice(-2)\n  const map = {\n    mm: leadingZero(date.getMonth() + 1),\n    dd: leadingZero(date.getDate()),\n    yy: date.getFullYear().toString().slice(-2),\n    yyyy: date.getFullYear(),\n    HH: leadingZero(date.getHours()),\n    MM: leadingZero(date.getMinutes()),\n    SS: leadingZero(date.getSeconds()),\n    T: 'T',\n    h: 'h',\n  }\n\n  return format.replace(/mm|dd|yyyy|yy|HH|MM|SS/gi, (matched) => map[matched])\n}\n","<script>\nimport { settings, data } from '../stores.js'\nimport { formatDate } from '../methods.js'\nimport { CSVToArray } from '../csv.js'\nimport { createEventDispatcher } from 'svelte'\n\nconst dispatch = createEventDispatcher()\n\nconst today = formatDate(new Date(), '.yy.mm.dd.HHhMM')\n\nlet badFile = false,\n  keys = {},\n  dlCSV,\n  dlSVG,\n  dlCNC,\n  project,\n  open\n\nfunction updatePanels() {\n  $settings.units = $data.csv.contents[3][1]\n  dispatch('update')\n}\n\nfunction handleKeyDown(e) {\n  keys[e.code] = true\n  const key = (code) => (keys['AltLeft'] || keys['AltRight']) && keys[code]\n  if (key('KeyO')) setTimeout(() => file.click(), 140)\n  if (key('KeyN')) newFile()\n  if (key('KeyV')) dlCSV.click()\n  if (key('KeyG')) dlSVG.click()\n  if (key('KeyC')) dlCNC.click()\n  if (key('KeyS')) $settings.show = !$settings.show\n}\n\nfunction handleKeyUp(e) {\n  delete keys[e.code]\n}\n\nfunction newFile() {\n  $data.csv.contents = [...$data.csv.new[$settings.language]]\n  updatePanels()\n  project.firstChild().focus()\n}\n\nfunction loadFile() {\n  if (!open.files[0]) return\n  if (open.files[0].name.includes('.csv')) {\n    let reader = new FileReader()\n    reader.readAsText(open.files[0])\n    reader.onload = function (event) {\n      $data.csv.contents = CSVToArray(event.target.result, $data.csv.headerRows) // csv file\n      badFile = false\n      updatePanels()\n      return\n    }\n  }\n  badFile = true\n}\n</script>\n\n<style>\n.file-mgmt {\n  /* padding-top: 1rem; */\n  display: flex;\n  vertical-align: center;\n  align-items: center;\n  text-align: center;\n  justify-content: space-between;\n}\n\n.file-icon {\n  position: relative;\n  height: 2em;\n  width: 1.7em;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n  cursor: pointer;\n  transition: 0.1s;\n}\n.file-icon:hover,\n.file-icon:focus,\n.setting-icon.active,\ninput:focus + .file-icon {\n  /* position: relative; */\n  height: 2.5em;\n  width: 2.3em;\n  transition: 0.1s;\n  outline: none;\n}\n.inputfile {\n  top: 0.5em;\n  width: 0.1px;\n  height: 0.1px;\n  opacity: 0;\n  overflow: hidden;\n  position: absolute;\n  z-index: -1;\n}\n.file-icon > span,\n.file-icon::after,\n.file-icon:before {\n  position: absolute;\n  left: 4.6rem;\n  top: 4.1rem;\n  white-space: nowrap;\n  transition: 0.1s;\n  outline: none;\n  background-color: var(--primary);\n  color: var(--primary-bg);\n  font-size: var(--small);\n  font-weight: 600;\n  padding: var(--xsmall);\n  border-radius: var(--xsmall);\n  opacity: 0;\n  z-index: 3;\n  pointer-events: none;\n}\n.file-icon:before {\n  /* transform: rotate(45deg); */\n  transform: skewX(30deg);\n  /* left: 4.4rem; */\n  /* bottom: 0rem; */\n  border-radius: 0;\n  width: 0.5rem;\n  height: 0.5rem;\n  content: '';\n}\n.file-icon:hover > span,\n.file-icon:hover::after,\n.file-icon:hover:before {\n  opacity: 1;\n  transition: 0.1s;\n  transition-delay: 0.7s;\n}\n\n.blocked {\n  cursor: default;\n}\n.blocked:hover::after,\n.blocked:hover::before {\n  opacity: 0;\n}\n.blocked:hover {\n  height: 2em;\n  width: 1.7em;\n}\n.badfile {\n  background-image: url('../img/upload-bad.png');\n}\n.upload {\n  background-image: url('../img/upload.png');\n}\n.upload:hover {\n  background-image: url('../img/upload-hover.png');\n}\n.new {\n  background-image: url('../img/new.png');\n}\n.new:hover {\n  background-image: url('../img/new-hover.png');\n}\n.dl-svg {\n  background-image: url('../img/dl-svg.png');\n}\n.dl-svg-block {\n  background-image: url('../img/dl-svg-block.png');\n}\n.dl-svg:hover {\n  background-image: url('../img/dl-svg-hover.png');\n}\n.dl-csv {\n  background-image: url('../img/dl-csv.png');\n}\n.dl-csv-block {\n  background-image: url('../img/dl-csv-block.png');\n}\n.dl-csv:hover {\n  background-image: url('../img/dl-csv-hover.png');\n}\n.dl-cnc {\n  background-image: url('../img/dl-cnc.png');\n}\n.dl-cnc-block {\n  background-image: url('../img/dl-cnc-block.png');\n}\n.dl-cnc:hover {\n  background-image: url('../img/dl-cnc-hover.png');\n}\n.setting-icon {\n  background-image: url('../img/settings.png');\n}\n.setting-icon:hover,\n.setting-icon.active {\n  background-image: url('../img/settings-hover.png');\n}\nh6 {\n  display: flex;\n}\nh6 > input {\n  flex: 2;\n\n  font-size: 1.4em;\n  /* width: 55%; */\n  /* padding: 10; */\n  text-align: left;\n}\n</style>\n\n<svelte:head>\n  <title>{'Holy! Nest: ' + $data.csv.contents[0][1] || 'Holy! Nest'}</title>\n</svelte:head>\n<svelte:window on:keydown=\"{handleKeyDown}\" on:keyup=\"{handleKeyUp}\" />\n\n<div class=\"file-mgmt\">\n  <input\n    class=\"inputfile\"\n    name=\"file\"\n    id=\"file\"\n    type=\"file\"\n    on:change=\"{loadFile}\"\n    bind:this=\"{open}\" />\n  <label\n    for=\"file\"\n    data-lang=\"{$settings.language}\"\n    data-fr=\"ouvrir fichier .csv (alt + o)\"\n    class=\"file-icon {badFile ? 'badfile' : 'upload'}\"\n    on:mouseover=\"{() => (badFile = false)}\">\n    <span>open .csv file (alt + o)</span>\n  </label>\n  <div\n    tabindex=\"0\"\n    role=\"button\"\n    data-lang=\"{$settings.language}\"\n    data-fr=\"nouveau fichier (alt + n)\"\n    class=\"file-icon new\"\n    on:click=\"{newFile}\">\n    <span>new file (alt + n)</span>\n  </div>\n  {#if $data.sheets.length}\n    <a\n      href=\"data:text/plain;charset=utf-8,{encodeURIComponent($data.csv.output)}\"\n      download=\"{$data.name + today}.csv\"\n      role=\"button\"\n      data-lang=\"{$settings.language}\"\n      data-fr=\"téléchargez le fichier .csv  (alt + v)\"\n      class=\"file-icon dl-csv\"\n      bind:this=\"{dlCSV}\">\n      <span>download .csv file (alt + v)</span>\n    </a>\n    <a\n      href=\"data:text/plain;charset=utf-8,{encodeURIComponent($data.svg)}\"\n      download=\"{$data.name + today}.svg\"\n      alt=\"download svg file\"\n      role=\"button\"\n      data-lang=\"{$settings.language}\"\n      data-fr=\"telechargez le fichier .svg (alt + g)\"\n      class=\"file-icon dl-svg\"\n      bind:this=\"{dlSVG}\">\n      <span>download .svg file (alt + g)</span>\n    </a>\n    <a\n      href=\"data:text/plain;charset=utf-8,{encodeURIComponent($data.cnc)}\"\n      download=\"{$data.name + today}.cnc\"\n      role=\"button\"\n      data-lang=\"{$settings.language}\"\n      data-fr=\"telechargez le fichier .cnc (alt + c)\"\n      class=\"file-icon dl-cnc\"\n      bind:this=\"{dlCNC}\">\n      <span>download .cnc file (alt + c)</span>\n    </a>\n  {:else}\n    <div class=\"file-icon dl-csv-block blocked\"></div>\n    <div class=\"file-icon dl-svg-block blocked\"></div>\n    <div class=\"file-icon dl-cnc-block blocked\"></div>\n  {/if}\n  <div\n    tabindex=\"0\"\n    role=\"button\"\n    data-lang=\"{$settings.language}\"\n    data-fr=\"cnc + projet parametre  (alt + s)\"\n    class=\"file-icon setting-icon\"\n    class:active=\"{$settings.show}\"\n    on:click=\"{() => ($settings.show = !$settings.show)}\">\n    <span>cnc + project settings (alt + s)</span>\n  </div>\n</div>\n<div class=\"project\" bind:this=\"{project}\">\n  {#each [0, 2, 4] as setup}\n    {#if $data.csv.contents[0][setup]}\n      <h6>\n        <span>{$data.csv.contents[0][setup]}: </span>\n        <input type=\"text\" bind:value=\"{$data.csv.contents[0][setup + 1]}\" />\n      </h6>\n    {/if}\n  {/each}\n</div>\n","import { hasNumber, toFloat } from './methods.js'\n\nexport function CSVToArray(strData, headerRows = 1, strDelimiter = ',') {\n  // Create a regular expression to parse the CSV values.\n  var regexPattern = new RegExp(\n    '(\\\\' +\n      strDelimiter +\n      '|\\\\r?\\\\n|\\\\r|^)' + // Delimiters.\n      '(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|' + // Quoted fields.\n      '([^\"\\\\' +\n      strDelimiter +\n      '\\\\r\\\\n]*))', // Standard fields.\n    'gi'\n  )\n\n  // Create an array of arrays to hold csv data.\n  var arrData = [[]]\n\n  // Create an array to hold our individual pattern\n  // matching groups.\n  var arrMatches = null\n\n  // Keep looping over the regular expression matches\n  // until we can no longer find a match.\n  while ((arrMatches = regexPattern.exec(strData))) {\n    // Get the delimiter that was found.\n    var strMatchedDelimiter = arrMatches[1]\n\n    // Check to see if the given delimiter has a length\n    // (is not the start of string) and if it matches\n    // field delimiter. If id does not, then we know\n    // that this delimiter is a row delimiter.\n    if (strMatchedDelimiter.length && strMatchedDelimiter != strDelimiter) {\n      // Since we have reached a new row of data,\n      // add an empty row to our data array.\n      arrData.push([])\n    }\n\n    // Now that we have our delimiter out of the way,\n    // let's check to see which kind of value we\n    // captured (quoted or unquoted).\n    if (arrMatches[2]) {\n      // We found a quoted value. When we capture\n      // this value, unescape any double quotes.\n      var strMatchedValue = arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n    } else {\n      // We found a non-quoted value.\n      var strMatchedValue = arrMatches[3]\n    }\n\n    if (hasNumber(strMatchedValue)) {\n      strMatchedValue = toFloat(strMatchedValue)\n    }\n\n    // Now that we have our value string, let's add\n    // it to the data array.\n    arrData[arrData.length - 1].push(strMatchedValue)\n  }\n\n  // Return the parsed data.\n  return arrData.filter((item, index) => {\n    // keep all header rows\n    if (index < headerRows) return true\n    // removes blanc rows thereafter\n    return item.filter((inner) => inner !== '').length\n  })\n}\n","<script>\nimport { settings, data } from '../stores.js'\nimport { toMM, toInches } from '../methods.js'\nimport { createEventDispatcher } from 'svelte'\n\nconst dispatch = createEventDispatcher()\n\n$: metric = $data.csv.contents[3][1]\n$: showUnits = metric ? 'mm' : '//'\n$: findMax = (directionStr) => {\n  let max = $settings.material[directionStr] - $settings.material.margins * 2\n  return metric ? toMM(max) : max\n}\n\nfunction highlight() {\n  this.select()\n}\n\nfunction addRow() {\n  let row = [$data.csv.panels.length + 1, 0, 0, 0]\n  $data.csv.contents = [...$data.csv.contents, row]\n  dispatch('update')\n}\n\nfunction sortAscending(index) {\n  //add support for alpha numberic\n  $data.csv.panels = $data.csv.panels.sort((a, b) => a[index] - b[index])\n}\nfunction sortDescending(index) {\n  $data.csv.panels = $data.csv.panels.sort((a, b) => b[index] - a[index])\n}\n\nfunction convertUnits() {\n  let convert = metric ? toInches : toMM\n  $data.csv.panels.forEach((index) => {\n    index[2] = convert(index[2])\n    index[3] = convert(index[3])\n  })\n  $data.csv.contents[3][1] = $settings.units = !metric\n}\n</script>\n\n<style>\n.wrapper {\n  display: flex;\n  flex-direction: column;\n  height: 90vh;\n  /* justify-content: space-evenly; */\n  overflow-y: scroll;\n}\n\nul {\n  font-size: var(--small);\n  display: grid;\n  grid-template-columns: 3fr 2fr 5fr 5fr;\n  border-bottom: 1px solid;\n}\n.new-row {\n  color: var(--blue);\n  font-size: var(--xxlarge);\n  cursor: pointer;\n  text-align: center;\n}\n.active {\n  background-color: var(--second-bg);\n}\nli {\n  line-height: var(--xxlarge);\n  text-align: center;\n  cursor: pointer;\n}\nli small {\n  position: relative;\n  top: -1.5em;\n  /* z-index: 4; */\n  font-size: 0.15em;\n  font-weight: 700;\n}\n\n.header span:hover {\n  text-decoration: overline;\n}\n\ninput {\n  width: 100%;\n  height: 100%;\n  border-radius: 0;\n  text-align: center;\n}\ninput:hover {\n  color: var(--primary-bg);\n  background-color: var(--second);\n}\n/* .title {\n  column-span: 3;\n} */\n\ndiv {\n  padding-top: 1rem;\n  /* vertical-align: bottom; */\n}\n\n.switch input {\n  top: 0.5em;\n  width: 0.1px;\n  height: 0.1px;\n  opacity: 0;\n  overflow: hidden;\n  position: absolute;\n  z-index: -1;\n}\n\ninput[type='checkbox'] {\n  opacity: 0;\n}\n\n.switch {\n  position: relative;\n  display: inline-block;\n  width: 1.05in;\n  height: 1.5rem;\n  top: 0.4rem;\n  left: 0.3rem;\n}\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  vertical-align: middle;\n  /* padding-bottom: 0.2rem; */\n  /* background-color: #8ffffd; */\n  -webkit-transition: 0.2s;\n  transition: 0.2s;\n  border: 1px solid var(--primary);\n  border-top: transparent;\n  border-right: transparent;\n  border-bottom-left-radius: 0.2rem;\n}\n.slider:hover:after,\ninput:checked + .direction:hover:after {\n  text-decoration: overline;\n}\n.direction:hover:after,\nselect:hover {\n  text-decoration: underline;\n  /* border: 1px solid var(--primary);\n  border-radius: 0.2rem; */\n}\n.slider:before {\n  position: absolute;\n  content: '';\n  height: 1.5rem;\n  width: 1px;\n  right: 0.05in;\n  top: 0;\n  background-color: var(--primary);\n  -webkit-transition: 0.2s;\n  transition: 0.2s;\n}\ninput:checked + .slider:before {\n  -webkit-transform: translateX(-24mm);\n  -ms-transform: translateX(-24mm);\n  transform: translateX(-24mm);\n}\n.slider:after {\n  content: 'inches';\n  color: var(--primary);\n  display: block;\n  position: absolute;\n  top: -0.5rem;\n  left: 1rem;\n  font-weight: 100;\n  font-size: var(--medium);\n  /* transform: translate(-50%, 0%); */\n}\n.units[data-lang*='fr']:after {\n  content: 'pouces';\n}\ninput:checked + .units:after {\n  content: 'mm';\n}\n</style>\n\n<div class=\"wrapper\">\n  <!-- <div class=\"input-wrapper\"> -->\n  <h6 data-lang=\"{$settings.language}\" data-fr=\"Unités: \">\n    <span>Units: </span>\n    <label class=\"switch\"><input\n        type=\"checkbox\"\n        on:change=\"{convertUnits}\"\n        bind:checked=\"{$settings.units}\" />\n      <div class=\"slider units\" data-lang=\"{$settings.language}\"></div></label>\n  </h6>\n  <!-- </div> -->\n\n  <div>\n    <!-- {#if $data.name} -->\n    {#if $data.errors.length}\n      <h5>ERROR{$data.errors.length > 1 ? 'S' : ''}:</h5>\n      {#each $data.errors as error}\n        <p>{error}</p>\n      {/each}\n    {/if}\n\n    <ul class=\"header\">\n      <li on:click=\"{() => sortAscending(0)}\">\n        <span>{$data.csv.contents[4][0]}</span>\n      </li>\n      <li on:click=\"{() => sortDescending(1)}\">\n        <span>{$data.csv.contents[4][1]}</span>\n      </li>\n      <li on:click=\"{() => sortDescending(2)}\">\n        <span>{$data.csv.contents[4][2]}</span>\n        <!-- <small> {showUnits}</small> -->\n      </li>\n      <li on:click=\"{() => sortDescending(3)}\">\n        <span>{$data.csv.contents[4][3]}</span>\n        <!-- <small> {showUnits}</small> -->\n      </li>\n    </ul>\n    {#each $data.csv.panels as line}\n      <ul\n        class=\"{$settings.activePanel == line[0] ? 'active' : ''}\"\n        on:mouseenter=\"{() => ($settings.activePanel = line[0])}\"\n        on:mouseleave=\"{() => ($settings.activePanel = '')}\">\n        <li>\n          <input type=\"text\" bind:value=\"{line[0]}\" on:focus=\"{highlight}\" />\n        </li>\n        <li>\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"100\"\n            bind:value=\"{line[1]}\"\n            on:focus=\"{highlight}\" />\n        </li>\n        <li>\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"{findMax('width')}\"\n            bind:value=\"{line[2]}\"\n            on:focus=\"{highlight}\"\n            step=\"{metric ? 0.25 : 0.03125}\" />\n        </li>\n        <li>\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"{findMax('height')}\"\n            bind:value=\"{line[3]}\"\n            on:focus=\"{highlight}\"\n            step=\"{metric ? 0.25 : 0.03125}\" />\n        </li>\n      </ul>\n    {/each}\n    <!-- {/if} -->\n    <ul class=\"new-row\" on:click=\"{addRow}\" role=\"button\">+</ul>\n  </div>\n</div>\n","<script>\n// to do :\n//units to mm scale setting\n\nimport { settings, data } from '../stores.js'\nimport { afterUpdate } from 'svelte'\nimport { trunc } from '../methods.js'\n\nlet id,\n  displayInfo = false,\n  top = 0,\n  left = 0,\n  scale = 90,\n  // scale = $settings.units ? 90 * 25.4 : 90,\n  svgFile\n\nafterUpdate(() => {\n  $data.svg = svgFile.innerHTML.toString()\n})\n\nfunction panelHoverOn() {\n  $settings.activePanel = this.id\n}\nfunction panelHoverOff() {\n  $settings.activePanel = ''\n}\n\nfunction showInfo() {\n  displayInfo = true\n  let rect = this.getBoundingClientRect()\n  top = (rect.bottom - rect.top) / 2 + rect.top\n  left = (rect.right - rect.left) / 2 + rect.left\n  id = this.id\n}\nfunction hideInfo() {\n  displayInfo = false\n}\n\nfunction flipY(y, height) {\n  // return y\n  return $settings.material.height - height - y\n}\n\nfunction shift(index) {\n  let maxColumns = 5,\n    rows = Math.ceil($data.sheets.length / maxColumns),\n    columns = Math.ceil($data.sheets.length / rows),\n    row = Math.ceil((index + 1) / columns) - 1,\n    column = index % columns,\n    x = column * $settings.material.width,\n    y = row * $settings.material.height,\n    w = columns * $settings.material.width,\n    h = rows * $settings.material.height\n  return { x, y, w, h }\n}\n</script>\n\n<style>\n.viewer {\n  height: 100vh;\n  padding: 2vh 2vw;\n}\n.infocard {\n  position: fixed;\n  padding: 1rem;\n  background-color: var(--primary);\n  border: 1px solid var(--primary-bg);\n  border-radius: 4px;\n  font-weight: 100;\n  line-height: 1.5em;\n  color: var(--primary-bg);\n  font-size: 1.3rem;\n  z-index: 2;\n  transform: translate(-50%, -50%);\n  pointer-events: none;\n}\nsup {\n  font-size: 0.5em;\n  line-height: 1.5em;\n}\nsvg {\n  height: 100%;\n  width: 100%;\n  margin: auto auto;\n  overflow: hidden;\n}\n\n.panel {\n  stroke: var(--second);\n  fill: var(--primary-bg);\n  transition: 0.2s;\n}\n\n.active {\n  fill: var(--second);\n  stroke: var(--primary);\n  transition: 0.2s;\n}\n.sheet {\n  stroke: var(--primary);\n  fill: var(--primary-bg);\n  /* fill-opacity: 0; */\n  transition: 0.2s;\n}\n\n.sheet:hover {\n  fill: var(--primary);\n  fill-opacity: 1;\n  transition: 0.2s;\n}\n\n.id {\n  text-anchor: middle;\n  fill: var(--second);\n  stroke: none;\n  font-weight: 300;\n  pointer-events: none;\n  cursor: default;\n}\n.id.active {\n  fill: var(--primary-bg);\n}\n</style>\n\n{#if displayInfo}\n  <div class=\"infocard\" style=\"left: {left}px; top: {top}px;\">\n    <h4>{$data.sheets[id].id}</h4>\n    <p>\n      area des panneaux:\n      {trunc($data.sheets[id].area / 144, 2)}\n      pi<sup>2</sup>\n    </p>\n    <p>\n      area de perte:\n      {trunc($data.sheets[id].waste_area / 144, 2)}\n      pi<sup>2</sup>\n    </p>\n    <p>% de perte: {trunc($data.sheets[id].waste_ratio * 100, 2)}%</p>\n    <!-- <p>used area: {trunc( $data.sheets[id].area / 144, 2)} pi<sup>2</sup></p>\n    <p>waste area: {trunc($data.sheets[id].waste_area / 144, 2)} pi<sup>2</sup></p>\n    <p>waste: {trunc($data.sheets[id].waste_ratio * 100, 2)}%</p> -->\n  </div>\n{/if}\n\n<div class=\"viewer\" bind:this=\"{svgFile}\">\n  <svg\n    class=\"print\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    width=\"{shift($data.sheets.length - 1).w * scale || 0}\"\n    height=\"{shift($data.sheets.length - 1).h * scale || 0}\"\n    viewBox=\"0 0 {shift($data.sheets.length - 1).w * scale || 0} {shift($data.sheets.length - 1).h * scale || 0}\"\n    preserveAspectRatio=\"xMidYMid meet\">\n    {#each $data.sheets as sheet, index}\n      <g id=\"sheets\">\n        <rect\n          style=\"stroke-width: {$settings.material.margins * scale}px;\"\n          on:mouseover=\"{showInfo}\"\n          on:mouseleave=\"{hideInfo}\"\n          class=\"sheet print\"\n          id=\"{index}\"\n          x=\"{(shift(index).x + $settings.material.margins / 2) * scale}\"\n          y=\"{(shift(index).y + $settings.material.margins / 2) * scale}\"\n          width=\"{(sheet.sheet_width - $settings.material.margins) * scale}\"\n          height=\"{(sheet.sheet_height - $settings.material.margins) * scale}\"></rect>\n      </g>\n      <g id=\"panels\">\n        {#each sheet.group as panel}\n          <rect\n            style=\"stroke-width: {$settings.cnc[$settings.tool].diameter * scale}px;\"\n            on:mouseover=\"{panelHoverOn}\"\n            on:mouseleave=\"{panelHoverOff}\"\n            class=\"panel {$settings.activePanel == panel.id ? 'active' : ''} print\"\n            id=\"{panel.id}\"\n            x=\"{(panel.x + shift(index).x) * scale}\"\n            y=\"{(flipY(panel.y, panel.height) + shift(index).y) * scale}\"\n            width=\"{panel.width * scale}\"\n            height=\"{panel.height * scale}\"></rect>\n\n          <text\n            style=\"font-size: {scale * (panel.id.length > 6 ? Math.min(panel.height * 0.4, 2.5) : Math.min(panel.height * 0.8, 5))}px;\"\n            class=\"id {$settings.activePanel == panel.id ? 'active' : ''} print\"\n            x=\"{(panel.x + shift(index).x + panel.width / 2) * scale}\"\n            y=\"{(flipY(panel.y, panel.height) + shift(index).y + Math.min(panel.height * 0.8, 5) / 3 + panel.height / 2) * scale}\">\n            {panel.id}\n          </text>\n        {/each}\n      </g>\n    {/each}>\n  </svg>\n</div>\n","<script>\nimport { settings } from '../stores.js'\n\nfunction highlight() {\n  this.select()\n}\n</script>\n\n<style>\n.settings {\n  position: relative;\n  height: 90vh;\n  top: -90vh;\n  left: 100%;\n  /* padding: 1.5vh 3.5vw; */\n  transition: 0.25s;\n  /* opacity: 0; */\n  display: none;\n  /* pointer-events: none; */\n  z-index: 2;\n  /* display: grid;\n  grid-template-rows: 10vh 1fr;\n  grid-template-columns: repeat(2, minmax(200px, 1fr)); */\n  /* flex-direction: row; */\n  /* justify-content: center; */\n}\n.settings.active {\n  background-color: var(--primary-bg);\n  transform: translateX(-100%);\n  transition: 0.2s;\n  display: block;\n  /* opacity: 1; */\n  overflow: scroll;\n  /* pointer-events: auto; */\n  /* transition-delay: 1s; */\n}\n.general,\n.cnc {\n  height: auto;\n  /* display: grid; */\n  /* align-items: initial; */\n  /* justify-items: start; */\n}\n\n/* .closepane {\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n} */\n/* .close {\n  text-align: end;\n} */\nh2 {\n  /* font-size: 1em; */\n  min-width: 100%;\n  padding-top: 2vh;\n  padding-right: 100%;\n  text-transform: uppercase;\n  font-weight: 100;\n  letter-spacing: 1.5rem;\n}\n/* h2 {\n  padding-top: 1vh;\n  text-transform: uppercase;\n  font-size: var(--xlarge);\n} */\nh3 {\n  font-weight: 300;\n  font-style: italic;\n  padding-top: 1rem;\n}\nh3,\nh5 {\n  margin-right: 1rem;\n}\n/* .input-wrapper {\n  padding-left: 3vw;\n} */\nh5 {\n  padding-left: 1rem;\n}\n\ninput {\n  width: 4em;\n  text-align: center;\n}\ninput:hover {\n  color: var(--primary);\n  background-color: var(--primary-bg);\n  text-decoration: underline;\n}\n\nselect {\n  padding-left: 1rem;\n  width: 10rem;\n  font-weight: 100;\n  font-family: Quicksand, sans-serif;\n  letter-spacing: 0.05rem;\n  color: var(--primary);\n  background-color: var(--primary-bg);\n  outline: none;\n  border: 1px solid transparent;\n  border-radius: 0.2rem;\n}\n\nselect:hover {\n  cursor: pointer;\n}\nselect:focus,\n.slider:f {\n  font-weight: 800;\n  color: var(--third);\n  background-color: var(--primary-bg);\n  border: 1px solid var(--primary);\n  border-radius: 0.2rem;\n}\n\n.switch input {\n  top: 0.5em;\n  width: 0.1px;\n  height: 0.1px;\n  opacity: 0;\n  overflow: hidden;\n  position: absolute;\n  z-index: -1;\n}\n\ninput[type='checkbox'] {\n  opacity: 0;\n}\n\n.switch {\n  position: relative;\n  display: inline-block;\n  width: 1.05in;\n  height: 1.5rem;\n  /* top: 0.6rem; */\n}\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  vertical-align: middle;\n  /* padding-bottom: 0.2rem; */\n  /* background-color: #8ffffd; */\n  -webkit-transition: 0.2s;\n  transition: 0.2s;\n  border: 1px solid var(--primary);\n  border-top: transparent;\n  border-right: transparent;\n  border-bottom-left-radius: 0.2rem;\n}\n.slider:hover:after,\ninput:checked + .direction:hover:after {\n  text-decoration: overline;\n}\n.direction:hover:after,\nselect:hover {\n  text-decoration: underline;\n  /* border: 1px solid var(--primary);\n  border-radius: 0.2rem; */\n}\n.slider:before {\n  position: absolute;\n  content: '';\n  height: 1.5rem;\n  width: 1px;\n  right: 0.05in;\n  top: 0;\n  background-color: var(--primary);\n  -webkit-transition: 0.2s;\n  transition: 0.2s;\n}\ninput:checked + .slider:before {\n  -webkit-transform: translateX(-24mm);\n  -ms-transform: translateX(-24mm);\n  transform: translateX(-24mm);\n}\n.slider:after {\n  content: 'inches';\n  color: var(--primary);\n  display: block;\n  position: absolute;\n  top: -0.5rem;\n  left: 1rem;\n  font-weight: 100;\n  font-size: var(--medium);\n  /* transform: translate(-50%, 0%); */\n}\n.units[data-lang*='fr']:after {\n  content: 'pouces';\n}\ninput:checked + .units:after {\n  content: 'mm';\n}\n\n.direction,\n.type {\n  border: none;\n}\n.direction:before,\n.type:before {\n  opacity: 0;\n}\n.direction:after {\n  content: 'Top';\n  text-decoration: overline;\n}\n.direction[data-lang*='fr']:after {\n  content: 'Haut';\n}\ninput:checked + .direction:after {\n  content: 'Bottom';\n  text-decoration: underline;\n}\ninput:checked + .direction[data-lang*='fr']:after {\n  content: 'Bas';\n}\n.type:after {\n  content: 'Row';\n}\n.type[data-lang*='fr']:after {\n  content: 'Row';\n}\ninput:checked + .type:after {\n  content: 'Column';\n}\ninput:checked + .type[data-lang*='fr']:after {\n  content: 'Column';\n}\ninput[type='checkbox']:focus + .slider:after,\n.switch:hover {\n  font-weight: 800;\n  color: var(--third);\n}\nselect {\n  padding-left: 1rem;\n  width: 10rem;\n  font-weight: 100;\n  /* font-family: Overpass; */\n  color: var(--primary);\n  background-color: var(--primary-bg);\n  outline: none;\n  border: 1px solid transparent;\n  border-radius: 0.2rem;\n}\n\nselect:hover {\n  cursor: pointer;\n}\nselect:focus,\n.slider:focus {\n  font-weight: 800;\n  color: var(--third);\n  background-color: var(--primary-bg);\n  border: 1px solid var(--primary);\n  border-radius: 0.2rem;\n}\n</style>\n\n<!-- <div class=\"closepane\"></div> -->\n<div class=\"settings\" class:active=\"{$settings.show}\">\n  <div class=\"close\">X</div>\n  <div class=\"title\">\n    <h2 data-lang=\"{$settings.language}\" data-fr=\"Parametre\">\n      <span> Settings</span>\n    </h2>\n  </div>\n  <div class=\"general\">\n    <!-- <h2 data-lang=\"{$settings.language}\" data-fr=\"Genéral\"><span> General</span></h2> -->\n\n    <div class=\"input-wrapper\">\n      <h3 data-lang=\"{$settings.language}\" data-fr=\"Nest apartir de: \">\n        <span>Nest from: </span>\n      </h3>\n      <label class=\"switch\"><input\n          type=\"checkbox\"\n          bind:checked=\"{$settings.nestDirectionBottom}\" />\n        <div\n          class=\"slider direction\"\n          data-lang=\"{$settings.language}\"></div></label>\n    </div>\n    <div class=\"input-wrapper\">\n      <h3 data-lang=\"{$settings.language}\" data-fr=\"Nest avec: \">\n        <span>Nest with: </span>\n      </h3>\n      <label class=\"switch\"><input\n          type=\"checkbox\"\n          bind:checked=\"{$settings.nestTypeColumn}\" />\n        <div class=\"slider type\" data-lang=\"{$settings.language}\"></div></label>\n    </div>\n    <div class=\"input-wrapper\">\n      <h3 data-lang=\"{$settings.language}\" data-fr=\"Nest par le: \">\n        <span>Nest by: </span>\n      </h3>\n      <select bind:value=\"{$settings.nestOrder}\">\n        <option\n          data-lang=\"{$settings.language}\"\n          data-fr=\"plus large\"\n          value=\"widest\">\n          <span>widest</span>\n        </option>\n        <!-- <option data-lang=\"{$settings.language}\" data-fr=\"moins large\" value=\"narrowest\">\n          <span>narrowest</span>\n        </option> -->\n        <option\n          data-lang=\"{$settings.language}\"\n          data-fr=\"plus haut\"\n          value=\"tallest\">\n          <span>tallest</span>\n        </option>\n        <!-- <option data-lang=\"{$settings.language}\" data-fr=\"moins haut\" value=\"shortest\">\n          <span>shortest</span>\n        </option> -->\n        <option\n          data-lang=\"{$settings.language}\"\n          data-fr=\"plus grand\"\n          value=\"biggest\">\n          <span>biggest</span>\n        </option>\n        <!-- <option data-lang=\"{$settings.language}\" data-fr=\"moins grand\" value=\"smallest\">\n          <span>smallest</span>\n        </option> -->\n      </select>\n    </div>\n    <div class=\"input-wrapper\">\n      <h3 data-lang=\"{$settings.language}\" data-fr=\"Info sur les feuilles: \">\n        <span>Sheet info: </span>\n      </h3>\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"Largeur: \">\n        <span>Width: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.material.width}\"\n          step=\"0.0625\" />\n      </h5>\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"Hauteur: \">\n        <span>Height: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.material.height}\"\n          step=\"0.0625\" />\n      </h5>\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"Épaisseur: \">\n        <span>Thickness: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.material.thickness}\"\n          step=\"0.005\" />\n      </h5>\n    </div>\n    <div class=\"input-wrapper\">\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"Profondeur coupe:: \">\n        <span>Cut depth: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.material.cut_depth}\"\n          step=\"0.05\" />\n      </h5>\n    </div>\n    <div class=\"input-wrapper\">\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"Marge: \">\n        <span>Margins: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.material.margins}\"\n          step=\"0.05\" />\n      </h5>\n    </div>\n  </div>\n\n  <div class=\"cnc\">\n    <!-- <h2 data-lang=\"{$settings.language}\" data-fr=\"CNC\"><span> CNC</span></h2> -->\n    <div class=\"input-wrapper\">\n      <h3 data-lang=\"{$settings.language}\" data-fr=\"Outil pour la decoupe: \">\n        <span>Profile cutting tool: </span>\n      </h3>\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"Outil #: \">\n        <span>Tool #: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.tool}\"\n          step=\"1\" />\n      </h5>\n    </div>\n    <div class=\"input-wrapper\">\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"Nom: \">\n        <span>Name: </span>\n        <input\n          class=\"input\"\n          type=\"text\"\n          bind:value=\"{$settings.cnc[$settings.tool].name}\" />\n      </h5>\n    </div>\n    <div class=\"input-wrapper\">\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"Diametre: \">\n        <span>Diameter: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.cnc[$settings.tool].diameter}\"\n          step=\"0.03125\" />\n      </h5>\n    </div>\n    <div class=\"input-wrapper\">\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"Diametre: \">\n        <span>Spindle speed: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.cnc[$settings.tool].spindle}\"\n          step=\"10\" />\n        <span> RPM</span>\n      </h5>\n    </div>\n    <div class=\"input-wrapper\">\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"vitesse de coupe: \">\n        <span>Feed rate: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.cnc[$settings.tool].feed}\"\n          step=\"10\" />\n        <span> in/min</span>\n      </h5>\n    </div>\n    <div class=\"input-wrapper\">\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"vitesse de plonge: \">\n        <span>Plunge rate: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.cnc[$settings.tool].plunge}\"\n          step=\"10\" />\n        <span> in/min</span>\n      </h5>\n    </div>\n    <div class=\"input-wrapper\">\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"Longeur de plonge: \">\n        <span>Plunge ramp: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.cnc[$settings.tool].ramp}\"\n          step=\"10\" />\n        <span> in</span>\n      </h5>\n    </div>\n    <div class=\"input-wrapper\">\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"Max profondeur/passe: \">\n        <span>Max depth/pass: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.cnc[$settings.tool].max_depth}\"\n          step=\"10\" />\n        <span> in</span>\n      </h5>\n    </div>\n  </div>\n</div>\n","/////////////////TO DO//////////////////////////////////\n// refactoring ugly code\n\nlet NEST_ORDER = 'widest'\n\nexport function Nest(panelCSV, settings) {\n  NEST_ORDER = settings.nestOrder\n  let ERRORS = [],\n    IS_FROM_BOTTOM = settings.nestDirectionBottom,\n    IS_BY_COLUMNS = settings.nestTypeColumn,\n    CUTTER = settings.cnc[settings.tool].diameter || 0.375,\n    MATERIAL = {\n      width: settings.material.width || 49,\n      height: settings.material.height || 97,\n      margins: settings.material.margins || 0.25,\n      max_width: () => MATERIAL.width - MATERIAL.margins * 2 - CUTTER,\n      max_height: () => MATERIAL.height - MATERIAL.margins * 2 - CUTTER,\n    },\n    PANELS = panelObjectMap(panelCSV), // raw csv panel input converted\n    SHEETS = makeSheets(PANELS)\n\n  return { sheets: SHEETS, errors: ERRORS }\n\n  ////// helper functions below ///////////////\n\n  function panelObjectMap(csv) {\n    return new List(\n      csv.flatMap((i) => panelTranslator(i).map((i) => new Panel(i)))\n    ).flat()\n\n    function panelTranslator([id, quantity, width, height]) {\n      return removeErrors()\n\n      function removeErrors() {\n        if (width > MATERIAL.max_width() || height > MATERIAL.max_height()) {\n          ERRORS.push(`Panneau ${id} est trop gros`)\n          // ERRORS.push(`Panel ${id} is too big`)\n          return []\n        } else if (!width || !height || !quantity) return []\n        return separatePanels()\n      }\n      function separatePanels(n = 0, panelOutput = []) {\n        width += CUTTER\n        height += CUTTER\n        while (quantity > n++) {\n          let qID = ''\n          if (quantity > 1) qID = `${n} sur ${quantity}`\n          // if ( quantity > 1 ) q = `${n} of ${quantity}`\n          panelOutput.push([qID, id, width, height, NEST_ORDER])\n          // n++\n        }\n        return panelOutput\n      }\n    }\n  }\n\n  function fillRow(panels) {\n    let row = new List(panels.placementBy().place())\n    let maxHeight = row[0].height\n    // add columns of panels to row until\n    // no space remains or no more panels\n    while (panels.fitsRow(row, MATERIAL.max_width())) {\n      let column = new List(panels.fitsRow(row, MATERIAL.max_width()).place())\n      // add more panels to column if space remains\n      while (panels.fitsColumn(column, maxHeight)) {\n        column.push(panels.fitsColumn(column, maxHeight).place())\n      }\n      // return nested array only if\n      // more than one panel in column\n      if (column.length === 1) row.push(column[0])\n      else row.push(column)\n    }\n    return row.ascendingHeight()\n  }\n  function makeRows(panels) {\n    let rows = new List()\n    while (panels.notPlaced().length > 0) {\n      let row = fillRow(panels)\n      rows.push(\n        new Row(\n          row.rowWidth(), //width\n          row.rowHeight(), // height\n          row.totalArea(), // area\n          row,\n          NEST_ORDER // group\n        )\n      )\n    }\n    return rows\n  }\n\n  function fillColumn(panels) {\n    let column = new List(panels.placementBy().place())\n    let maxWidth = column[0].width\n    // add rows of panels to column until\n    // no space remains or no more panels\n    while (panels.fitsColumn(column, MATERIAL.max_height())) {\n      let row = new List(\n        panels.fitsColumn(column, MATERIAL.max_height()).place()\n      )\n      // add more panels to row if space remains\n      while (panels.fitsRow(row, maxWidth)) {\n        row.push(panels.fitsRow(row, maxWidth).place())\n      }\n      // return nested array only if\n      // more than one panel in row\n      if (row.length === 1) column.push(row[0])\n      else column.push(row)\n    }\n    // smallest pieces to center of column\n    // return column.shuffle()\n    return column.ascendingWidth()\n  }\n\n  function makeColumns(panels) {\n    let columns = new List()\n    while (panels.notPlaced().length > 0) {\n      let column = fillColumn(panels)\n      columns.push(\n        new Column(\n          column.columnWidth(), //width\n          column.columnHeight(), // height\n          column.totalArea(), // area\n          column,\n          NEST_ORDER // group\n        )\n      )\n    }\n    return columns\n  }\n\n  function fillSheetColumns(columns) {\n    let sheet = new List(columns.placementBy().place())\n    while (columns.fitsSheetColumn(sheet, MATERIAL.max_width())) {\n      sheet.push(columns.fitsSheetColumn(sheet, MATERIAL.max_width()).place())\n    }\n    return sheet.ascendingHeight()\n  }\n\n  function fillSheetRows(rows) {\n    let sheet = new List(rows.placementBy().place())\n    while (rows.fitsSheetRow(sheet, MATERIAL.max_height())) {\n      sheet.push(rows.fitsSheetRow(sheet, MATERIAL.max_height()).place())\n    }\n    return sheet.ascendingWidth()\n  }\n\n  function makeSheets(panels) {\n    let sheets = new List()\n    if (IS_BY_COLUMNS) {\n      let columns = makeColumns(panels)\n      while (columns.notPlaced().length > 0) {\n        let sheet = fillSheetColumns(columns)\n        addCoordinatesColumn(sheet)\n        sheets.push(\n          new Sheet(\n            sheet.rowWidth(), // width\n            sheet.rowHeight(), // height\n            sheet.totalArea(), // area\n            sheet.map((list) => list.group).flatten(2), // group\n            sheet, // columns\n            sheets.length + 1, // id\n            MATERIAL\n          )\n        )\n      }\n    } else {\n      let rows = makeRows(panels)\n      while (rows.notPlaced().length > 0) {\n        let sheet = fillSheetRows(rows)\n        addCoordinatesRow(sheet)\n        sheets.push(\n          new Sheet(\n            sheet.columnWidth(), // width\n            sheet.columnHeight(), // height\n            sheet.totalArea(), // area\n            sheet.map((list) => list.group).flatten(2), // group\n            sheet, // columns\n            sheets.length + 1, // id\n            MATERIAL\n          )\n        )\n      }\n    }\n    return sheets\n  }\n\n  function addCoordinatesRow(rows) {\n    let margin = MATERIAL.margins - CUTTER / 2\n\n    let yPos = new List()\n    rows.forEach((row, i) => {\n      // xPos map of columns, first index === start\n      if (i === 0) {\n        yPos.push(\n          IS_FROM_BOTTOM ? margin : MATERIAL.height - margin - row.height\n        )\n      }\n      // everything after calculated += prev. width\n      else {\n        yPos.push(\n          IS_FROM_BOTTOM\n            ? yPos.last() + rows[i - 1].height\n            : yPos.last() - row.height\n        )\n      }\n      // iterate each row in column\n      let xPos = new List()\n      row.group.forEach((column, j, columns) => {\n        // yPos map of rows, first index === start\n        xPos.push(\n          firstIndex(j) ? margin : xPos.last() + columns[j - 1].columnWidth()\n        )\n        // add x and y prop to each row in column\n        // not good clean code -- needs refactoring\n        let isFirstRow = firstIndex(i) && rows.length > 1\n        if (column instanceof Panel) {\n          // set x pos\n          column.y = isFirstRow // true? align right otherwise align left\n            ? yPos[i] + rows[i].height - column.height\n            : yPos[i]\n          // set y pos\n          column.x = xPos[j]\n        } else {\n          column.forEach((rowCol, k) => {\n            // set x pos\n            rowCol.y = firstIndex(k)\n              ? isFirstRow // true? align right otherwise align left\n                ? yPos[i] + rows[i].height - rowCol.height\n                : yPos[i]\n              : isFirstRow // true? align right otherwise align left\n              ? column[k - 1].y - rowCol.height\n              : column[k - 1].y + column[k - 1].height\n            // set y pos\n            rowCol.x =\n              // firstIndex(k)\n              // ? xPos[j] + row.rowWidth() - rowCol.width\n              // :\n              xPos[j]\n            // IS_FROM_BOTTOM ?\n          })\n        }\n      })\n    })\n  }\n\n  function addCoordinatesColumn(columns) {\n    let margin = MATERIAL.margins - CUTTER / 2\n\n    let xPos = new List()\n    columns.forEach((column, i) => {\n      // xPos map of columns, first index === start\n      if (i === 0) {\n        xPos.push(margin)\n      }\n      // everything after calculated += prev. width\n      else {\n        xPos.push(xPos.last() + columns[i - 1].width)\n      }\n      // iterate each row in column\n      let yPos = new List()\n      column.group.forEach((row, j, rows) => {\n        // yPos map of rows, first index === start\n        yPos.push(\n          firstIndex(j)\n            ? IS_FROM_BOTTOM\n              ? margin\n              : MATERIAL.height - margin - row.rowHeight()\n            : IS_FROM_BOTTOM\n            ? yPos.last() + rows[j - 1].rowHeight()\n            : yPos.last() - row.rowHeight()\n        )\n        // add x and y prop to each row in column\n        // not good clean code -- needs refactoring\n        let isFirstColumn = firstIndex(i) && columns.length > 1\n        if (row instanceof Panel) {\n          // set x pos\n          row.x = isFirstColumn // true? align right otherwise align left\n            ? xPos[i] + columns[i].width - row.width\n            : xPos[i]\n          // set y pos\n          row.y = yPos[j]\n        } else {\n          row.forEach((rowCol, k) => {\n            // set x pos\n            rowCol.x = firstIndex(k)\n              ? isFirstColumn // true? align right otherwise align left\n                ? xPos[i] + columns[i].width - rowCol.width\n                : xPos[i]\n              : isFirstColumn // true? align right otherwise align left\n              ? row[k - 1].x - rowCol.width\n              : row[k - 1].x + row[k - 1].width\n            // set y pos\n            rowCol.y = IS_FROM_BOTTOM ? yPos[j] : yPos[j - 1] - rowCol.height\n          })\n        }\n      })\n    })\n  }\n\n  function firstIndex(index) {\n    return index === 0\n  }\n}\n\nclass Placement {\n  constructor(nestOrder) {\n    this.placed = false\n    this.nestOrder = nestOrder\n  }\n  place() {\n    this.placed = true\n    return this\n  }\n}\nclass Panel extends Placement {\n  constructor([quantityID, id, width, height, nestOrder]) {\n    super(nestOrder)\n    this.nestOrder = nestOrder\n    this.quantityID = quantityID\n    this.id = id\n    this.width = width\n    this.height = height\n    this.area = this.height * this.width\n    this.x = 0\n    this.y = 0\n  }\n\n  columnWidth() {\n    return this.width\n  }\n  rowHeight() {\n    return this.height\n  }\n}\nclass Column extends Placement {\n  constructor(width, height, area, group, nestOrder) {\n    super(nestOrder)\n    this.width = width\n    this.height = height\n    this.area = area\n    this.group = group\n  }\n}\nclass Row extends Column {\n  constructor(width, height, area, group, nestOrder) {\n    super(width, height, area, group, nestOrder)\n  }\n}\nclass Sheet extends Column {\n  constructor(width, height, area, group, columns, id, sheet) {\n    super(width, height, area, group)\n    this.columns = columns\n    this.sheet_width = sheet.width\n    this.sheet_height = sheet.height\n    this.sheet_area = sheet.width * sheet.height\n    this.waste_area = this.sheet_area - this.area\n    this.waste_ratio = 1 - this.area / this.sheet_area\n    this.id = 'Feuille ' + id\n    // this.id = \"Sheet \" + id\n    delete this.placed\n  }\n}\nclass List extends Array {\n  //  methods for arrays of Panel or group objects\n  // extending array methods\n  first() {\n    return this[0]\n  }\n  last() {\n    return this[this.length - 1]\n  }\n  flatten(dimensions = 1) {\n    let flattened = this\n    while (dimensions--) {\n      flattened = flattened.flat()\n    }\n    return flattened\n  }\n  // sorting methods\n  ascendingWidth() {\n    return new List(...this).sort((a, b) =>\n      b.width != a.width ? b.width - a.width : b.height - a.height\n    )\n  }\n  ascendingHeight() {\n    return new List(...this).sort((a, b) =>\n      b.height != a.height ? b.height - a.height : b.width - a.width\n    )\n  }\n  // methods to find unplaced panels\n  notPlaced() {\n    return this.filter((panel) => !panel.placed)\n  }\n  widest() {\n    return this.notPlaced().ascendingWidth().first()\n  }\n  narrowest() {\n    return this.notPlaced().ascendingWidth().last()\n  }\n  tallest() {\n    return this.notPlaced().ascendingHeight().first()\n  }\n  shortest() {\n    return this.notPlaced().ascendingHeight().last()\n  }\n  biggest() {\n    return this.sort((a, b) => b.area - a.area)\n      .notPlaced()\n      .first()\n  }\n  smallest() {\n    return this.sort((a, b) => a.area - b.area)\n      .notPlaced()\n      .first()\n  }\n  placementBy() {\n    return {\n      widest: this.widest(),\n      tallest: this.tallest(),\n      biggest: this.biggest(),\n    }[this.length ? this[0].nestOrder : '']\n  }\n  // group measurement methods\n  totalWidth() {\n    return this.reduce((total, panel) => {\n      if (panel instanceof List) {\n        return total + panel.ascendingWidth().first().width\n      }\n      return total + panel.width\n    }, 0)\n  }\n  totalHeight() {\n    return this.reduce((total, panel) => {\n      if (panel instanceof List) {\n        return total + panel.ascendingHeight().first().height\n      }\n      return total + panel.height\n    }, 0)\n  }\n  totalArea() {\n    return this.flatten(3).reduce((total, panel) => total + panel.area, 0)\n  }\n  columnWidth() {\n    return this.flat().ascendingWidth().first().width\n  }\n  columnHeight() {\n    return this.totalHeight()\n  }\n  rowWidth() {\n    return this.totalWidth()\n  }\n  rowHeight() {\n    return this.flat().ascendingHeight().first().height\n  }\n  remainingWidth(maxWidth) {\n    return maxWidth - this.totalWidth()\n  }\n  remainingHeight(maxHeight) {\n    return maxHeight - this.totalHeight()\n  }\n  fitsColumn(group, maxHeight) {\n    return this.filter((panel) => panel.width <= group[0].width).fitsSheetRow(\n      group,\n      maxHeight\n    )\n  }\n  fitsRow(group, maxWidth) {\n    return this.filter(\n      (panel) => panel.height <= group[0].height\n    ).fitsSheetColumn(group, maxWidth)\n  }\n  fitsSheetColumn(group, maxWidth) {\n    return this.notPlaced()\n      .filter((panel) => panel.width < group.remainingWidth(maxWidth))\n      .placementBy()\n  }\n  fitsSheetRow(group, maxHeight) {\n    return this.notPlaced()\n      .filter((panel) => panel.height < group.remainingHeight(maxHeight))\n      .placementBy()\n  }\n}\n","///////////////////////////////////////////////////////\n// TO DO\n//////////////////////////////////////////////////////\n\nimport { formatDate, cleanFloat } from './methods.js'\n\nexport function Gcode(data, settings) {\n  // let Z_HOME = 0\n  const SHEETS = data.sheets,\n    TOOL_NUMBER = settings.tool,\n    SPINDLE_SPEED = settings.cnc[TOOL_NUMBER].spindle,\n    FEED_RATE = settings.cnc[TOOL_NUMBER].feed,\n    PLUNGE_RATE = settings.cnc[TOOL_NUMBER].plunge,\n    PLUNGE_DISTANCE = settings.cnc[TOOL_NUMBER].ramp,\n    X_HOME = settings.material.width / 2 || 30.0,\n    Y_HOME = Math.min(settings.material.height + 10, 122),\n    SAFE_HEIGHT = settings.material.thickness + 0.25 || 2,\n    MATERIAL_HEIGHT = settings.material.thickness,\n    CUT_TO_DEPTH = 0,\n    PRECUT_DEPTH = CUT_TO_DEPTH + 0.02,\n    IS_FRENCH = settings.language.includes('fr')\n\n  let output = [...HEADER(TOOL_NUMBER, SPINDLE_SPEED)]\n  SHEETS.forEach((sheet) => {\n    output.push(`( ${sheet.id} )`)\n    sheet.columns.forEach((column, index) => {\n      column.group\n        .flat()\n        .sort((a, b) =>\n          settings.nestTypeColumn\n            ? columnSort(a, b, index)\n            : rowSort(a, b, index)\n        )\n        .forEach((panel) => output.push(profileCut(panel)))\n    })\n    output.push(SHEET_CHANGE())\n  })\n\n  output.pop() // get rid of last sheet change\n  output.push(FOOTER())\n  return output\n    .flat()\n    .flat()\n    .filter((i) => i !== '')\n    .join('\\n')\n\n  ///////////////////////////////////\n  //    methods to write g-code\n  //////////////////////////////////\n\n  function profileCut(panel) {\n    const x = cleanFloat(panel.x),\n      y = cleanFloat(panel.y),\n      x_ = cleanFloat(x + panel.width),\n      y_ = cleanFloat(y + panel.height),\n      yStart = cleanFloat(y_ - PLUNGE_DISTANCE),\n      // yEnd = cleanFloat(yStart + ),\n      small = panel.width < 5 || panel.height < 5\n\n    let smallPass = [\n      PLUNGE_MOVE(x, y_, PRECUT_DEPTH, PLUNGE_RATE),\n      FEED(FEED_RATE),\n      MOVE_X(x_),\n      MOVE_Y(y),\n      MOVE_X(x),\n      MOVE_Y(yStart),\n      // MOVE_Y(yStart),\n    ]\n\n    return [\n      `( ${IS_FRENCH ? 'coupe panneau' : 'cutting panel'} ${panel.id} )`,\n      panel.uniqueID ? `( ${panel.uniqueID} )` : '',\n      RAPID_MOVE(x, yStart, SAFE_HEIGHT),\n      MOVE_Z(MATERIAL_HEIGHT + 0.02),\n      small ? smallPass : '',\n      PLUNGE_MOVE(x, y_, CUT_TO_DEPTH, PLUNGE_RATE),\n      FEED(FEED_RATE),\n      MOVE_X(x_),\n      MOVE_Y(y),\n      MOVE_X(x),\n      MOVE_Y(y_),\n      RETRACT_MOVE(SAFE_HEIGHT),\n      `( ${IS_FRENCH ? 'fin panneau' : 'finished panel'} ${panel.id} )`,\n    ]\n  }\n\n  function HEADER(tool, speed) {\n    let [, , , material, , info] = data.csv.contents[0]\n    return [\n      `( ${formatDate(new Date(), 'dd.mm.yyyy HH:MM')} )`,\n      `( ${data.name} )`,\n      info ? `( ${info} )` : '',\n      material\n        ? `( ${SHEETS.length} ${\n            IS_FRENCH ? 'feuilles de' : 'sheets of'\n          } ${material} )`\n        : `( ${SHEETS.length} IS_FRENCH ? 'feuilles a couper' : 'sheets to cut' )`,\n      `G40 G80 G70`,\n      // `G91 G28 Z0`,\n      `M06 T${tool}`,\n      `G43 H${tool}`,\n      `S${speed} M03`,\n      `G54 G90`,\n    ]\n  }\n  function TOOL_CHANGE(tool, speed) {\n    return [\n      `M05`,\n      // `G91 G28 Z0`,\n      `T${tool}`,\n      `G00 G90 G54 S${speed} M03`,\n      `G43 H${tool}`,\n    ]\n  }\n  function SHEET_CHANGE() {\n    return [\n      `M05 M104`,\n      `G90 X${addPoint(X_HOME)} Y${addPoint(Y_HOME)}`,\n      `M00`,\n      // `( Load next sheet and )`,\n      `( changez la feuille et )`,\n      `( cycle start :)`,\n      `M103 M03`,\n    ]\n  }\n  function FOOTER() {\n    return [\n      `G40 G80 G91 G28 Z0 M5`,\n      `G00 G90 X${addPoint(X_HOME)} Y${addPoint(Y_HOME)}`,\n      `M30`,\n    ]\n  }\n  function RAPID_MOVE(x, y, z) {\n    return `G00 X${addPoint(x)} Y${addPoint(y)} Z${addPoint(z)}`\n  }\n  function RETRACT_MOVE(z) {\n    return `G00 Z${addPoint(z)}`\n  }\n  function PLUNGE_MOVE(x, y, z, f) {\n    return `G01 X${addPoint(x)} Y${addPoint(y)} Z${addPoint(z)} F${f}`\n  }\n  function FEED(f) {\n    return `G01 F${f}`\n  }\n  function FEED_MOVE(x, y, z, f) {\n    return `G01 X${addPoint(x)} Y${addPoint(y)} Z${addPoint(z)} F${f}`\n  }\n  function MOVE(x, y, z) {\n    return `X${addPoint(x)} Y${addPoint(y)} Z${addPoint(z)}`\n  }\n  function MOVE_X(x) {\n    return `X${addPoint(x)}`\n  }\n  function MOVE_Y(y) {\n    return `Y${addPoint(y)}`\n  }\n  function MOVE_Z(z) {\n    return `Z${addPoint(z)}`\n  }\n}\n\n// helper functions\n\nfunction addPoint(num) {\n  if (/\\./.test(num) || num === 0) return num\n  return num.toFixed(1)\n}\nfunction columnSort(a, b, i) {\n  return i % 2 === 0\n    ? b.y !== a.y\n      ? b.y - a.y\n      : a.x - b.x\n    : a.y !== b.y\n    ? a.y - b.y\n    : b.x - a.x\n}\nfunction rowSort(a, b, i) {\n  return i % 2 === 0\n    ? a.x !== b.x\n      ? a.x - b.x\n      : a.y - b.y\n    : b.x !== a.x\n    ? b.x - a.x\n    : b.y - a.y\n}\n","<script>\nimport Import from './components/Import.svelte'\nimport Editor from './components/Editor.svelte'\nimport Viewer from './components/Viewer.svelte'\nimport Settings from './components/Settings.svelte'\nimport { Nest } from './nest.js'\nimport { Gcode } from './gCode.js'\nimport { settings, data } from './stores.js'\nimport { toInches } from './methods.js'\n\nfunction update() {\n  $data.name = $data.csv.contents[0][1]\n  $data.csv.panels = $data.csv.contents.slice($data.csv.headerRows)\n  $data.csv.output = $data.csv.contents.join('\\n')\n  $data.cnc = Gcode($data, $settings)\n  calculateNest()\n}\n\nfunction calculateNest() {\n  let nest = Nest(panelsDimensionsInches(), $settings)\n  $data.sheets = nest.sheets\n  $data.errors = nest.errors\n\n  function panelsDimensionsInches() {\n    if ($settings.units)\n      return $data.csv.panels.map((i) => [\n        i[0],\n        i[1],\n        toInches(i[2]),\n        toInches(i[3]),\n      ])\n    return $data.csv.panels\n  }\n}\nupdate()\n</script>\n\n<style>\n.container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: grid;\n  grid-template-columns: minmax(24rem, 20vw) 1fr;\n  overflow: hidden;\n}\n\n.import {\n  position: relative;\n  margin: 0 1.5vw;\n  display: grid;\n  grid-template-rows: minmax(6rem, 10vh) 1fr;\n}\n\n.splash {\n  position: absolute;\n  top: 10vh;\n  left: 45vw;\n  width: 40vw;\n  height: 40vh;\n  z-index: -1;\n}\n.splash-img {\n  position: relative;\n  left: 20%;\n  width: 40%;\n  height: 100%;\n  background-image: url('../favicon.ico');\n  background-size: contain;\n  background-position: left bottom;\n  background-repeat: no-repeat;\n  z-index: -1;\n}\nh1,\nh5 {\n  color: var(--second);\n  position: relative;\n  left: 20%;\n}\n</style>\n\n<svelte:body on:change=\"{update}\" />\n<div class=\"container\">\n  <div class=\"import\">\n    <Import on:update=\"{update}\" />\n    <Editor on:update=\"{update}\" />\n    <Settings />\n  </div>\n  <div class=\"main\" on:click=\"{() => ($settings.show = false)}\">\n    <Viewer />\n    {#if !$data.sheets.length}\n      <div class=\"splash\">\n        <div class=\"splash-img\"></div>\n        <h1><span>Holy! Nest:</span></h1>\n        <h5><span>save a sheet or two</span></h5>\n      </div>\n    {/if}\n  </div>\n</div>\n","import App from './App.svelte'\n\nconst app = new App({\n  target: document.body,\n})\n\nexport default app\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","null_to_empty","value","set_store_value","ret","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","undefined","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","select_option","select","option","__value","selected","toggle_class","toggle","classList","current_component","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","skip_bound","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","defaultSettings","version1","language","navigator","userLanguage","material","width","height","thickness","margins","cut_depth","nestTypeColumn","nestOrder","nestDirectionBottom","units","tool","cnc","1","diameter","spindle","feed","plunge","ramp","max_depth","pass_depth","step_over","2","3","4","5","6","7","8","9","10","11","12","show","activePanel","csvTemplate","en","fr","defaultData","sheets","errors","csv","new","contents","panels","headerRows","output","svg","settings","initial","str","JSON","stringify","localStorage","getItem","setItem","localKey","parse","obj1","obj2","join","localStore","sessionStorage","sessionStore","toFloat","isNaN","includes","split","item","reduce","total","frac","cleanFloat","trunc","number","places","Math","round","parseFloat","num","toMM","toInches","formatDate","date","format","leadingZero","digits","mm","getMonth","dd","getDate","yy","getFullYear","toString","yyyy","HH","getHours","MM","getMinutes","SS","getSeconds","T","h","replace","matched","encodeURIComponent","dispatch","today","Date","dlCSV","dlSVG","dlCNC","project","open","badFile","updatePanels","$settings","$data","newFile","firstChild","focus","code","setTimeout","file","click","files","reader","FileReader","readAsText","onload","strData","strDelimiter","regexPattern","RegExp","arrData","arrMatches","exec","strMatchedDelimiter","strMatchedValue","test","inner","CSVToArray","result","setup","highlight","sortAscending","sort","sortDescending","metric","findMax","directionStr","max","row","convert","line","id","area","waste_area","waste_ratio","x","y","min","group","sheet_width","sheet_height","w","svgFile","displayInfo","top","left","innerHTML","rect","getBoundingClientRect","bottom","right","rows","ceil","columns","selected_option","querySelector","NEST_ORDER","Nest","panelCSV","ERRORS","IS_FROM_BOTTOM","IS_BY_COLUMNS","CUTTER","MATERIAL","max_width","max_height","List","notPlaced","column","fillColumn","Column","columnWidth","columnHeight","totalArea","makeColumns","sheet","fillSheetColumns","addCoordinatesColumn","Sheet","rowWidth","rowHeight","list","flatten","fillRow","Row","makeRows","fillSheetRows","addCoordinatesRow","makeSheets","flatMap","quantity","removeErrors","separatePanels","n","panelOutput","qID","panelTranslator","Panel","flat","placementBy","place","maxHeight","fitsRow","fitsColumn","ascendingHeight","maxWidth","ascendingWidth","fitsSheetColumn","fitsSheetRow","margin","yPos","last","xPos","j","firstIndex","isFirstRow","rowCol","k","isFirstColumn","Placement","placed","quantityID","super","sheet_area","dimensions","flattened","panel","first","widest","tallest","biggest","totalHeight","totalWidth","remainingWidth","remainingHeight","Gcode","SHEETS","TOOL_NUMBER","SPINDLE_SPEED","FEED_RATE","PLUNGE_RATE","PLUNGE_DISTANCE","X_HOME","Y_HOME","SAFE_HEIGHT","MATERIAL_HEIGHT","IS_FRENCH","speed","info","HEADER","columnSort","rowSort","x_","y_","yStart","small","smallPass","PLUNGE_MOVE","CUT_TO_DEPTH","FEED","MOVE_X","MOVE_Y","uniqueID","RAPID_MOVE","MOVE_Z","RETRACT_MOVE","profileCut","addPoint","z","f","toFixed","nest","panelsDimensionsInches","calculateNest","body"],"mappings":"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"}