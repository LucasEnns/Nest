{"version":3,"file":"app.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/nest.js","../../src/methods.js","../../src/gCode.js","../../node_modules/svelte/store/index.mjs","../../src/localStore.js","../../src/sessionStore.js","../../src/stores.js","../../node_modules/file-saver/dist/FileSaver.min.js","../../src/components/Import.svelte","../../src/csv.js","../../src/components/CSV.svelte","../../src/components/Viewer.svelte","../../src/components/Settings.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/////////////////TO DO//////////////////////////////////\n// refactoring ugly code\n// dry constants\n\n/////////////////IDEAS//////////////////////////////////\n// simple gui to accept or reject nested sheets\n// potentially flag sheets with low score\n// click sheet shuffle columns\n\n// new technique-- class panel widths by +- %\n// if none next is +- 1/2 of width\n\n// idea 2\n// start width columns of all the similar widths\n// that join columns\n\n// import { toDECIMAL } from \"./methods\"\n\nlet NEST_ORDER = 'widest',\n  IS_FROM_BOTTOM = true,\n  IS_BY_COLUMNS = true,\n  CUTTER = 0.375, // end mill diameter used to space panels\n  ERRORS = [], // catch all panels that don't fit\n  MATERIAL = {\n    // sheet size and options\n    width: 49,\n    height: 97,\n    margins: 0.25,\n    max_width: () => MATERIAL.width - MATERIAL.margins * 2 - CUTTER,\n    max_height: () => MATERIAL.height - MATERIAL.margins * 2 - CUTTER,\n  }\n\nexport function Nest(\n  panels,\n  firstPanelRow = 1,\n  nestType = IS_BY_COLUMNS,\n  nestOrder = NEST_ORDER,\n  nestDirection = IS_FROM_BOTTOM,\n  cutter = CUTTER,\n  material = MATERIAL\n) {\n  function panelArrayCreator() {\n    // console.log(CSVToArray( panels ));\n    return new List(\n      panels.slice(firstPanelRow).flatMap((i) => {\n        return quantityIDs(i).map((i) => new Panel(i))\n      })\n    ).flat()\n  }\n\n  function quantityIDs([id, quantity, width, height]) {\n    if (width > MATERIAL.max_width() || height > MATERIAL.max_height()) {\n      ERRORS.push(`Panneau ${id} est trop gros`)\n      // ERRORS.push(`Panel ${id} is too big`)\n      return []\n    } else if (!width || !height || !quantity) return []\n    let n = 1,\n      uniqueIDs = []\n    while (quantity >= n) {\n      let q = ''\n      if (quantity > 1) q = `${n} sur ${quantity}`\n      // if ( quantity > 1 ) q = `${n} of ${quantity}`\n      uniqueIDs.push([q, id, parseFloat(width), parseFloat(height)])\n      n++\n    }\n    return uniqueIDs\n  }\n\n  ERRORS = []\n  const PANELS = panelArrayCreator() // raw csv panel input converted\n  // const METRIC_UNITS = metricUnits  // default false\n  NEST_ORDER = nestOrder\n  IS_FROM_BOTTOM = nestDirection\n  IS_BY_COLUMNS = nestType\n  CUTTER = cutter\n  MATERIAL.width = material.width\n  MATERIAL.height = material.height\n  MATERIAL.margins = material.margins\n\n  function fillRow(panels) {\n    let row = new List(panels.placementBy().place())\n    let maxHeight = row[0].height\n    // add columns of panels to row until\n    // no space remains or no more panels\n    while (panels.fitsRow(row)) {\n      let column = new List(panels.fitsRow(row).place())\n      // add more panels to column if space remains\n      while (panels.fitsColumn(column, maxHeight)) {\n        column.push(panels.fitsColumn(column, maxHeight).place())\n      }\n      // return nested array only if\n      // more than one panel in column\n      if (column.length === 1) row.push(column[0])\n      else row.push(column)\n    }\n    return row.ascendingHeight()\n  }\n  function makeRows(panels) {\n    let rows = new List()\n    while (panels.notPlaced().length > 0) {\n      let row = fillRow(panels)\n      rows.push(\n        new Row(\n          row.rowWidth(), //width\n          row.rowHeight(), // height\n          row.totalArea(), // area\n          row // group\n        )\n      )\n    }\n    return rows\n  }\n\n  function fillColumn(panels) {\n    let column = new List(panels.placementBy().place())\n    let maxWidth = column[0].width\n    // add rows of panels to column until\n    // no space remains or no more panels\n    while (panels.fitsColumn(column)) {\n      let row = new List(panels.fitsColumn(column).place())\n      // add more panels to row if space remains\n      while (panels.fitsRow(row, maxWidth)) {\n        row.push(panels.fitsRow(row, maxWidth).place())\n      }\n      // return nested array only if\n      // more than one panel in row\n      if (row.length === 1) column.push(row[0])\n      else column.push(row)\n    }\n    // smallest pieces to center of column\n    // return column.shuffle()\n    return column.ascendingWidth()\n  }\n\n  function makeColumns(panels) {\n    let columns = new List()\n    while (panels.notPlaced().length > 0) {\n      let column = fillColumn(panels)\n      columns.push(\n        new Column(\n          column.columnWidth(), //width\n          column.columnHeight(), // height\n          column.totalArea(), // area\n          column // group\n        )\n      )\n    }\n    return columns\n  }\n\n  function fillSheetColumns(columns) {\n    let sheet = new List(columns.placementBy().place())\n    while (columns.fitsSheetColumn(sheet)) {\n      sheet.push(columns.fitsSheetColumn(sheet).place())\n    }\n    return sheet.ascendingHeight()\n  }\n\n  function fillSheetRows(rows) {\n    let sheet = new List(rows.placementBy().place())\n    while (rows.fitsSheetRow(sheet)) {\n      sheet.push(rows.fitsSheetRow(sheet).place())\n    }\n    return sheet.ascendingWidth()\n  }\n\n  function makeSheets(panels) {\n    let sheets = new List()\n    if (IS_BY_COLUMNS) {\n      let columns = makeColumns(panels)\n      while (columns.notPlaced().length > 0) {\n        let sheet = fillSheetColumns(columns)\n        addCoordinatesColumn(sheet)\n        sheets.push(\n          new Sheet(\n            sheet.rowWidth(), // width\n            sheet.rowHeight(), // height\n            sheet.totalArea(), // area\n            sheet.map((list) => list.group).flatten(2), // group\n            sheet, // columns\n            sheets.length + 1 // id\n          )\n        )\n      }\n    } else {\n      let rows = makeRows(panels)\n      while (rows.notPlaced().length > 0) {\n        let sheet = fillSheetRows(rows)\n        addCoordinatesRow(sheet)\n        sheets.push(\n          new Sheet(\n            sheet.columnWidth(), // width\n            sheet.columnHeight(), // height\n            sheet.totalArea(), // area\n            sheet.map((list) => list.group).flatten(2), // group\n            sheet, // columns\n            sheets.length + 1 // id\n          )\n        )\n      }\n    }\n    return sheets\n  }\n\n  function addCoordinatesRow(rows) {\n    let margin = MATERIAL.margins - CUTTER / 2\n\n    let yPos = new List()\n    rows.forEach((row, i) => {\n      // xPos map of columns, first index === start\n      if (i === 0) {\n        yPos.push(\n          IS_FROM_BOTTOM ? margin : MATERIAL.height - margin - row.height\n        )\n      }\n      // everything after calculated += prev. width\n      else {\n        yPos.push(\n          IS_FROM_BOTTOM\n            ? yPos.last() + rows[i - 1].height\n            : yPos.last() - row.height\n        )\n      }\n      // iterate each row in column\n      let xPos = new List()\n      row.group.forEach((column, j, columns) => {\n        // yPos map of rows, first index === start\n        xPos.push(\n          firstIndex(j) ? margin : xPos.last() + columns[j - 1].columnWidth()\n        )\n        // add x and y prop to each row in column\n        // not good clean code -- needs refactoring\n        let isFirstRow = firstIndex(i) && rows.length > 1\n        if (column instanceof Panel) {\n          // set x pos\n          column.y = isFirstRow // true? align right otherwise align left\n            ? yPos[i] + rows[i].height - column.height\n            : yPos[i]\n          // set y pos\n          column.x = xPos[j]\n        } else {\n          column.forEach((rowCol, k) => {\n            // set x pos\n            rowCol.y = firstIndex(k)\n              ? isFirstRow // true? align right otherwise align left\n                ? yPos[i] + rows[i].height - rowCol.height\n                : yPos[i]\n              : isFirstRow // true? align right otherwise align left\n              ? column[k - 1].y - rowCol.height\n              : column[k - 1].y + column[k - 1].height\n            // set y pos\n            rowCol.x =\n              // firstIndex(k)\n              // ? xPos[j] + row.rowWidth() - rowCol.width\n              // :\n              xPos[j]\n            // IS_FROM_BOTTOM ?\n          })\n        }\n      })\n    })\n  }\n\n  function addCoordinatesColumn(columns) {\n    let margin = MATERIAL.margins - CUTTER / 2\n\n    let xPos = new List()\n    columns.forEach((column, i) => {\n      // xPos map of columns, first index === start\n      if (i === 0) {\n        xPos.push(margin)\n      }\n      // everything after calculated += prev. width\n      else {\n        xPos.push(xPos.last() + columns[i - 1].width)\n      }\n      // iterate each row in column\n      let yPos = new List()\n      column.group.forEach((row, j, rows) => {\n        // yPos map of rows, first index === start\n        yPos.push(\n          firstIndex(j)\n            ? IS_FROM_BOTTOM\n              ? margin\n              : MATERIAL.height - margin - row.rowHeight()\n            : IS_FROM_BOTTOM\n            ? yPos.last() + rows[j - 1].rowHeight()\n            : yPos.last() - row.rowHeight()\n        )\n        // add x and y prop to each row in column\n        // not good clean code -- needs refactoring\n        let isFirstColumn = firstIndex(i) && columns.length > 1\n        if (row instanceof Panel) {\n          // set x pos\n          row.x = isFirstColumn // true? align right otherwise align left\n            ? xPos[i] + columns[i].width - row.width\n            : xPos[i]\n          // set y pos\n          row.y = yPos[j]\n        } else {\n          row.forEach((rowCol, k) => {\n            // set x pos\n            rowCol.x = firstIndex(k)\n              ? isFirstColumn // true? align right otherwise align left\n                ? xPos[i] + columns[i].width - rowCol.width\n                : xPos[i]\n              : isFirstColumn // true? align right otherwise align left\n              ? row[k - 1].x - rowCol.width\n              : row[k - 1].x + row[k - 1].width\n            // set y pos\n            rowCol.y = IS_FROM_BOTTOM ? yPos[j] : yPos[j - 1] - rowCol.height\n          })\n        }\n      })\n    })\n  }\n\n  let sheets = makeSheets(PANELS)\n  return [PANELS, sheets, ERRORS]\n}\n\nfunction firstIndex(index) {\n  return index === 0\n}\n\nclass Placement {\n  constructor() {\n    this.placed = false\n  }\n  place() {\n    this.placed = true\n    return this\n  }\n}\nclass Panel extends Placement {\n  constructor([uniqueID, id, width, height]) {\n    super()\n    this.uniqueID = uniqueID\n    this.id = id\n    this.width = width + CUTTER\n    this.height = height + CUTTER\n    this.area = this.height * this.width\n    this.x = 0\n    this.y = 0\n  }\n\n  columnWidth() {\n    return this.width\n  }\n  rowHeight() {\n    return this.height\n  }\n}\nclass Column extends Placement {\n  constructor(width, height, area, group) {\n    super()\n    this.width = width\n    this.height = height\n    this.area = area\n    this.group = group\n  }\n}\nclass Row extends Column {\n  constructor(width, height, area, group) {\n    super(width, height, area, group)\n  }\n}\nclass Sheet extends Column {\n  constructor(width, height, area, group, columns, id) {\n    super(width, height, area, group)\n    this.columns = columns\n    this.sheet_width = MATERIAL.width\n    this.sheet_height = MATERIAL.height\n    this.sheet_area = MATERIAL.width * MATERIAL.height\n    this.waste_area = this.sheet_area - this.area\n    this.waste_ratio = 1 - this.area / this.sheet_area\n    this.id = 'Feuille ' + id\n    // this.id = \"Sheet \" + id\n    delete this.placed\n  }\n}\nclass List extends Array {\n  //  methods for arrays of Panel or group objects\n  // extending array methods\n  first() {\n    return this[0]\n  }\n  last() {\n    return this[this.length - 1]\n  }\n  flatten(dimensions = 1) {\n    let flattened = this\n    while (dimensions--) {\n      flattened = flattened.flat()\n      // dimensions--\n    }\n    return flattened\n  }\n  // removeIndex( index ) {\n  //     let list = [...this]\n  //     this = [...list.slice(0, index), ...list.slice(index + 1)]\n  // }\n  // removeValue( value ) {\n  //     this.removeIndex( array.indexOf( value ) )\n  // }\n  shuffle() {\n    if (this.length < 3) return this\n    return new List(...this.slice(1), this.first())\n  }\n  // sorting methods\n  ascendingWidth() {\n    return new List(...this).sort((a, b) =>\n      b.width != a.width ? b.width - a.width : b.height - a.height\n    )\n  }\n  ascendingHeight() {\n    return new List(...this).sort((a, b) =>\n      b.height != a.height ? b.height - a.height : b.width - a.width\n    )\n  }\n  // methods to find unplaced panels\n  notPlaced() {\n    return this.filter((panel) => !panel.placed)\n  }\n  widest() {\n    return this.notPlaced().ascendingWidth().first()\n  }\n  narrowest() {\n    return this.notPlaced().ascendingWidth().last()\n  }\n  tallest() {\n    return this.notPlaced().ascendingHeight().first()\n  }\n  shortest() {\n    return this.notPlaced().ascendingHeight().last()\n  }\n  biggest() {\n    return this.sort((a, b) => b.area - a.area)\n      .notPlaced()\n      .first()\n  }\n  smallest() {\n    return this.sort((a, b) => a.area - b.area)\n      .notPlaced()\n      .first()\n  }\n  // placementBy = { \"widest\": widest(), \"tallest\": tallest() }\n  placementBy() {\n    switch (NEST_ORDER) {\n      case 'widest':\n        return this.widest()\n      case 'narrowest':\n        return this.narrowest()\n      case 'tallest':\n        return this.tallest()\n      case 'shortest':\n        return this.shortest()\n      case 'biggest':\n        return this.biggest()\n      case 'smallest':\n        return this.smallest()\n      default:\n        break\n    }\n  }\n  // group measurement methods\n  totalWidth() {\n    return this.reduce((total, panel) => {\n      if (panel instanceof List) {\n        return total + panel.ascendingWidth().first().width\n      }\n      return total + panel.width\n    }, 0)\n  }\n  totalHeight() {\n    return this.reduce((total, panel) => {\n      if (panel instanceof List) {\n        return total + panel.ascendingHeight().first().height\n      }\n      return total + panel.height\n    }, 0)\n  }\n  totalArea() {\n    return this.flatten(3).reduce((total, panel) => total + panel.area, 0)\n  }\n  columnWidth() {\n    return this.flat().ascendingWidth().first().width\n  }\n  columnHeight() {\n    return this.totalHeight()\n  }\n  rowWidth() {\n    return this.totalWidth()\n  }\n  rowHeight() {\n    return this.flat().ascendingHeight().first().height\n  }\n  remainingWidth(maxWidth) {\n    return maxWidth - this.totalWidth()\n  }\n  remainingHeight(maxHeight) {\n    return maxHeight - this.totalHeight()\n  }\n  fitsColumn(group, maxHeight) {\n    return this.filter((panel) => panel.width <= group[0].width).fitsSheetRow(\n      group,\n      maxHeight\n    )\n  }\n  fitsRow(group, maxWidth) {\n    return this.filter(\n      (panel) => panel.height <= group[0].height\n    ).fitsSheetColumn(group, maxWidth)\n  }\n  fitsSheetColumn(group, maxWidth = MATERIAL.max_width()) {\n    return this.notPlaced()\n      .filter((panel) => panel.width < group.remainingWidth(maxWidth))\n      .placementBy()\n  }\n  fitsSheetRow(group, maxHeight = MATERIAL.max_height()) {\n    return this.notPlaced()\n      .filter((panel) => panel.height < group.remainingHeight(maxHeight))\n      .placementBy()\n  }\n}\n","export function toFloat(str) {\n  const float4 = (str) => parseFloat(parseFloat(str).toFixed(4))\n  if (!isNaN(str)) return float4(str) // if number return float\n  if (str.includes('/') && !str.includes('.')) {\n    return str\n      .split(' ') // covert rational string into array\n      .filter((item) => item !== '') // removes multiple spaces\n      .reduce((total, item) => {\n        // get array total of whole # + fraction\n        if (item.includes('/')) {\n          let frac = item.split('/').filter((item) => item !== '')\n          return total + float4(frac[0] / frac[1])\n        }\n        return total + float4(item)\n      }, 0)\n  }\n  return str\n}\n\nexport function hasNumber(str) {\n  return /\\d/.test(str)\n}\nexport function isNumber(str) {\n  return /(\\.|\\/)\\d/.test(str)\n}\nexport function trunc(number, places) {\n  return Math.round(number * 10 ** places) / 10 ** places\n}\n\nconst removeFromArray = (array, itemValue) => {\n  let index = array.indexOf(itemValue)\n  return [...array.slice(0, index), ...array.slice(index + 1)]\n}\n\nexport function formatDate(date, format) {\n  const map = {\n    mm: ('0' + (date.getMonth() + 1)).slice(-2),\n    dd: ('0' + date.getDate()).slice(-2),\n    yy: date.getFullYear().toString().slice(-2),\n    yyyy: date.getFullYear(),\n    H: date.getHours(),\n    M: date.getMinutes(),\n    S: date.getSeconds(),\n  }\n\n  return format.replace(/mm|dd|yyyy|yy|H|M|S/gi, (matched) => map[matched])\n}\n","///////////////////////////////////////////////////////\n// TO DO\n//////////////////////////////////////////////////////\n// add support for tool library\n// conversion from metric\n\nimport { formatDate, trunc } from './methods.js'\n\nexport function Gcode(sheets, settings, fileName) {\n  // let Z_xHOME = 0\n  const TOOL_NUMBER = settings.tool,\n    SPINDLE_SPEED = settings.cnc[TOOL_NUMBER].spindle,\n    FEED_RATE = settings.cnc[TOOL_NUMBER].feed,\n    PLUNGE_RATE = settings.cnc[TOOL_NUMBER].plunge,\n    PLUNGE_DISTANCE = settings.cnc[TOOL_NUMBER].ramp,\n    X_HOME = settings.material.width / 2 || 30.0,\n    Y_HOME = Math.min(settings.material.height + 10, 122),\n    SAFE_HEIGHT = settings.material.thickness + 0.25 || 2,\n    MATERIAL_HEIGHT = settings.material.thickness,\n    CUT_TO_DEPTH = 0,\n    PRECUT_DEPTH = CUT_TO_DEPTH + 0.02,\n    IS_FRENCH = settings.language.includes('fr')\n\n  let output = [...HEADER(TOOL_NUMBER, SPINDLE_SPEED, fileName, sheets.length)]\n  sheets.forEach((sheet) => {\n    output.push(`( ${sheet.id} )`)\n    sheet.columns.forEach((column, index) => {\n      column.group\n        .flat()\n        .sort((a, b) =>\n          settings.nestTypeColumn\n            ? columnSort(a, b, index)\n            : rowSort(a, b, index)\n        )\n        .forEach((panel) => output.push(profileCut(panel, settings)))\n    })\n    output.push(SHEET_CHANGE(X_HOME, Y_HOME))\n  })\n\n  output.pop() // get rid of last sheet change\n  output.push(FOOTER())\n  return output.flat().join('\\n')\n\n  ///////////////////////////////////\n  //    methods to write g-code\n  //////////////////////////////////\n\n  function profileCut(panel, settings) {\n    const x = cleanFloat(panel.x),\n      y = cleanFloat(panel.y),\n      x_ = cleanFloat(x + panel.width),\n      y_ = cleanFloat(y + panel.height),\n      yStart = cleanFloat(y + panel.height / 5),\n      yEnd = cleanFloat(yStart + PLUNGE_DISTANCE),\n      small = panel.width < 5 || panel.height < 5\n\n    let smallPass = [\n      PLUNGE_MOVE(x, yEnd, PRECUT_DEPTH, PLUNGE_RATE),\n      FEED_MOVE(x, y_, PRECUT_DEPTH, FEED_RATE),\n      MOVE_X(x_),\n      MOVE_Y(y),\n      MOVE_X(x),\n      MOVE_Y(yStart),\n    ]\n\n    return [\n      `( ${IS_FRENCH ? 'coupe panneau' : 'cutting panel'} ${panel.id} )`,\n      panel.uniqueID ? `( ${panel.uniqueID} )` : '',\n      RAPID_MOVE(x, yStart, SAFE_HEIGHT),\n      MOVE_Z(MATERIAL_HEIGHT + 0.02),\n      small ? smallPass : '',\n      PLUNGE_MOVE(x, yEnd, CUT_TO_DEPTH, PLUNGE_RATE),\n      FEED_MOVE(x, y_, CUT_TO_DEPTH, FEED_RATE),\n      MOVE_X(x_),\n      MOVE_Y(y),\n      MOVE_X(x),\n      MOVE_Y(yEnd),\n      RETRACT_MOVE(SAFE_HEIGHT),\n      `( ${IS_FRENCH ? 'fin panneau' : 'finished panel'} ${panel.id} )`,\n    ]\n      .flat()\n      .filter((i) => i !== '')\n  }\n\n  function HEADER(tool, speed, fileName, sheets) {\n    return [\n      `( ${fileName} )`,\n      // `( ${sheets} sheets to cut )`,\n      `( ${sheets} feuilles a couper )`,\n      `( ${formatDate(new Date(), 'dd.mm.yyyy H:M')} )`,\n      `G40 G80 G70`,\n      // `G91 G28 Z0`,\n      `M06 T${tool}`,\n      `G43 H${tool}`,\n      `S${speed} M03`,\n      `G54 G90`,\n    ]\n  }\n  function TOOL_CHANGE(tool, speed) {\n    return [\n      `M05`,\n      // `G91 G28 Z0`,\n      `T${tool}`,\n      `G00 G90 G54 S${speed} M03`,\n      `G43 H${tool}`,\n    ]\n  }\n  function SHEET_CHANGE(x, y) {\n    return [\n      `M05 M104`,\n      `G90 X${addPoint(x)} Y${addPoint(y)}`,\n      `M00`,\n      // `( Load next sheet and )`,\n      `( changez la feuille et )`,\n      `( cycle start :)`,\n      `M103 M03`,\n    ]\n  }\n  function FOOTER() {\n    return [\n      `G40 G80 G91 G28 Z0 M5`,\n      `G00 G90 X${addPoint(X_HOME)} Y${addPoint(Y_HOME)}`,\n      `M30`,\n    ]\n  }\n  function RAPID_MOVE(x, y, z) {\n    return `G00 X${addPoint(x)} Y${addPoint(y)} Z${addPoint(z)}`\n  }\n  function RETRACT_MOVE(z) {\n    return `G00 Z${addPoint(z)}`\n  }\n  function PLUNGE_MOVE(x, y, z, f) {\n    return `G01 X${addPoint(x)} Y${addPoint(y)} Z${addPoint(z)} F${f}`\n  }\n  function FEED_MOVE(x, y, z, f) {\n    return `G01 X${addPoint(x)} Y${addPoint(y)} Z${addPoint(z)} F${f}`\n  }\n  function MOVE(x, y, z) {\n    return `X${addPoint(x)} Y${addPoint(y)} Z${addPoint(z)}`\n  }\n  function MOVE_X(x) {\n    return `X${addPoint(x)}`\n  }\n  function MOVE_Y(y) {\n    return `Y${addPoint(y)}`\n  }\n  function MOVE_Z(z) {\n    return `Z${addPoint(z)}`\n  }\n}\n\n// helper functions\nfunction cleanFloat(num) {\n  return trunc(num, 5)\n}\nfunction addPoint(num) {\n  if (/\\./.test(num) || num === 0) return num\n  return num.toFixed(1)\n}\nfunction columnSort(a, b, i) {\n  return i % 2 === 0\n    ? b.y !== a.y\n      ? b.y - a.y\n      : a.x - b.x\n    : a.y !== b.y\n    ? a.y - b.y\n    : b.x - a.x\n}\nfunction rowSort(a, b, i) {\n  return i % 2 === 0\n    ? a.x !== b.x\n      ? a.x - b.x\n      : a.y - b.y\n    : b.x !== a.x\n    ? b.x - a.x\n    : b.y - a.y\n}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store'\n// import YAML from 'yaml';\n\nexport const localStore = (key, initial) => {\n  // receives the key of the local storage and an initial value\n\n  // helper function\n  const toString = (value) => JSON.stringify(value, null, 2)\n  // helper function\n  const toObj = JSON.parse\n\n  // item not present in local storage\n  if (localStorage.getItem(key) === null) {\n    // initialize local storage with initial value\n    localStorage.setItem(key, toString(initial))\n  }\n\n  // convert to object\n  const saved = toObj(localStorage.getItem(key))\n\n  // create the underlying writable store\n  const { subscribe, set, update } = writable(saved)\n\n  return {\n    subscribe,\n    set: (value) => {\n      // save also to local storage as a string\n      localStorage.setItem(key, toString(value))\n      return set(value)\n    },\n    update,\n  }\n}\n","import { writable } from 'svelte/store'\n// import YAML from 'yaml';\n\nexport const sessionStore = (key, initial) => {\n  // receives the key of the local storage and an initial value\n\n  // helper function\n  const toString = (value) => JSON.stringify(value, null, 2)\n  // helper function\n  const toObj = JSON.parse\n\n  // item not present in local storage\n  if (sessionStorage.getItem(key) === null) {\n    // initialize local storage with initial value\n    sessionStorage.setItem(key, toString(initial))\n  }\n\n  // convert to object\n  const saved = toObj(sessionStorage.getItem(key))\n\n  // create the underlying writable store\n  const { subscribe, set, update } = writable(saved)\n\n  return {\n    subscribe,\n    set: (value) => {\n      // save also to local storage as a string\n      sessionStorage.setItem(key, toString(value))\n      return set(value)\n    },\n    update,\n  }\n}\n","// stores.js\n// import { writable } from 'svelte/store'\n\n// tool library\n// missing pass max CUT_TO_DEPTH\n// missing angle\n\nimport { localStore } from './localStore.js'\nimport { sessionStore } from './sessionStore.js'\nimport { formatDate } from './methods.js'\n\nlet placementSettings = {\n  material: {\n    type: '',\n    colour: '',\n    width: 49,\n    height: 97,\n    thickness: 0.75,\n    margins: 0.3,\n  },\n  tool: 9,\n  nestTypeColumn: false,\n  nestOrder: 'widest',\n  nestDirectionBottom: true,\n  units: false,\n  show: true,\n  cnc: {\n    1: {\n      type: 'Endmill',\n      diameter: 0.1875,\n      spindle: 18000,\n      feed: 75,\n      plunge: 75,\n      ramp: 1,\n      max_depth: 0.125,\n    },\n    2: {\n      type: 'Endmill',\n      diameter: 0.75,\n      spindle: 18000,\n      feed: 150,\n      plunge: 40,\n      ramp: 3,\n      max_depth: 3,\n    },\n    3: {\n      type: 'Ballnose',\n      diameter: 0.125,\n      spindle: 18000,\n      feed: 150,\n      plunge: 40,\n      ramp: 1,\n      max_depth: 0.125,\n    },\n    4: {\n      type: 'Edger',\n      diameter: 0.75,\n      spindle: 18000,\n      feed: 100,\n      plunge: 40,\n      ramp: 2.25,\n      max_depth: 2.25,\n    },\n    5: {\n      type: 'drill',\n      diameter: 0.19685,\n      spindle: 18000,\n      feed: 0,\n      plunge: 70,\n      ramp: 0,\n      max_depth: 1,\n    },\n    6: {\n      type: 'Endmill',\n      diameter: 0.25,\n      spindle: 18000,\n      feed: 150,\n      plunge: 40,\n      ramp: 1,\n      max_depth: 0.125,\n    },\n    7: {\n      type: 'drill',\n      diameter: 0.31496,\n      spindle: 18000,\n      feed: 0,\n      plunge: 70,\n      ramp: 0,\n      max_depth: 1,\n    },\n    8: {\n      type: 'surfacing',\n      diameter: 2.5,\n      spindle: 10000,\n      feed: 75,\n      plunge: 30,\n      ramp: 8,\n      max_depth: 0.125,\n    },\n    9: {\n      type: 'Endmill',\n      diameter: 0.375,\n      spindle: 18000,\n      feed: 400,\n      plunge: 70,\n      ramp: 1,\n      max_depth: 0.875,\n    },\n    10: {\n      type: 'Endmill',\n      diameter: 0.375,\n      spindle: 18000,\n      feed: 400,\n      plunge: 70,\n      ramp: 1,\n      max_depth: 0.875,\n    },\n    11: {\n      type: 'drill',\n      diameter: 0.3937,\n      spindle: 18000,\n      feed: 0,\n      plunge: 70,\n      ramp: 0,\n      max_depth: 1,\n    },\n    12: {\n      type: 'Vcarve',\n      diameter: 1.5,\n      spindle: 18000,\n      feed: 75,\n      plunge: 40,\n      ramp: 1,\n      max_depth: 0.75,\n    },\n  },\n}\n// const fallback = [\n//   { sheet_width: 49, sheet_height: 97 }\n// ]\n\nexport const blancCSV = {\n  name: formatDate(new Date(), 'yymmdd-HM'),\n  // name: formatDate( new Date(), 'yymmdd-HM' ),\n  errors: [],\n  contents: [\n    ['Project name:', 'New'],\n    ['Border (+ or -)', 0],\n    ['Metric units', false],\n    [, , ,],\n    ['Panel', 'Q', 'W', 'H'],\n    [1, , ,],\n  ],\n}\n\n// export const cabinets = localStore('cabinets', [])\n\n// export const inputState = localStore('input-state', \"cabinet\")\n// export const cabinetType = localStore('cabinet-type', \"bathroom\")\n\nexport const settings = localStore('settings', placementSettings)\n// export const panels = sessionStore('panels', [])\nexport const sheets = sessionStore('sheets', [])\nexport const csvFile = sessionStore('csv-file', blancCSV)\nexport const svg = sessionStore('svg', '')\nexport const activePanel = sessionStore('activePanel', '')\n\n// export const inputTemplate = localStore('template', template)\n","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","<script>\n// TO DO\n//key bindings\n\nimport { Nest } from '../nest.js'\nimport { Gcode } from '../gCode.js'\nimport { settings, sheets, csvFile, blancCSV, svg } from '../stores.js'\nimport { saveAs } from 'file-saver'\nimport { formatDate } from '../methods.js'\nimport { CSVToArray } from '../csv.js'\nimport { beforeUpdate } from 'svelte'\n\nlet badFile = false,\n  file,\n  csv = $csvFile.contents.join('\\n')\n$: cnc = () => Gcode($sheets, $settings, $csvFile.name)\nconst csvHeaderRows = 5\n\nconst today = formatDate(new Date(), '-yy-mm-dd')\n\nfunction newFile() {\n  $csvFile = { ...blancCSV }\n}\n\nfunction loadFile() {\n  if (!file.files) return\n  if (file.files[0].name.includes('.csv')) {\n    let reader = new FileReader()\n    reader.readAsText(file.files[0])\n    reader.onload = function (event) {\n      $csvFile.contents = CSVToArray(event.target.result, csvHeaderRows) // csv file\n      badFile = false\n    }\n    $csvFile.name = $csvFile.contents[0][1]\n  } else {\n    badFile = true\n  }\n}\n\nlet dlCSV,\n  dlSVG,\n  dlCNC,\n  keys = {}\n\nfunction handleKeyDown(e) {\n  console.log(keys)\n  keys[e.code] = true\n  const key = (code) => (keys['AltLeft'] || keys['AltRight']) && keys[code]\n  if (key('KeyO')) setTimeout(() => file.click(), 140)\n  if (key('KeyN')) newFile()\n  if (key('KeyV')) dlCSV.click()\n  if (key('KeyG')) dlSVG.click()\n  if (key('KeyC')) dlCNC.click()\n  if (key('KeyS')) $settings.show = !$settings.show\n}\n\nfunction handleKeyUp(e) {\n  delete keys[e.code]\n}\n</script>\n\n<style>\n.file-mgmt {\n  /* padding-top: 1rem; */\n  display: flex;\n  vertical-align: center;\n  align-items: center;\n  text-align: center;\n  justify-content: space-between;\n}\n\n.file-icon {\n  position: relative;\n  height: 2em;\n  width: 1.7em;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n  cursor: pointer;\n  transition: 0.1s;\n}\n.file-icon:hover,\n.file-icon:focus,\n.setting-icon.active,\ninput:focus + .file-icon {\n  /* position: relative; */\n  height: 2.5em;\n  width: 2.3em;\n  transition: 0.1s;\n  outline: none;\n}\n.inputfile {\n  top: 0.5em;\n  width: 0.1px;\n  height: 0.1px;\n  opacity: 0;\n  overflow: hidden;\n  position: absolute;\n  z-index: -1;\n}\n.file-icon > span,\n.file-icon::after,\n.file-icon:before {\n  position: absolute;\n  left: 4.6rem;\n  top: 4.1rem;\n  white-space: nowrap;\n  transition: 0.1s;\n  outline: none;\n  background-color: var(--primary);\n  color: var(--primary-bg);\n  font-size: var(--small);\n  font-weight: 600;\n  padding: var(--xsmall);\n  border-radius: var(--xsmall);\n  opacity: 0;\n  z-index: 3;\n  pointer-events: none;\n}\n.file-icon:before {\n  /* transform: rotate(45deg); */\n  transform: skewX(30deg);\n  /* left: 4.4rem; */\n  /* bottom: 0rem; */\n  border-radius: 0;\n  width: 0.5rem;\n  height: 0.5rem;\n  content: '';\n}\n.file-icon:hover > span,\n.file-icon:hover::after,\n.file-icon:hover:before {\n  opacity: 1;\n  transition: 0.1s;\n  transition-delay: 0.7s;\n}\n\n.blocked {\n  cursor: default;\n}\n.blocked:hover::after,\n.blocked:hover::before {\n  opacity: 0;\n}\n.blocked:hover {\n  height: 2em;\n  width: 1.7em;\n}\n.badfile {\n  background-image: url('../img/upload-bad.png');\n}\n.upload {\n  background-image: url('../img/upload.png');\n}\n.upload:hover {\n  background-image: url('../img/upload-hover.png');\n}\n.new {\n  background-image: url('../img/new.png');\n}\n.new:hover {\n  background-image: url('../img/new-hover.png');\n}\n.dl-svg {\n  background-image: url('../img/dl-svg.png');\n}\n.dl-svg-block {\n  background-image: url('../img/dl-svg-block.png');\n}\n.dl-svg:hover {\n  background-image: url('../img/dl-svg-hover.png');\n}\n.dl-csv {\n  background-image: url('../img/dl-csv.png');\n}\n.dl-csv-block {\n  background-image: url('../img/dl-csv-block.png');\n}\n.dl-csv:hover {\n  background-image: url('../img/dl-csv-hover.png');\n}\n.dl-cnc {\n  background-image: url('../img/dl-cnc.png');\n}\n.dl-cnc-block {\n  background-image: url('../img/dl-cnc-block.png');\n}\n.dl-cnc:hover {\n  background-image: url('../img/dl-cnc-hover.png');\n}\n.setting-icon {\n  background-image: url('../img/settings.png');\n}\n.setting-icon:hover,\n.setting-icon.active {\n  background-image: url('../img/settings-hover.png');\n}\nh3 {\n  padding-bottom: 1rem;\n}\nh3 > input {\n  font-size: 1em;\n  width: 55%;\n  /* padding: 10; */\n  text-align: left;\n}\n</style>\n\n<svelte:head>\n  <title>{'Holy! Nest: ' + $csvFile.contents[0][1] || 'Holy! Nest'}</title>\n</svelte:head>\n<svelte:window on:keydown=\"{handleKeyDown}\" on:keyup=\"{handleKeyUp}\" />\n\n<div class=\"file-mgmt\">\n  <input\n    class=\"inputfile\"\n    name=\"file\"\n    id=\"file\"\n    type=\"file\"\n    on:change=\"{loadFile}\"\n    bind:this=\"{file}\" />\n  <label\n    for=\"file\"\n    data-lang=\"{$settings.language}\"\n    data-fr=\"ouvrir fichier .csv (alt + o)\"\n    class=\"file-icon {badFile ? 'badfile' : 'upload'}\"\n    on:mouseover=\"{() => (badFile = false)}\">\n    <span>open .csv file (alt + o)</span>\n  </label>\n  <div\n    tabindex=\"0\"\n    role=\"button\"\n    data-lang=\"{$settings.language}\"\n    data-fr=\"nouveau fichier (alt + n)\"\n    class=\"file-icon new\"\n    on:click=\"{newFile}\">\n    <span>new file (alt + n)</span>\n  </div>\n  {#if $sheets.length}\n    <a\n      href=\"data:text/plain;charset=utf-8,{encodeURIComponent(csv)}\"\n      download=\"{$csvFile.name + today}.csv\"\n      role=\"button\"\n      data-lang=\"{$settings.language}\"\n      data-fr=\"téléchargez le fichier .csv  (alt + v)\"\n      class=\"file-icon dl-csv\"\n      bind:this=\"{dlCSV}\">\n      <span>download .csv file (alt + v)</span>\n    </a>\n    <a\n      href=\"data:text/plain;charset=utf-8,{encodeURIComponent($svg)}\"\n      download=\"{$csvFile.name + today}.svg\"\n      alt=\"download svg file\"\n      role=\"button\"\n      data-lang=\"{$settings.language}\"\n      data-fr=\"telechargez le fichier .svg (alt + g)\"\n      class=\"file-icon dl-svg\"\n      bind:this=\"{dlSVG}\">\n      <span>download .svg file (alt + g)</span>\n    </a>\n    <a\n      href=\"data:text/plain;charset=utf-8,{encodeURIComponent(cnc())}\"\n      download=\"{$csvFile.name + today}.cnc\"\n      role=\"button\"\n      data-lang=\"{$settings.language}\"\n      data-fr=\"telechargez le fichier .cnc (alt + c)\"\n      class=\"file-icon dl-cnc\"\n      bind:this=\"{dlCNC}\">\n      <span>download .cnc file (alt + c)</span>\n    </a>\n  {:else}\n    <div class=\"file-icon dl-csv-block blocked\"></div>\n    <div class=\"file-icon dl-svg-block blocked\"></div>\n    <div class=\"file-icon dl-cnc-block blocked\"></div>\n  {/if}\n  <div\n    tabindex=\"0\"\n    role=\"button\"\n    data-lang=\"{$settings.language}\"\n    data-fr=\"cnc + projet parametre  (alt + s)\"\n    class=\"file-icon setting-icon\"\n    class:active=\"{$settings.show}\"\n    on:click=\"{() => ($settings.show = !$settings.show)}\">\n    <span>cnc + project settings (alt + s)</span>\n  </div>\n</div>\n<div class=\"project\">\n  <h3 data-lang=\"{$settings.language}\" data-fr=\"Projet\n    : \">\n    <span>Project: </span>\n    <input type=\"text\" bind:value=\"{$csvFile.contents[0][1]}\" />\n  </h3>\n</div>\n","import { hasNumber, toFloat } from './methods.js'\n\nexport function CSVToArray(strData, headerRows = 1, strDelimiter = ',') {\n  // Create a regular expression to parse the CSV values.\n  var regexPattern = new RegExp(\n    '(\\\\' +\n      strDelimiter +\n      '|\\\\r?\\\\n|\\\\r|^)' + // Delimiters.\n      '(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|' + // Quoted fields.\n      '([^\"\\\\' +\n      strDelimiter +\n      '\\\\r\\\\n]*))', // Standard fields.\n    'gi'\n  )\n\n  // Create an array of arrays to hold csv data.\n  var arrData = [[]]\n\n  // Create an array to hold our individual pattern\n  // matching groups.\n  var arrMatches = null\n\n  // Keep looping over the regular expression matches\n  // until we can no longer find a match.\n  while ((arrMatches = regexPattern.exec(strData))) {\n    // Get the delimiter that was found.\n    var strMatchedDelimiter = arrMatches[1]\n\n    // Check to see if the given delimiter has a length\n    // (is not the start of string) and if it matches\n    // field delimiter. If id does not, then we know\n    // that this delimiter is a row delimiter.\n    if (strMatchedDelimiter.length && strMatchedDelimiter != strDelimiter) {\n      // Since we have reached a new row of data,\n      // add an empty row to our data array.\n      arrData.push([])\n    }\n\n    // Now that we have our delimiter out of the way,\n    // let's check to see which kind of value we\n    // captured (quoted or unquoted).\n    if (arrMatches[2]) {\n      // We found a quoted value. When we capture\n      // this value, unescape any double quotes.\n      var strMatchedValue = arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n    } else {\n      // We found a non-quoted value.\n      var strMatchedValue = arrMatches[3]\n    }\n\n    if (hasNumber(strMatchedValue)) {\n      strMatchedValue = toFloat(strMatchedValue)\n    }\n\n    // Now that we have our value string, let's add\n    // it to the data array.\n    arrData[arrData.length - 1].push(strMatchedValue)\n  }\n\n  // Return the parsed data.\n  return arrData.filter((item, index) => {\n    // keep all header rows\n    if (index < headerRows) return true\n    // removes blanc rows thereafter\n    return item.filter((inner) => inner !== '').length\n  })\n}\n","<script>\nimport { sheets, csvFile, settings, activePanel } from '../stores.js'\nimport { trunc } from '../methods.js'\n\nconst csvHeaderRows = 5\n$: lines = $csvFile.contents.slice(csvHeaderRows)\n\nfunction highlight() {\n  this.select()\n}\n\nfunction addRow() {\n  let row = [lines.length + 1, , ,]\n  $csvFile.contents = [...$csvFile.contents, row]\n}\n\nfunction sortAscending(index) {\n  //add support for alpha numberic\n  lines = lines.sort((a, b) => a[index] - b[index])\n}\nfunction sortDescending(index) {\n  lines = lines.sort((a, b) => b[index] - a[index])\n}\n</script>\n\n<style>\n.wrapper {\n  display: flex;\n  flex-direction: column;\n  height: 90vh;\n  /* justify-content: space-evenly; */\n  overflow-y: scroll;\n  /* margin-right: 1vw; */\n}\n\nul {\n  font-size: var(--med);\n  display: grid;\n  grid-template-columns: 3fr 2fr 4fr 4fr;\n  border-bottom: 1px solid;\n}\n.new-row {\n  color: var(--blue);\n  font-size: var(--xxlarge);\n  cursor: pointer;\n  text-align: center;\n}\n.active {\n  background-color: var(--second-bg);\n}\nli {\n  line-height: var(--xxlarge);\n  text-align: center;\n  cursor: pointer;\n}\nli:hover {\n  text-decoration: overline;\n}\n\ninput {\n  width: 100%;\n  height: 100%;\n  border-radius: 0;\n}\ninput:hover {\n  color: var(--primary-bg);\n  background-color: var(--second);\n}\n/* .title {\n  column-span: 3;\n} */\n\ndiv {\n  font-size: 0.8em;\n  /* vertical-align: bottom; */\n}\n</style>\n\n<div class=\"wrapper\">\n  <div>\n    {#if $csvFile.name}\n      {#if $csvFile.errors.length}\n        <h5>ERROR{$csvFile.errors.length > 1 ? 'S' : ''}:</h5>\n        {#each $csvFile.errors as error}\n          <p>{error}</p>\n        {/each}\n      {/if}\n\n      <!-- <ul>\n        <li>PROJECT:</li>\n        <li></li>\n        <li>\n          <input\n            class=\"title\"\n            type=\"text\"\n            bind:value=\"{$csvFile.contents[0][1]}\" />\n        </li>\n      </ul> -->\n\n      <ul>\n        <li on:click=\"{() => sortAscending(0)}\">Panel</li>\n        <li on:click=\"{() => sortDescending(1)}\">Q</li>\n        <li on:click=\"{() => sortDescending(2)}\">W</li>\n        <li on:click=\"{() => sortDescending(3)}\">H</li>\n      </ul>\n      {#each lines as line}\n        <ul\n          class=\"{$activePanel == line[0] ? 'active' : ''}\"\n          on:mouseenter=\"{() => ($activePanel = line[0])}\"\n          on:mouseleave=\"{() => ($activePanel = '')}\">\n          <li>\n            <input type=\"text\" bind:value=\"{line[0]}\" on:focus=\"{highlight}\" />\n          </li>\n          <li>\n            <input\n              type=\"number\"\n              min=\"0\"\n              max=\"100\"\n              bind:value=\"{line[1]}\"\n              on:focus=\"{highlight}\" />\n          </li>\n          <li>\n            <input\n              type=\"number\"\n              min=\"0\"\n              max=\"{$settings.material.width - $settings.material.margins * 2}\"\n              bind:value=\"{line[2]}\"\n              on:focus=\"{highlight}\"\n              step=\"0.03125\" />\n          </li>\n          <li>\n            <input\n              type=\"number\"\n              min=\"0\"\n              max=\"{$settings.material.height - $settings.material.margins * 2}\"\n              bind:value=\"{line[3]}\"\n              on:focus=\"{highlight}\"\n              step=\"0.03125\" />\n          </li>\n        </ul>\n      {/each}\n    {/if}\n    <ul class=\"new-row\" on:click=\"{addRow}\">+</ul>\n  </div>\n</div>\n","<script>\n// to do :\n//units to mm scale setting\n\nimport { sheets, settings, svg, activePanel } from '../stores.js'\n// import { afterUpdate } from 'svelte'\nimport { trunc } from '../methods.js'\n\nlet id,\n  displayInfo = false,\n  top = 0,\n  left = 0,\n  scale = 90, // inches to pixels\n  svgFile\n\nfunction panelHoverOn() {\n  $activePanel = this.id\n}\nfunction panelHoverOff() {\n  $activePanel = ''\n}\n\nfunction showInfo() {\n  displayInfo = true\n  let rect = this.getBoundingClientRect()\n  top = (rect.bottom - rect.top) / 2 + rect.top\n  left = (rect.right - rect.left) / 2 + rect.left\n  id = this.id\n}\nfunction hideInfo() {\n  displayInfo = false\n}\n\nfunction flipY(y, height) {\n  // return y\n  return $settings.material.height - height - y\n}\n\nfunction shift(index) {\n  let maxColumns = 5,\n    rows = Math.ceil($sheets.length / maxColumns),\n    columns = Math.ceil($sheets.length / rows),\n    row = Math.ceil((index + 1) / columns) - 1,\n    column = index % columns,\n    x = column * $settings.material.width,\n    y = row * $settings.material.height,\n    w = columns * $settings.material.width,\n    h = rows * $settings.material.height\n  return { x, y, w, h }\n}\n</script>\n\n<style>\n.viewer {\n  height: 100vh;\n  padding: 2vh 2vw;\n}\n.infocard {\n  position: fixed;\n  padding: 1rem;\n  background-color: var(--primary);\n  border: 1px solid var(--primary-bg);\n  border-radius: 4px;\n  font-weight: 100;\n  line-height: 1.5em;\n  color: var(--primary-bg);\n  font-size: 1.3rem;\n  z-index: 2;\n  transform: translate(-50%, -50%);\n  pointer-events: none;\n}\nsup {\n  font-size: 0.5em;\n  line-height: 1.5em;\n}\nsvg {\n  height: 100%;\n  width: 100%;\n  margin: auto auto;\n  overflow: hidden;\n}\n\n.panel {\n  stroke: var(--second);\n  fill: var(--primary-bg);\n  transition: 0.2s;\n}\n\n.active {\n  fill: var(--second);\n  stroke: var(--primary);\n  transition: 0.2s;\n}\n.sheet {\n  stroke: var(--primary);\n  fill: var(--primary-bg);\n  /* fill-opacity: 0; */\n  transition: 0.2s;\n}\n\n.sheet:hover {\n  fill: var(--primary);\n  fill-opacity: 1;\n  transition: 0.2s;\n}\n\n.id {\n  text-anchor: middle;\n  fill: var(--second);\n  stroke: none;\n  font-weight: 300;\n  pointer-events: none;\n  cursor: default;\n}\n.id.active {\n  fill: var(--primary-bg);\n}\n</style>\n\n{#if displayInfo}\n  <div class=\"infocard\" style=\"left: {left}px; top: {top}px;\">\n    <h4>{$sheets[id].id}</h4>\n    <p>area des panneaux: {trunc($sheets[id].area / 144, 2)} pi<sup>2</sup></p>\n    <p>\n      area de perte:\n      {trunc($sheets[id].waste_area / 144, 2)}\n      pi<sup>2</sup>\n    </p>\n    <p>% de perte: {trunc($sheets[id].waste_ratio * 100, 2)}%</p>\n    <!-- <p>used area: {trunc( $sheets[id].area / 144, 2)} pi<sup>2</sup></p>\n    <p>waste area: {trunc($sheets[id].waste_area / 144, 2)} pi<sup>2</sup></p>\n    <p>waste: {trunc($sheets[id].waste_ratio * 100, 2)}%</p> -->\n  </div>\n{/if}\n\n<div class=\"viewer\" bind:this=\"{svgFile}\">\n  <svg\n    class=\"print\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    width=\"{shift($sheets.length - 1).w * scale || 0}\"\n    height=\"{shift($sheets.length - 1).h * scale || 0}\"\n    viewBox=\"0 0 {shift($sheets.length - 1).w * scale || 0} {shift($sheets.length - 1).h * scale || 0}\"\n    preserveAspectRatio=\"xMidYMid meet\">\n    {#each $sheets as sheet, index}\n      <g id=\"sheets\">\n        <rect\n          style=\"stroke-width: {$settings.material.margins * scale}px;\"\n          on:mouseover=\"{showInfo}\"\n          on:mouseleave=\"{hideInfo}\"\n          class=\"sheet print\"\n          id=\"{index}\"\n          x=\"{(shift(index).x + $settings.material.margins / 2) * scale}\"\n          y=\"{(shift(index).y + $settings.material.margins / 2) * scale}\"\n          width=\"{(sheet.sheet_width - $settings.material.margins) * scale}\"\n          height=\"{(sheet.sheet_height - $settings.material.margins) * scale}\"></rect>\n      </g>\n      <g id=\"panels\">\n        {#each sheet.group as panel}\n          <rect\n            style=\"stroke-width: {$settings.cnc[$settings.tool].diameter * scale}px;\"\n            on:mouseover=\"{panelHoverOn}\"\n            on:mouseleave=\"{panelHoverOff}\"\n            class=\"panel {$activePanel == panel.id ? 'active' : ''} print\"\n            id=\"{panel.id}\"\n            x=\"{(panel.x + shift(index).x) * scale}\"\n            y=\"{(flipY(panel.y, panel.height) + shift(index).y) * scale}\"\n            width=\"{panel.width * scale}\"\n            height=\"{panel.height * scale}\"></rect>\n\n          <text\n            style=\"font-size: {scale * (panel.id.length > 6 ? Math.min(panel.height * 0.4, 2.5) : Math.min(panel.height * 0.8, 5))}px;\"\n            class=\"id {$activePanel == panel.id ? 'active' : ''} print\"\n            x=\"{(panel.x + shift(index).x + panel.width / 2) * scale}\"\n            y=\"{(flipY(panel.y, panel.height) + shift(index).y + Math.min(panel.height * 0.8, 5) / 3 + panel.height / 2) * scale}\">\n            {panel.id}\n          </text>\n        {/each}\n      </g>\n    {/each}>\n  </svg>\n</div>\n","<script>\n// to do\n// convert metric\n\nimport { settings } from '../stores.js'\n\nfunction highlight() {\n  this.select()\n}\n</script>\n\n<style>\n.settings {\n  position: relative;\n  height: 90vh;\n  top: -90vh;\n  left: 100%;\n  /* padding: 1.5vh 3.5vw; */\n  transition: 0.25s;\n  /* opacity: 0; */\n  display: none;\n  /* pointer-events: none; */\n  z-index: 2;\n  /* display: grid;\n  grid-template-rows: 10vh 1fr;\n  grid-template-columns: repeat(2, minmax(200px, 1fr)); */\n  /* flex-direction: row; */\n  /* justify-content: center; */\n}\n.settings.active {\n  background-color: var(--primary-bg);\n  transform: translateX(-100%);\n  transition: 0.2s;\n  display: block;\n  /* opacity: 1; */\n  overflow: scroll;\n  /* pointer-events: auto; */\n  /* transition-delay: 1s; */\n}\n.general,\n.cnc {\n  height: auto;\n  /* display: grid; */\n  /* align-items: initial; */\n  /* justify-items: start; */\n}\n\n/* .closepane {\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n} */\n/* .close {\n  text-align: end;\n} */\nh2 {\n  /* font-size: 1em; */\n  min-width: 100%;\n  padding-top: 2vh;\n  padding-right: 100%;\n  text-transform: uppercase;\n  font-weight: 100;\n  letter-spacing: 1.5rem;\n}\n/* h2 {\n  padding-top: 1vh;\n  text-transform: uppercase;\n  font-size: var(--xlarge);\n} */\nh3 {\n  font-weight: 300;\n  font-style: italic;\n  padding-top: 1rem;\n}\nh3,\nh5 {\n  margin-right: 1rem;\n}\n/* .input-wrapper {\n  padding-left: 3vw;\n} */\nh5 {\n  padding-left: 1rem;\n}\n\ninput {\n  width: 4em;\n  text-align: center;\n}\ninput:hover {\n  color: var(--primary);\n  background-color: var(--primary-bg);\n  text-decoration: underline;\n}\n\nselect {\n  padding-left: 1rem;\n  width: 10rem;\n  font-weight: 100;\n  font-family: Quicksand, sans-serif;\n  letter-spacing: 0.05rem;\n  color: var(--primary);\n  background-color: var(--primary-bg);\n  outline: none;\n  border: 1px solid transparent;\n  border-radius: 0.2rem;\n}\n\nselect:hover {\n  cursor: pointer;\n}\nselect:focus,\n.slider:f {\n  font-weight: 800;\n  color: var(--third);\n  background-color: var(--primary-bg);\n  border: 1px solid var(--primary);\n  border-radius: 0.2rem;\n}\n\n.switch input {\n  top: 0.5em;\n  width: 0.1px;\n  height: 0.1px;\n  opacity: 0;\n  overflow: hidden;\n  position: absolute;\n  z-index: -1;\n}\n\ninput[type='checkbox'] {\n  opacity: 0;\n}\n\n.switch {\n  position: relative;\n  display: inline-block;\n  width: 1.05in;\n  height: 1.5rem;\n  /* top: 0.6rem; */\n}\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  vertical-align: middle;\n  /* padding-bottom: 0.2rem; */\n  /* background-color: #8ffffd; */\n  -webkit-transition: 0.2s;\n  transition: 0.2s;\n  border: 1px solid var(--primary);\n  border-top: transparent;\n  border-right: transparent;\n  border-bottom-left-radius: 0.2rem;\n}\n.slider:hover:after,\ninput:checked + .direction:hover:after {\n  text-decoration: overline;\n}\n.direction:hover:after,\nselect:hover {\n  text-decoration: underline;\n  /* border: 1px solid var(--primary);\n  border-radius: 0.2rem; */\n}\n.slider:before {\n  position: absolute;\n  content: '';\n  height: 1.5rem;\n  width: 1px;\n  right: 0.05in;\n  top: 0;\n  background-color: var(--primary);\n  -webkit-transition: 0.2s;\n  transition: 0.2s;\n}\ninput:checked + .slider:before {\n  -webkit-transform: translateX(-24mm);\n  -ms-transform: translateX(-24mm);\n  transform: translateX(-24mm);\n}\n.slider:after {\n  content: 'inches';\n  color: var(--primary);\n  display: block;\n  position: absolute;\n  top: -0.5rem;\n  left: 1rem;\n  font-weight: 100;\n  font-size: var(--medium);\n  /* transform: translate(-50%, 0%); */\n}\n.units[data-lang*='fr']:after {\n  content: 'pouces';\n}\ninput:checked + .units:after {\n  content: 'mm';\n}\n\n.direction,\n.type {\n  border: none;\n}\n.direction:before,\n.type:before {\n  opacity: 0;\n}\n.direction:after {\n  content: 'Top';\n  text-decoration: overline;\n}\n.direction[data-lang*='fr']:after {\n  content: 'Haut';\n}\ninput:checked + .direction:after {\n  content: 'Bottom';\n  text-decoration: underline;\n}\ninput:checked + .direction[data-lang*='fr']:after {\n  content: 'Bas';\n}\n.type:after {\n  content: 'Row';\n}\n.type[data-lang*='fr']:after {\n  content: 'Row';\n}\ninput:checked + .type:after {\n  content: 'Column';\n}\ninput:checked + .type[data-lang*='fr']:after {\n  content: 'Column';\n}\ninput[type='checkbox']:focus + .slider:after,\n.switch:hover {\n  font-weight: 800;\n  color: var(--third);\n}\nselect {\n  padding-left: 1rem;\n  width: 10rem;\n  font-weight: 100;\n  /* font-family: Overpass; */\n  color: var(--primary);\n  background-color: var(--primary-bg);\n  outline: none;\n  border: 1px solid transparent;\n  border-radius: 0.2rem;\n}\n\nselect:hover {\n  cursor: pointer;\n}\nselect:focus,\n.slider:focus {\n  font-weight: 800;\n  color: var(--third);\n  background-color: var(--primary-bg);\n  border: 1px solid var(--primary);\n  border-radius: 0.2rem;\n}\n</style>\n\n<!-- <div class=\"closepane\"></div> -->\n<div class=\"settings\" class:active=\"{$settings.show}\">\n  <div class=\"title\">\n    <h2 data-lang=\"{$settings.language}\" data-fr=\"Parametre\">\n      <span> Settings</span>\n    </h2>\n  </div>\n  <!-- <div class=\"close\">X</div> -->\n  <div class=\"general\">\n    <!-- <h2 data-lang=\"{$settings.language}\" data-fr=\"Genéral\"><span> General</span></h2> -->\n\n    <div class=\"input-wrapper\">\n      <h3 data-lang=\"{$settings.language}\" data-fr=\"Unités: \">\n        <span>Units: </span>\n      </h3>\n      <label class=\"switch\"><input\n          type=\"checkbox\"\n          bind:checked=\"{$settings.units}\" />\n        <div\n          class=\"slider units\"\n          data-lang=\"{$settings.language}\"></div></label>\n    </div>\n    <div class=\"input-wrapper\">\n      <h3 data-lang=\"{$settings.language}\" data-fr=\"Nest apartir de: \">\n        <span>Nest from: </span>\n      </h3>\n      <label class=\"switch\"><input\n          type=\"checkbox\"\n          bind:checked=\"{$settings.nestDirectionBottom}\" />\n        <div\n          class=\"slider direction\"\n          data-lang=\"{$settings.language}\"></div></label>\n    </div>\n    <div class=\"input-wrapper\">\n      <h3 data-lang=\"{$settings.language}\" data-fr=\"Nest avec: \">\n        <span>Nest with: </span>\n      </h3>\n      <label class=\"switch\"><input\n          type=\"checkbox\"\n          bind:checked=\"{$settings.nestTypeColumn}\" />\n        <div class=\"slider type\" data-lang=\"{$settings.language}\"></div></label>\n    </div>\n    <div class=\"input-wrapper\">\n      <h3 data-lang=\"{$settings.language}\" data-fr=\"Nest par le: \">\n        <span>Nest by: </span>\n      </h3>\n      <select bind:value=\"{$settings.nestOrder}\">\n        <option\n          data-lang=\"{$settings.language}\"\n          data-fr=\"plus large\"\n          value=\"widest\">\n          <span>widest</span>\n        </option>\n        <!-- <option data-lang=\"{$settings.language}\" data-fr=\"moins large\" value=\"narrowest\">\n          <span>narrowest</span>\n        </option> -->\n        <option\n          data-lang=\"{$settings.language}\"\n          data-fr=\"plus haut\"\n          value=\"tallest\">\n          <span>tallest</span>\n        </option>\n        <!-- <option data-lang=\"{$settings.language}\" data-fr=\"moins haut\" value=\"shortest\">\n          <span>shortest</span>\n        </option> -->\n        <option\n          data-lang=\"{$settings.language}\"\n          data-fr=\"plus grand\"\n          value=\"biggest\">\n          <span>biggest</span>\n        </option>\n        <!-- <option data-lang=\"{$settings.language}\" data-fr=\"moins grand\" value=\"smallest\">\n          <span>smallest</span>\n        </option> -->\n      </select>\n    </div>\n    <div class=\"input-wrapper\">\n      <h3 data-lang=\"{$settings.language}\" data-fr=\"Info sur les feuilles: \">\n        <span>Sheet info: </span>\n      </h3>\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"Largeur: \">\n        <span>Width: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.material.width}\"\n          step=\"0.0625\" />\n      </h5>\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"Hauteur: \">\n        <span>Height: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.material.height}\"\n          step=\"0.0625\" />\n      </h5>\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"Épaisseur: \">\n        <span>Thickness: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.material.thickness}\"\n          step=\"0.005\" />\n      </h5>\n    </div>\n    <div class=\"input-wrapper\">\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"Marge: \">\n        <span>Margins: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.material.margins}\"\n          step=\"0.05\" />\n      </h5>\n    </div>\n  </div>\n\n  <div class=\"cnc\">\n    <!-- <h2 data-lang=\"{$settings.language}\" data-fr=\"CNC\"><span> CNC</span></h2> -->\n    <div class=\"input-wrapper\">\n      <h3 data-lang=\"{$settings.language}\" data-fr=\"Outil pour la decoupe: \">\n        <span>Profile cutting tool: </span>\n      </h3>\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"Outil #: \">\n        <span>Tool #: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.tool}\"\n          step=\"1\" />\n      </h5>\n    </div>\n    <div class=\"input-wrapper\">\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"Type: \">\n        <span>Type: </span>\n        <input\n          class=\"input\"\n          type=\"text\"\n          bind:value=\"{$settings.cnc[$settings.tool].type}\" />\n      </h5>\n    </div>\n    <div class=\"input-wrapper\">\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"Diametre: \">\n        <span>Diameter: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.cnc[$settings.tool].diameter}\"\n          step=\"0.03125\" />\n      </h5>\n    </div>\n    <div class=\"input-wrapper\">\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"Diametre: \">\n        <span>Spindle speed: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.cnc[$settings.tool].spindle}\"\n          step=\"10\" />\n        <span> RPM</span>\n      </h5>\n    </div>\n    <div class=\"input-wrapper\">\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"vitesse de coupe: \">\n        <span>Feed rate: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.cnc[$settings.tool].feed}\"\n          step=\"10\" />\n        <span> in/min</span>\n      </h5>\n    </div>\n    <div class=\"input-wrapper\">\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"vitesse de plonge: \">\n        <span>Plunge rate: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.cnc[$settings.tool].plunge}\"\n          step=\"10\" />\n        <span> in/min</span>\n      </h5>\n    </div>\n    <div class=\"input-wrapper\">\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"Longeur de plonge: \">\n        <span>Plunge ramp: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.cnc[$settings.tool].ramp}\"\n          step=\"10\" />\n        <span> in</span>\n      </h5>\n    </div>\n    <div class=\"input-wrapper\">\n      <h5 data-lang=\"{$settings.language}\" data-fr=\"Max profondeur/passe: \">\n        <span>Max depth/pass: </span>\n        <input\n          class=\"input\"\n          type=\"number\"\n          bind:value=\"{$settings.cnc[$settings.tool].max_depth}\"\n          step=\"10\" />\n        <span> in</span>\n      </h5>\n    </div>\n  </div>\n</div>\n","<script>\nimport Import from './components/Import.svelte'\nimport CSV from './components/CSV.svelte'\nimport Viewer from './components/Viewer.svelte'\nimport Settings from './components/Settings.svelte'\nimport { Nest } from './nest.js'\nimport { settings, sheets, csvFile, blancCSV } from './stores.js'\nimport { beforeUpdate } from 'svelte'\n\n$settings.language = navigator.language || navigator.userLanguage\n\nconst csvHeaderRows = 5\n\nbeforeUpdate(() => {\n  calculateNest()\n})\n\nfunction calculateNest() {\n  let nest = Nest(\n    $csvFile.contents,\n    csvHeaderRows, // panel starting row csv\n    $settings.nestTypeColumn,\n    $settings.nestOrder,\n    $settings.nestDirectionBottom,\n    $settings.cnc[$settings.tool].diameter,\n    $settings.material\n  )\n  // $panels = nest[0]\n  $sheets = nest[1]\n  $csvFile.errors = nest[2]\n}\n</script>\n\n<style>\n.container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: grid;\n  grid-template-columns: minmax(24rem, 20vw) 1fr;\n  overflow: hidden;\n}\n\n.import {\n  position: relative;\n  margin: 0 1.5vw;\n  display: grid;\n  grid-template-rows: minmax(6rem, 10vh) 1fr;\n}\n\n.splash {\n  position: absolute;\n  top: 10vh;\n  left: 40vw;\n  width: 40vw;\n  height: 40vh;\n  z-index: -1;\n}\n.splash-img {\n  position: relative;\n  left: 20%;\n  width: 40%;\n  height: 100%;\n  background-image: url('../favicon.ico');\n  background-size: contain;\n  background-position: left bottom;\n  background-repeat: no-repeat;\n  z-index: -1;\n}\nh1,\nh5 {\n  color: var(--second);\n  position: relative;\n  /* top: -63%; */\n  left: 20%;\n}\n</style>\n\n<!-- <svelte:body on:change /> -->\n<svelte:body on:change=\"{calculateNest}\" />\n<div class=\"container\">\n  <div class=\"import\">\n    <Import />\n    <CSV />\n    <Settings />\n  </div>\n  <div class=\"main\" on:click=\"{() => ($settings.show = false)}\">\n    <Viewer />\n    <div class=\"splash\">\n      <div class=\"splash-img\"></div>\n      <h1><span>Holy! Nest:</span></h1>\n      <h5><span>save a sheet, maybe two</span></h5>\n    </div>\n  </div>\n</div>\n","import App from './App.svelte'\n\nconst app = new App({\n  target: document.body,\n})\n\nexport default app\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","null_to_empty","value","set_store_value","ret","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","undefined","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","select_option","select","option","__value","selected","toggle_class","toggle","classList","current_component","set_current_component","beforeUpdate","Error","get_current_component","before_update","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","skip_bound","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","NEST_ORDER","IS_FROM_BOTTOM","IS_BY_COLUMNS","CUTTER","ERRORS","MATERIAL","width","height","margins","max_width","max_height","Nest","panels","firstPanelRow","nestType","nestOrder","nestDirection","cutter","material","PANELS","List","slice","flatMap","id","quantity","n","uniqueIDs","q","parseFloat","quantityIDs","Panel","flat","fillRow","row","placementBy","place","maxHeight","fitsRow","column","fitsColumn","ascendingHeight","fillColumn","maxWidth","ascendingWidth","fillSheetColumns","columns","sheet","fitsSheetColumn","fillSheetRows","rows","fitsSheetRow","addCoordinatesRow","margin","yPos","last","xPos","group","j","firstIndex","columnWidth","isFirstRow","y","x","rowCol","k","addCoordinatesColumn","rowHeight","isFirstColumn","sheets","notPlaced","Column","columnHeight","totalArea","makeColumns","Sheet","rowWidth","list","flatten","Row","makeRows","makeSheets","Placement","placed","uniqueID","super","area","sheet_width","sheet_height","sheet_area","waste_area","waste_ratio","dimensions","flattened","first","sort","panel","widest","narrowest","tallest","shortest","biggest","smallest","reduce","total","totalHeight","totalWidth","remainingWidth","remainingHeight","toFloat","str","float4","toFixed","isNaN","includes","split","item","frac","trunc","number","places","Math","round","formatDate","date","format","mm","getMonth","dd","getDate","yy","getFullYear","toString","yyyy","H","getHours","M","getMinutes","S","getSeconds","replace","matched","Gcode","settings","fileName","TOOL_NUMBER","tool","SPINDLE_SPEED","cnc","spindle","FEED_RATE","feed","PLUNGE_RATE","plunge","PLUNGE_DISTANCE","ramp","X_HOME","Y_HOME","min","SAFE_HEIGHT","thickness","MATERIAL_HEIGHT","PRECUT_DEPTH","CUT_TO_DEPTH","IS_FRENCH","language","output","speed","Date","HEADER","nestTypeColumn","columnSort","rowSort","cleanFloat","x_","y_","yStart","yEnd","small","smallPass","PLUNGE_MOVE","FEED_MOVE","MOVE_X","MOVE_Y","RAPID_MOVE","MOVE_Z","RETRACT_MOVE","profileCut","addPoint","join","z","f","num","test","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","sessionStore","initial","JSON","stringify","toObj","parse","sessionStorage","getItem","setItem","saved","blancCSV","errors","contents","localStorage","localStore","colour","nestDirectionBottom","units","show","1","diameter","max_depth","2","3","4","5","6","7","8","9","10","11","12","csvFile","svg","activePanel","autoBom","console","warn","Blob","XMLHttpRequest","open","responseType","onload","g","response","onerror","error","send","status","e","dispatchEvent","MouseEvent","createEvent","initMouseEvent","window","self","global","navigator","userAgent","saveAs","HTMLAnchorElement","prototype","h","URL","webkitURL","download","rel","href","origin","location","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","title","body","innerText","HTMLElement","safari","FileReader","onloadend","result","readAsDataURL","module","encodeURIComponent","file","badFile","csv","$csvFile","today","newFile","dlCSV","dlSVG","dlCNC","$sheets","$settings","files","reader","readAsText","strData","headerRows","strDelimiter","regexPattern","RegExp","arrData","arrMatches","exec","strMatchedDelimiter","strMatchedValue","inner","CSVToArray","log","code","click","highlight","sortAscending","lines","sortDescending","$activePanel","line","w","svgFile","displayInfo","top","left","rect","getBoundingClientRect","bottom","right","ceil","selected_option","querySelector","calculateNest","nest","userLanguage"],"mappings":"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"}