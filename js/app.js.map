{"version":3,"file":"app.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/stores.js","../../src/cncLibrary.js","../../src/localStore.js","../../src/sessionStore.js","../../src/helperFunctions.js","../../src/csv.js","../../src/components/Tooltips.svelte","../../src/components/Import.svelte","../../src/components/Editor.svelte","../../src/components/Viewer.svelte","../../src/components/Headers.svelte","../../src/components/NumInputs.svelte","../../src/components/TextInputs.svelte","../../src/components/CheckInputs.svelte","../../src/components/Settings.svelte","../../src/nest.js","../../src/engravingFont.js","../../src/gCode.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { localStore } from './localStore.js'\nimport { sessionStore } from './sessionStore.js'\nimport { cncLibrary } from './cncLibrary.js'\n\nfunction setLanguage() {\n  let lang =\n    navigator.language.slice(0, 2) || navigator.userLanguage.slice(0, 2)\n  if (lang.slice(0, 2) === 'fr') return 'fr'\n  return 'en'\n}\n\nexport const defaultSettings = {\n  version_1_0_1: '< update key to update settings',\n  language: setLanguage(),\n  material: {\n    width: 49,\n    height: 97,\n    thickness: 0.75,\n    margins: 0.3,\n  },\n  nestTypeColumn: false,\n  nestOrder: 'automatic',\n  nestDirectionBottom: true,\n  units: false,\n  tools: { profile: '9', engraver: '3', tool: '9' },\n  cnc: cncLibrary,\n  subsettings: {\n    show: false,\n    project: true,\n    profile: false,\n    engraver: false,\n    library: false,\n    sheet: false,\n    nest: true,\n    offset: false,\n  },\n  activePanel: '',\n}\n\nexport const csvTemplate = {\n  en: [\n    ['Project', 'New', 'Material', 'Plywood', 'Project Info', 'doors'],\n    ['Borders', 'Top', 'Right', 'Bottom', 'Left'],\n    [0, 0, 0, 0, 0],\n    ['Metric?', false],\n    ['Panel', 'Quantity', 'Width', 'Height'],\n    [1, 0, 0, 0],\n  ],\n  fr: [\n    ['Projét', 'Nouveau', 'Matèriaux', 'Plaquage', 'Modèle Portes', ''],\n    ['Borders', 'haut', 'droit', 'bas', 'gauche'],\n    [0, 0, 0, 0, 0],\n    ['Metrique?', false],\n    ['Panneaux', 'Quantité', 'Largeur', 'Hauteur'],\n    [1, 0, 0, 0],\n  ],\n}\n\nconst defaultData = {\n  name: '',\n  sheets: [],\n  errors: [],\n  offset: {\n    X: 0,\n    Y: 0,\n    Z: 0,\n  },\n  tools: {\n    engraver: {\n      tool: 3,\n      engrave: false,\n      cut_depth: 0.005,\n      xStart: 1,\n      yStart: 1,\n      size: 0.3,\n      spacing: 0.1,\n      direction: 'ltr',\n    },\n    profile: { tool: 9, cut_depth: 0.75, link: 0.02, min_size: 12 },\n  },\n  csv: {\n    new: [...csvTemplate[defaultSettings.language]],\n    contents: [...csvTemplate[defaultSettings.language]],\n    panels: [],\n    headerRows: 5,\n    output: '',\n  },\n  svg: '',\n  cnc: '',\n}\n\nexport const settings = localStore('settings', defaultSettings)\nexport const data = sessionStore('data', defaultData)\n","export const cncLibrary = {\n  1: {\n    type: 'End mill',\n    diameter: 0.1875,\n    mm: false,\n    spindle: 12000,\n    feed: 150,\n    plunge: 100,\n    ramp: 1,\n    max_depth: 0.875,\n    pass_depth: 0.125,\n    step_over: 0.125,\n  },\n  2: {\n    type: 'End mill',\n    diameter: 0.75,\n    mm: false,\n    spindle: 15000,\n    feed: 200,\n    plunge: 75,\n    ramp: 5,\n    max_depth: 3,\n    pass_depth: 0.25,\n    step_over: 0.625,\n  },\n  3: {\n    type: 'Ball-nose',\n    diameter: 0.125,\n    mm: false,\n    spindle: 12000,\n    feed: 50,\n    plunge: 50,\n    ramp: 1,\n    max_depth: 0.75,\n    pass_depth: 0.0625,\n    step_over: 0.0625,\n  },\n  4: {\n    type: 'Edge Finisher',\n    diameter: 0.75,\n    mm: false,\n    spindle: 20000,\n    feed: 75,\n    plunge: 30,\n    ramp: 4,\n    max_depth: 2.25,\n    pass_depth: 2.25,\n    step_over: 0.05,\n  },\n  5: {\n    type: 'Drill',\n    diameter: 5,\n    mm: true,\n    spindle: 8500,\n    feed: 0,\n    plunge: 75,\n    ramp: 0,\n    max_depth: 1,\n    pass_depth: 1,\n    step_over: 0,\n  },\n  6: {\n    type: 'End mill',\n    diameter: 0.25,\n    mm: false,\n    spindle: 18000,\n    feed: 150,\n    plunge: 40,\n    ramp: 1,\n    max_depth: 1,\n    pass_depth: 0.25,\n    step_over: 0.2,\n  },\n  7: {\n    type: 'Drill',\n    diameter: 8,\n    mm: true,\n    spindle: 8500,\n    feed: 0,\n    plunge: 75,\n    ramp: 0,\n    max_depth: 1,\n    pass_depth: 1,\n    step_over: 0,\n  },\n  8: {\n    type: 'Surfacing',\n    diameter: 32,\n    mm: true,\n    spindle: 12000,\n    feed: 200,\n    plunge: 30,\n    ramp: 5,\n    max_depth: 1,\n    pass_depth: 0.125,\n    step_over: 0,\n  },\n  9: {\n    type: 'End mill',\n    diameter: 0.375,\n    mm: false,\n    spindle: 18000,\n    feed: 400,\n    plunge: 70,\n    ramp: 1,\n    max_depth: 0.875,\n    pass_depth: 0.875,\n    step_over: 0.3,\n  },\n  10: {\n    type: 'End mill',\n    diameter: 0.5,\n    mm: false,\n    spindle: 18000,\n    feed: 400,\n    plunge: 70,\n    ramp: 1,\n    max_depth: 0.875,\n    pass_depth: 0.875,\n    step_over: 0.4,\n  },\n  11: {\n    type: 'Drill',\n    diameter: 10,\n    mm: true,\n    spindle: 18000,\n    feed: 0,\n    plunge: 75,\n    ramp: 0,\n    max_depth: 1,\n    pass_depth: 1,\n    step_over: 0,\n  },\n  12: {\n    type: 'V-groove',\n    diameter: 1.5,\n    mm: false,\n    spindle: 12000,\n    feed: 75,\n    plunge: 30,\n    ramp: 1,\n    max_depth: 0.75,\n    pass_depth: 0.25,\n    step_over: 0.125,\n  },\n}\n","import { writable } from 'svelte/store'\n\nexport const localStore = (key, initial) => {\n  const str = (obj) => JSON.stringify(obj, null, 2)\n  // set with initial value if item not present\n  if (!localStorage.getItem(key)) {\n    localStorage.setItem(key, str(initial))\n  }\n\n  function localKey() {\n    return JSON.parse(localStorage.getItem(key))\n  }\n  // reset with initial value as string if settings updated\n  if (!sameKeys(localKey(), initial)) {\n    console.log(localKey(), initial)\n    localStorage.setItem(key, str(initial))\n  }\n  // create the writable store\n  const { subscribe, set, update } = writable(localKey())\n\n  return {\n    subscribe,\n    set: (value) => {\n      // save also to local storage as a string\n      localStorage.setItem(key, str(value))\n      return set(value)\n    },\n    update,\n  }\n}\n\nfunction sameKeys(obj1, obj2) {\n  return Object.keys(obj1).join() === Object.keys(obj2).join()\n}\n","import { writable } from 'svelte/store'\n\nexport const sessionStore = (key, initial) => {\n  const str = (obj) => JSON.stringify(obj, null, 2)\n\n  // set with initial value if item not present\n  if (!sessionStorage.getItem(key)) {\n    sessionStorage.setItem(key, str(initial))\n  }\n\n  // create the writable store\n  const { subscribe, set, update } = writable(\n    JSON.parse(sessionStorage.getItem(key))\n  )\n\n  return {\n    subscribe,\n    set: (value) => {\n      // save also to local storage as a string\n      sessionStorage.setItem(key, str(value))\n      return set(value)\n    },\n    update,\n  }\n}\n","export function toFloat(str) {\n  if (!isNaN(str)) return cleanFloat(str)\n  if (str.includes('/') && !str.includes('.')) {\n    return str\n      .split(' ')\n      .filter((item) => item !== '')\n      .reduce((total, item) => {\n        if (item.includes('/')) {\n          let frac = item.split('/').filter((item) => item !== '')\n          return total + cleanFloat(frac[0] / frac[1])\n        }\n        return total + cleanFloat(item)\n      }, 0)\n  }\n  return str\n}\n\nexport function hasNumber(str) {\n  return /\\d/.test(str)\n}\nexport function isNumber(str) {\n  return /(\\.|\\/)\\d/.test(str)\n}\nexport function trunc(number, places) {\n  return Math.round(parseFloat(number) * 10 ** places) / 10 ** places\n}\nexport function cleanFloat(num, trailing = 5) {\n  return trunc(num, trailing)\n}\nconst removeFromArray = (array, itemValue) => {\n  let index = array.indexOf(itemValue)\n  return [...array.slice(0, index), ...array.slice(index + 1)]\n}\n\nexport function toMM(number) {\n  return cleanFloat(number * 25.4, 3)\n}\n\nexport function toInches(number) {\n  return cleanFloat(number / 25.4)\n}\n\nexport function formatDate(date, format) {\n  const leadingZero = (digits) => ('0' + digits).slice(-2)\n  const map = {\n    mm: leadingZero(date.getMonth() + 1),\n    dd: leadingZero(date.getDate()),\n    yy: date.getFullYear().toString().slice(-2),\n    yyyy: date.getFullYear(),\n    HH: leadingZero(date.getHours()),\n    MM: leadingZero(date.getMinutes()),\n    SS: leadingZero(date.getSeconds()),\n    T: 'T',\n    h: 'h',\n  }\n\n  return format.replace(/mm|dd|yyyy|yy|HH|MM|SS/gi, (matched) => map[matched])\n}\n","import { csvTemplate, defaultSettings } from './stores.js'\nimport { hasNumber, toFloat } from './helperFunctions.js'\n\nexport function CSVToArray(csv, headerRows = 0) {\n  const ROW_END = new RegExp('\\r|\\n', 'i'),\n    COLUMN_END = new RegExp(',|;|:', 'i')\n  // COLUMN_END = ','\n\n  let array = csv\n    .split(ROW_END)\n    .map((column) =>\n      column\n        .split(COLUMN_END)\n        .map((cell) => (hasNumber(cell) ? toFloat(cell) : cell))\n    )\n\n  checkHeaderValidity()\n\n  return array.filter((v, i) => {\n    if (i < headerRows) return true\n    return v.filter((cell) => cell !== '').length\n  })\n\n  function checkHeaderValidity() {\n    if (\n      array[0][0] == csvTemplate.en[0][0] ||\n      array[0][0] == csvTemplate.fr[0][0]\n    ) {\n      return\n    }\n\n    const headers = csvTemplate[defaultSettings.language].slice(0, -1)\n\n    if (typeof array[0][2] == 'number') {\n      array = [...headers, ...array]\n      // console.log(csv)\n    }\n\n    if (typeof array[0][2] == 'string' && typeof array[1][2] == 'number') {\n      array = [...headers, ...array.slice(1)]\n    }\n  }\n}\n","<script>\nimport { settings } from '../stores.js'\n// import { createEventDispatcher } from 'svelte'\n\n// const dispatch = createEventDispatcher()\n\n// function toggle() {\n//   dispatch('toggle')\n// }\n\nexport let english = '',\n  french = '',\n  under = false\n</script>\n\n<style>\n.tooltip {\n  z-index: 99;\n  opacity: 0;\n  position: absolute;\n  left: 140%;\n  top: 50%;\n}\n\n.under {\n  left: 80%;\n  top: 100%;\n}\n\n.tip,\n.pointer {\n  z-index: 99;\n  position: fixed;\n  white-space: nowrap;\n  transition: 0.1s;\n  outline: none;\n  background-color: var(--primary);\n  color: var(--primary-bg);\n  font-size: var(--small);\n  font-weight: 600;\n  padding: var(--xsmall);\n  border-radius: var(--xsmall);\n  pointer-events: none;\n}\n.pointer {\n  transform: skew(30deg);\n  border-radius: 0.2rem;\n  content: '';\n}\n*:hover > .tooltip {\n  opacity: 1;\n  transition: 0.1s;\n  transition-delay: 1s;\n}\n</style>\n\n<div class=\"tooltip\" class:under>\n  <div class=\"pointer\"></div>\n  <div class=\"tip\">{$settings.language.includes('fr') ? french : english}</div>\n</div>\n","<script>\nimport { settings, data } from '../stores.js'\nimport { formatDate } from '../helperFunctions.js'\nimport { CSVToArray } from '../csv.js'\nimport Tooltips from './Tooltips.svelte'\nimport { createEventDispatcher } from 'svelte'\n\nconst dispatch = createEventDispatcher()\n\nconst time = () => formatDate(new Date(), '-HHhMM')\n\nlet badFile = false,\n  keys = {},\n  dlCSV,\n  dlSVG,\n  dlCNC,\n  project = [],\n  open\n\nfunction updatePanels() {\n  $settings.units = JSON.parse($data.csv.contents[3][1])\n  dispatch('update')\n}\n\nfunction handleKeyDown(e) {\n  keys[e.code] = true\n  const key = (code) => (keys['AltLeft'] || keys['AltRight']) && keys[code]\n  if (key('KeyO')) setTimeout(() => file.click(), 140)\n  if (key('KeyN')) newFile()\n  if (key('KeyV')) dlCSV.click()\n  if (key('KeyG')) dlSVG.click()\n  if (key('KeyC')) dlCNC.click()\n  if (key('KeyP')) $settings.subsettings.show = !$settings.subsettings.show\n}\n\nfunction handleKeyUp(e) {\n  delete keys[e.code]\n}\n\nfunction newFile() {\n  $data.csv.contents = [...$data.csv.new]\n  updatePanels()\n  dispatch('name')\n}\n\nfunction loadFile() {\n  if (!open.files[0]) return\n  if (open.files[0].name.includes('.csv')) {\n    let reader = new FileReader()\n    reader.readAsText(open.files[0])\n    reader.onload = function (event) {\n      $data.csv.contents = CSVToArray(event.target.result, $data.csv.headerRows) // csv file\n      badFile = false\n      updatePanels()\n      return\n    }\n  }\n  badFile = true\n}\n\n</script>\n\n<style>\n.file-mgmt {\n  display: flex;\n  flex-direction: column;\n  vertical-align: center;\n  align-items: center;\n  text-align: center;\n  justify-content: space-between;\n  height: 22rem;\n}\n\n.file-icon {\n  position: relative;\n  height: 2em;\n  width: 1.7em;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n  cursor: pointer;\n  transition: 0.1s;\n}\n.file-icon:hover,\n.file-icon:focus,\ninput:focus + .file-icon {\n  height: 2.5em;\n  width: 2.3em;\n  transition: 0.1s;\n  outline: none;\n}\n.inputfile {\n  top: 0.5em;\n  width: 0.1px;\n  height: 0.1px;\n  opacity: 0;\n  overflow: hidden;\n  position: absolute;\n  z-index: -1;\n}\n.blocked {\n  cursor: default;\n}\n.blocked:hover::after,\n.blocked:hover::before {\n  opacity: 0;\n}\n.blocked:hover {\n  height: 2em;\n  width: 1.7em;\n}\n.badfile {\n  background-image: url('../img/upload-bad.png');\n}\n.upload {\n  background-image: url('../img/upload.png');\n}\n.upload:hover {\n  background-image: url('../img/upload-hover.png');\n}\n.new {\n  background-image: url('../img/new.png');\n}\n.new:hover {\n  background-image: url('../img/new-hover.png');\n}\n.dl-svg {\n  background-image: url('../img/dl-svg.png');\n}\n.dl-svg-block {\n  background-image: url('../img/dl-svg-block.png');\n}\n.dl-svg:hover {\n  background-image: url('../img/dl-svg-hover.png');\n}\n.dl-csv {\n  background-image: url('../img/dl-csv.png');\n}\n.dl-csv-block {\n  background-image: url('../img/dl-csv-block.png');\n}\n.dl-csv:hover {\n  background-image: url('../img/dl-csv-hover.png');\n}\n.dl-cnc {\n  background-image: url('../img/dl-cnc.png');\n}\n.dl-cnc-block {\n  background-image: url('../img/dl-cnc-block.png');\n}\n.dl-cnc:hover {\n  background-image: url('../img/dl-cnc-hover.png');\n}\n\n</style>\n\n<svelte:head>\n  <title>{'Ahhh Nest: ' + $data.csv.contents[0][1] || 'Ahhh! Nest'}</title>\n</svelte:head>\n<svelte:window on:keydown=\"{handleKeyDown}\" on:keyup=\"{handleKeyUp}\" />\n\n<div class=\"file-mgmt\">\n  <!-- <div\n    tabindex=\"0\"\n    role=\"button\"\n    class=\"file-icon setting-icon\"\n    on:click=\"{() => ($settings.show = !$settings.show)}\">\n    <Tooltips\n      french=\"ncnc + projet parametre  (alt + p)\"\n      english=\"cnc + project settings (alt + p)\" />\n  </div> -->\n  <input\n    class=\"inputfile\"\n    name=\"file\"\n    id=\"file\"\n    type=\"file\"\n    on:change=\"{loadFile}\"\n    bind:this=\"{open}\" />\n  <label\n    for=\"file\"\n    class=\"file-icon {badFile ? 'badfile' : 'upload'}\"\n    on:mouseover=\"{() => (badFile = false)}\">\n    <Tooltips\n      french=\"ouvrir fichier .csv (alt + o)\"\n      english=\"open .csv file (alt + o)\" />\n  </label>\n  <div tabindex=\"0\" role=\"button\" class=\"file-icon new\" on:click=\"{newFile}\">\n    <Tooltips french=\"nouveau fichier (alt + n)\" english=\"new file (alt + n)\" />\n  </div>\n  {#if $data.sheets.length}\n    <a\n      href=\"data:text/plain;charset=utf-8,{encodeURIComponent($data.csv.output)}\"\n      download=\"{$data.name + time()}.csv\"\n      role=\"button\"\n      class=\"file-icon dl-csv\"\n      bind:this=\"{dlCSV}\">\n      <Tooltips\n        french=\"téléchargez le fichier .csv  (alt + v)\"\n        english=\"download .csv file (alt + v)\" />\n    </a>\n    <a\n      href=\"data:text/plain;charset=utf-8,{encodeURIComponent($data.svg)}\"\n      download=\"{$data.name + time()}.svg\"\n      alt=\"download svg file\"\n      role=\"button\"\n      class=\"file-icon dl-svg\"\n      bind:this=\"{dlSVG}\">\n      <Tooltips\n        french=\"telechargez le fichier .svg (alt + g)\"\n        english=\"download .svg file (alt + g)\" />\n    </a>\n    <a\n      href=\"data:text/plain;charset=utf-8,{encodeURIComponent($data.cnc)}\"\n      download=\"{$data.name + time()}.cnc\"\n      role=\"button\"\n      class=\"file-icon dl-cnc\"\n      bind:this=\"{dlCNC}\">\n      <Tooltips\n        french=\"ntelechargez le fichier .cnc (alt + c)\"\n        english=\"download .cnc file (alt + c)\" />\n    </a>\n  {:else}\n    <div class=\"file-icon dl-csv-block blocked\"></div>\n    <div class=\"file-icon dl-svg-block blocked\"></div>\n    <div class=\"file-icon dl-cnc-block blocked\"></div>\n  {/if}\n</div>\n","<script>\nimport { settings, data } from '../stores.js'\nimport { toMM, toInches, trunc } from '../helperFunctions.js'\nimport Tooltips from './Tooltips.svelte'\nimport { createEventDispatcher } from 'svelte'\n\nconst dispatch = createEventDispatcher()\n\n$: metric = JSON.parse($data.csv.contents[3][1])\n$: findMax = (directionStr) => {\n  let max = $settings.material[directionStr] - $settings.material.margins * 2\n  return metric ? toMM(max) : max\n}\n\nfunction highlight() {\n  this.select()\n}\n\nfunction addRow() {\n  let row = [$data.csv.panels.length + 1, 0, 0, 0]\n  $data.csv.contents = [...$data.csv.contents, row]\n  dispatch('update')\n}\n\nfunction sortAscending(index) {\n  $data.csv.panels = $data.csv.panels.sort((a, b) => a[index] - b[index])\n}\nfunction sortDescending(index) {\n  $data.csv.panels = $data.csv.panels.sort((a, b) => b[index] - a[index])\n}\n\nfunction convertUnits() {\n  let convert = metric ? toInches : toMM\n  $data.csv.panels.forEach((index) => {\n    index[2] = convert(index[2])\n    index[3] = convert(index[3])\n  })\n  $data.csv.contents[3][1] = $settings.units = !metric\n}\n\n</script>\n\n<style>\n.wrapper {\n  height: max-content;\n  padding: 0;\n}\n\n.info {\n  color: var(--blue);\n  margin: 0.3rem 0;\n  border-top: 1px solid;\n  border-bottom: 1px solid;\n  padding-bottom: 1rem;\n}\n.info:hover {\n  background-color: var(--second-bg);\n  cursor: pointer;\n}\n.check {\n  position: absolute;\n  right: 1rem;\n  margin-top: 1rem;\n  font-size: var(--xxlarge);\n  visibility: hidden;\n}\n.info:hover .check {\n  visibility: visible;\n}\n\nul {\n  font-size: var(--small);\n  display: grid;\n  grid-template-columns: 3fr 2fr 3fr 3fr;\n  border-bottom: 1px solid;\n}\n.new-row {\n  color: var(--blue);\n  font-size: var(--xxlarge);\n  cursor: pointer;\n  text-align: center;\n}\n.active {\n  background-color: var(--second-bg);\n}\nli {\n  position: relative;\n  line-height: var(--xxlarge);\n  text-align: center;\n  cursor: pointer;\n}\ninput {\n  width: 100%;\n  height: 100%;\n  border-radius: 0;\n  text-align: center;\n}\ninput:after {\n  content: 'in';\n}\ninput:hover {\n  color: var(--primary-bg);\n  background-color: var(--second);\n}\ninput:hover::selection {\n  color: var(--primary);\n  transition: 0.2s;\n}\ndiv {\n  padding-top: 1rem;\n}\n.error {\n  color: var(--third);\n}\n\n.error:hover {\n  background-color: var(--primary-bg);\n  cursor: auto;\n}\n\n</style>\n\n<div class=\"wrapper\">\n  <div>\n    <ul class=\"header\">\n      <li on:click=\"{() => sortAscending(0)}\">\n        <h1>\n          ⊛\n          <Tooltips\n            under=\"{true}\"\n            french=\"Nom de panneau\"\n            english=\"Panel Name\" />\n        </h1>\n      </li>\n      <li on:click=\"{() => sortDescending(1)}\">\n        <h1>\n          ⧉\n          <Tooltips under=\"{true}\" french=\"Quantité\" english=\"Quantity\" />\n        </h1>\n      </li>\n      <li on:click=\"{() => sortDescending(2)}\">\n        <!-- <h4>∣X∣⍈</h4> -->\n        <h1>\n          ⍈\n          <Tooltips\n            under=\"{true}\"\n            french=\"Largeur ({metric ? 'mm' : 'po'})\"\n            english=\"Width ({metric ? 'mm' : 'in'})\" />\n        </h1>\n      </li>\n      <li on:click=\"{() => sortDescending(3)}\">\n        <!-- <h4>Y⇫⍐</h4> -->\n        <h1>\n          ⍗\n          <Tooltips\n            under=\"{true}\"\n            french=\"Hauteur ({metric ? 'mm' : 'po'})\"\n            english=\"Height ({metric ? 'mm' : 'in'})\" />\n        </h1>\n      </li>\n    </ul>\n    {#each $data.csv.panels as line}\n      <ul\n        class=\"{$settings.activePanel == line[0] ? 'active' : ''}\"\n        on:mouseenter=\"{() => ($settings.activePanel = line[0])}\"\n        on:mouseleave=\"{() => ($settings.activePanel = '')}\">\n        <li>\n          <input type=\"text\" bind:value=\"{line[0]}\" on:focus=\"{highlight}\" />\n          <Tooltips\n            under=\"{true}\"\n            french=\"Nom de panneau\"\n            english=\"Panel Name\" />\n        </li>\n        <li>\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"100\"\n            bind:value=\"{line[1]}\"\n            on:focus=\"{highlight}\" />\n          <Tooltips under=\"{true}\" french=\"Quantité\" english=\"Quantity\" />\n        </li>\n        <li>\n          <input\n            class:error=\"{line[2] > findMax('width')}\"\n            type=\"number\"\n            min=\"0\"\n            max=\"{findMax('width')}\"\n            bind:value=\"{line[2]}\"\n            on:focus=\"{highlight}\"\n            step=\"{metric ? 0.25 : 0.03125}\" />\n          <Tooltips\n            under=\"{true}\"\n            french=\"Largeur ({metric ? 'mm' : 'po'})\"\n            english=\"Width ({metric ? 'mm' : 'in'})\" />\n        </li>\n        <li>\n          <input\n            class:error=\"{line[3] > findMax('height')}\"\n            type=\"number\"\n            min=\"0\"\n            max=\"{findMax('height')}\"\n            bind:value=\"{line[3]}\"\n            on:focus=\"{highlight}\"\n            step=\"{metric ? 0.25 : 0.03125}\" />\n          <Tooltips\n            under=\"{true}\"\n            french=\"Hauteur ({metric ? 'mm' : 'po'})\"\n            english=\"Height ({metric ? 'mm' : 'in'})\" />\n        </li>\n      </ul>\n    {/each}\n    <ul class=\"new-row\" on:click=\"{addRow}\" role=\"button\">+</ul>\n  </div>\n\n  {#if $data.errors.length}\n    <div class=\"info error\">\n      <h5 class=\"error\">ERREUR{$data.errors.length > 1 ? 'S' : ''}:</h5>\n      {#each $data.errors as error}\n        <p class=\"error\">{error}</p>\n      {/each}\n    </div>\n  {/if}\n\n  {#if $data.averageWaste}\n    <div class=\"info\" on:click=\"{() => ($data.averageWaste = false)}\">\n      <h5 class=\"check\">✕</h5>\n      <h5>Moyen perte/feuille: {trunc($data.averageWaste.all, 1)} %</h5>\n      <h5>\n        Moyen perte/feuille plein:\n        {$data.sheets.length > 1 ? trunc($data.averageWaste.full, 1) : 0}\n        %\n      </h5>\n    </div>\n  {/if}\n</div>\n","<script>\n//TO DO : units to mm scale setting\n\nimport { settings, data } from '../stores.js'\nimport { afterUpdate } from 'svelte'\nimport { trunc } from '../helperFunctions.js'\n\nlet id,\n  displayInfo = false,\n  top = 0,\n  left = 0,\n  scale = 90,\n  // scale = $settings.units ? 90 * 25.4 : 90,\n  svgFile\n\nafterUpdate(() => {\n  $data.svg = svgFile.innerHTML.toString()\n})\n\nfunction panelHoverOn() {\n  $settings.activePanel = this.id\n}\nfunction panelHoverOff() {\n  $settings.activePanel = ''\n}\n\nfunction showInfo() {\n  displayInfo = true\n  let rect = this.getBoundingClientRect()\n  top = (rect.bottom - rect.top) / 2 + rect.top\n  left = (rect.right - rect.left) / 2 + rect.left\n  id = this.id\n}\nfunction hideInfo() {\n  displayInfo = false\n}\n\nfunction flipY(y, height) {\n  return $settings.material.height - height - y\n}\n\nfunction shift(index) {\n  let maxColumns = 5,\n    rows = Math.ceil($data.sheets.length / maxColumns),\n    columns = Math.ceil($data.sheets.length / rows),\n    row = Math.ceil((index + 1) / columns) - 1,\n    column = index % columns,\n    x = column * $settings.material.width,\n    y = row * $settings.material.height,\n    w = columns * $settings.material.width,\n    h = rows * $settings.material.height\n  return { x, y, w, h }\n}\n\n</script>\n\n<style>\n.viewer {\n  height: 100vh;\n  padding: 2vh 2vw;\n  z-index: 1;\n}\n.infocard {\n  position: fixed;\n  padding: 1rem;\n  background-color: var(--primary);\n  border: 1px solid var(--primary-bg);\n  border-radius: 4px;\n  font-weight: 100;\n  line-height: 1.5em;\n  color: var(--primary-bg);\n  font-size: 1.3rem;\n  z-index: 2;\n  transform: translate(-50%, -50%);\n  pointer-events: none;\n}\nsup {\n  font-size: 0.5em;\n  line-height: 1.5em;\n}\nsvg {\n  height: 100%;\n  width: 100%;\n  margin: auto auto;\n  overflow: hidden;\n}\n\n.panel {\n  stroke: var(--second);\n  fill: var(--primary-bg);\n  transition: 0.2s;\n}\n\n.active {\n  fill: var(--second);\n  stroke: var(--primary);\n  transition: 0.2s;\n}\n.sheet {\n  stroke: var(--primary);\n  fill: var(--primary-bg);\n  /* fill-opacity: 0; */\n  transition: 0.2s;\n}\n\n.sheet:hover {\n  fill: var(--primary);\n  fill-opacity: 1;\n  transition: 0.2s;\n}\n\n.id {\n  text-anchor: middle;\n  fill: var(--second);\n  stroke: none;\n  font-weight: 300;\n  pointer-events: none;\n  cursor: default;\n}\n.id.active {\n  fill: var(--primary-bg);\n}\n\n</style>\n\n{#if displayInfo}\n  <div class=\"infocard\" style=\"left: {left}px; top: {top}px;\">\n    <h4>{$data.sheets[id].id}</h4>\n    <p>\n      area des panneaux:\n      {trunc($data.sheets[id].area / 144, 2)}\n      pi<sup>2</sup>\n    </p>\n    <p>\n      area de perte:\n      {trunc($data.sheets[id].waste_area / 144, 2)}\n      pi<sup>2</sup>\n    </p>\n    <p>% de perte: {trunc($data.sheets[id].waste_ratio * 100, 2)}%</p>\n  </div>\n{/if}\n\n<div class=\"viewer\" bind:this=\"{svgFile}\">\n  <svg\n    class=\"print\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    width=\"{shift($data.sheets.last).w * scale || 0}\"\n    height=\"{shift($data.sheets.last).h * scale || 0}\"\n    viewBox=\"0 0 {shift($data.sheets.last).w * scale || 0} {shift($data.sheets.last).h * scale || 0}\"\n    preserveAspectRatio=\"xMidYMid meet\">\n    {#each $data.sheets as sheet, index}\n      <g id=\"sheets\">\n        <rect\n          style=\"stroke-width: {$settings.material.margins * scale}px;\"\n          on:mouseover=\"{showInfo}\"\n          on:mouseleave=\"{hideInfo}\"\n          class=\"sheet print\"\n          id=\"{index}\"\n          x=\"{(shift(index).x + $settings.material.margins / 2 - $data.offset.X) * scale}\"\n          y=\"{(shift(index).y + $settings.material.margins / 2 + $data.offset.Y) * scale}\"\n          width=\"{(sheet.sheet_width - $settings.material.margins) * scale}\"\n          height=\"{(sheet.sheet_height - $settings.material.margins) * scale}\"></rect>\n      </g>\n      <g id=\"panels\">\n        {#each sheet.group as panel}\n          <rect\n            style=\"stroke-width: {$settings.cnc[$settings.tools.profile].diameter * scale}px;\"\n            on:mouseover=\"{panelHoverOn}\"\n            on:mouseleave=\"{panelHoverOff}\"\n            class=\"panel {$settings.activePanel == panel.id ? 'active' : ''} print\"\n            id=\"{panel.id}\"\n            x=\"{(panel.x + shift(index).x) * scale}\"\n            y=\"{(flipY(panel.y, panel.height) + shift(index).y) * scale}\"\n            width=\"{panel.width * scale}\"\n            height=\"{panel.height * scale}\"></rect>\n\n          <text\n            style=\"font-size: {scale * (panel.id.length > 6 ? Math.min(panel.height * 0.4, 2.5) : Math.min(panel.height * 0.8, 5))}px;\"\n            class=\"id {$settings.activePanel == panel.id ? 'active' : ''} print\"\n            x=\"{(panel.x + shift(index).x + panel.width / 2) * scale}\"\n            y=\"{(flipY(panel.y, panel.height) + shift(index).y + Math.min(panel.height * 0.8, 5) / 3 + panel.height / 2) * scale}\">\n            {panel.id}\n          </text>\n        {/each}\n      </g>\n    {/each}\n  </svg>\n</div>\n","<script>\nimport { settings } from '../stores'\nimport { createEventDispatcher } from 'svelte'\n\nconst dispatch = createEventDispatcher()\n\nexport let open,\n  english = '',\n  french = '',\n  icon = ''\n\nfunction toggle() {\n  dispatch('toggle')\n}\nfunction focused() {\n  dispatch('focused')\n}\n</script>\n\n<style>\n.drop {\n  padding-top: 1rem;\n  padding-bottom: 0.1rem;\n  cursor: pointer;\n  display: grid;\n  grid-template-columns: 10fr 1fr;\n  border-bottom: 1px solid transparent;\n}\nh3 {\n  font-weight: 300;\n  font-style: italic;\n}\nh3 span {\n  font-weight: 100;\n  font-style: normal;\n}\n/* .drop:focus, */\n.drop:hover,\n.open {\n  outline: none;\n  border-bottom: 1px solid var(--primary);\n  margin-bottom: 0.4em;\n}\n/* .drop:focus .end, */\n.drop:hover .end {\n  opacity: 1;\n  color: var(--third);\n  font-weight: 700;\n  font-size: var(--xxlarge);\n}\n.end {\n  /* position: relative; */\n  opacity: 0;\n  right: 0;\n  font-size: var(--xlarge);\n  /* vertical-align: 0.5em; */\n}\n</style>\n\n<div class=\"drop\" class:open on:click=\"{toggle}\" on:focus=\"{focused}\">\n  <h3>\n    <span>{icon} </span>\n    {$settings.language.includes('fr') ? french : english}\n  </h3>\n  <span class=\"end\">{open ? '⩓' : '⩔'}</span>\n</div>\n","<script>\nimport { settings } from '../stores'\nimport { createEventDispatcher } from 'svelte'\nconst dispatch = createEventDispatcher()\nexport let value,\n  min = 0,\n  max,\n  step,\n  english = '',\n  french = '',\n  measurement = '',\n  unit = ''\n\nfunction highlight() {\n  this.select()\n}\n\nfunction changed() {\n  dispatch('changed')\n}\nfunction convert() {\n  dispatch('convert')\n  unit = !unit\n}\n</script>\n\n<style>\nh5 {\n  font-size: var(--small);\n  padding-left: 2rem;\n  white-space: nowrap;\n  display: flex;\n}\ninput {\n  width: 2%;\n  flex: 2 !important;\n  text-align: right;\n}\nspan {\n  cursor: pointer;\n  padding-right: 1rem;\n}\ninput:hover,\ninput:focus {\n  text-underline-offset: 0.1em;\n  text-decoration: underline;\n}\n</style>\n\n<h5>\n  {$settings.language.includes('fr') ? french : english}:\n  <input\n    type=\"number\"\n    on:click=\"{highlight}\"\n    on:change=\"{changed}\"\n    bind:value\n    min=\"{min}\"\n    max=\"{max}\"\n    step=\"{step}\" />\n  <span on:click=\"{convert}\">{measurement}</span>\n</h5>\n","<script>\nimport { settings } from '../stores'\n\nexport let value,\n  english = '',\n  french = ''\n\nfunction highlight() {\n  this.select()\n}\n</script>\n\n<style>\nh5 {\n  font-size: var(--small);\n  padding-left: 2rem;\n  white-space: nowrap;\n  display: flex;\n  /* width: calc(100% - 6rem); */\n}\nh5 > input {\n  width: 2%;\n  flex: 2 !important;\n  text-align: right;\n  padding-right: 1rem;\n}\ninput:focus,\ninput:hover {\n  /* border-bottom: 1px solid var(--primary); */\n  /* color: var(--primary);\n  background-color: var(--primary-bg); */\n  text-underline-offset: 0.1em;\n  text-decoration: underline;\n}\n</style>\n\n<h5>\n  {$settings.language.includes('fr') ? french : english}:\n  <input type=\"text\" on:click=\"{highlight}\" bind:value />\n</h5>\n","<script>\nimport { settings } from '../stores.js'\nimport { createEventDispatcher } from 'svelte'\n\nconst dispatch = createEventDispatcher()\n\nfunction toggle() {\n  dispatch('toggle')\n}\n\nexport let checked,\n  on,\n  off,\n  separator = ':',\n  english = '',\n  french = ''\n</script>\n\n<style>\nh5 {\n  font-size: var(--small);\n  padding-left: 2rem;\n  white-space: nowrap;\n  display: flex;\n}\n.switch {\n  position: relative;\n  width: 2%;\n  flex: 2 !important;\n}\n/* .switch {\n  position: relative;\n  display: inline-block;\n  width: 1.05in;\n  height: 1.5rem;\n} */\n.slider:after {\n  position: absolute;\n  display: block;\n  width: 100%;\n  height: 100%;\n  color: var(--primary);\n  text-align: right;\n  font-weight: 100;\n  font-size: var(--medium);\n  content: attr(data-content);\n  padding: 0 1rem;\n  cursor: pointer;\n  -webkit-transition: 0.2s;\n  transition: 0.2s;\n}\ninput:focus + .slider:after,\n.slider:hover:after {\n  text-decoration: underline;\n  text-underline-offset: 0.1em;\n}\ninput:focus + .slider:after {\n  color: var(--third);\n}\ninput[type='checkbox'] {\n  top: 0.5em;\n  width: 0.1px;\n  height: 0.1px;\n  opacity: 0;\n  overflow: hidden;\n  position: absolute;\n  z-index: -1;\n}\n</style>\n\n<h5>\n  {$settings.language.includes('fr') ? french : english}{separator}\n  <label class=\"switch\">\n    <input type=\"checkbox\" on:click=\"{toggle}\" bind:checked />\n    <div class=\"slider\" data-content=\"{checked ? on : off}\"></div></label>\n</h5>\n","<script>\nimport { data, settings } from '../stores.js'\nimport { toMM, toInches } from '../helperFunctions.js'\nimport Headers from './Headers.svelte'\nimport NumInputs from './NumInputs.svelte'\nimport TextInputs from './TextInputs.svelte'\nimport CheckInputs from './CheckInputs.svelte'\n// import { createEventDispatcher } from 'svelte'\n\n// const dispatch = createEventDispatcher()\nconst french = $settings.language === 'fr'\nlet thickness = $settings.material.thickness\n\nfunction updateCut() {\n  $data.tools.profile.cut_depth -= thickness - $settings.material.thickness\n  thickness = $settings.material.thickness\n}\nfunction convertCSVUnits() {\n  let metric = JSON.parse($data.csv.contents[3][1])\n  $data.csv.panels.forEach((index) => {\n    index[2] = convertUnit(metric, index[2])\n    index[3] = convertUnit(metric, index[3])\n  })\n  $data.csv.contents[3][1] = $settings.units = !metric\n}\n\nfunction convertDiameterUnits() {\n  let tool = $settings.cnc[$settings.tools.tool]\n  tool.diameter = convertUnit(tool.mm, tool.diameter)\n}\n\nfunction convertUnit(unit, value) {\n  let convert = unit ? toInches : toMM\n  return convert(value)\n}\n\nfunction activeEngraver() {\n  activeLibraryTool($settings.tools.engraver)\n}\n\nfunction activeProfile() {\n  activeLibraryTool($settings.tools.profile)\n}\n\nfunction activeLibraryTool(activate) {\n  $settings.tools.tool = activate\n}\n\n</script>\n\n<style>\n.settings {\n  position: relative;\n  z-index: 2;\n  padding-bottom: 2px;\n  border-bottom: 1px solid var(--second-bg);\n}\n.subsetting {\n  height: 0;\n  width: 100%;\n  overflow: hidden;\n  opacity: 0;\n}\n.subsetting.active {\n  height: auto;\n  opacity: 1;\n}\n.title {\n  cursor: pointer;\n  font-size: var(--large);\n  padding: 0.7rem 0;\n  text-transform: uppercase;\n  font-weight: 100;\n  letter-spacing: 1.2rem;\n  display: grid;\n  grid-template-columns: 10fr 1fr;\n  border-bottom: 1px solid var(--second-bg);\n}\n.title:hover,\n.title.active:hover {\n  border-bottom: 1px solid var(--second);\n}\n.transparent {\n  right: 0;\n  font-size: var(--xxlarge);\n  color: rgba(0, 0, 0, 0);\n}\n.title:hover .transparent {\n  color: var(--second);\n}\n\nh5 {\n  font-size: var(--small);\n  padding-left: 2rem;\n  white-space: nowrap;\n  display: flex;\n}\nselect {\n  padding-left: 2rem;\n  padding-right: 1rem;\n  font-weight: 100;\n  font-family: Quicksand, sans-serif;\n  letter-spacing: 0.05rem;\n  direction: rtl;\n  color: var(--primary);\n  background-color: var(--primary-bg);\n  outline: none;\n  border: none;\n}\nselect:focus,\nselect:hover {\n  cursor: pointer;\n  text-decoration: underline;\n  text-underline-offset: 0.1em;\n}\noption {\n  direction: ltr;\n}\n.spread {\n  width: 2%;\n  flex: 2 !important;\n}\n\n</style>\n\n<div class=\"settings\">\n  <div\n    class=\"title\"\n    class:active=\"{$settings.subsettings.show}\"\n    on:click=\"{() => ($settings.subsettings.show = !$settings.subsettings.show)}\">\n    <span>❁{french ? 'Parametre' : 'Settings'} </span>\n    <span class=\"transparent\"> {$settings.subsettings.show ? '⩚' : '⩛'} </span>\n  </div>\n  <div class=\"subsetting\" class:active=\"{$settings.subsettings.show}\">\n    <!-- project -->\n    <Headers\n      on:toggle=\"{() => ($settings.subsettings.project = !$settings.subsettings.project)}\"\n      open=\"{$settings.subsettings.project}\"\n      icon=\"⟐\"\n      french=\"Projet\"\n      english=\"Project\" />\n    <div class=\"subsetting\" class:active=\"{$settings.subsettings.project}\">\n      <TextInputs\n        english=\"Billing #\"\n        french=\"Facture #\"\n        bind:value=\"{$data.csv.contents[0][1]}\" />\n      <TextInputs\n        english=\"{$data.csv.contents[0][4] ? $data.csv.contents[0][4] : 'Product'}\"\n        french=\"{$data.csv.contents[0][4] ? $data.csv.contents[0][4] : 'Produit'}\"\n        bind:value=\"{$data.csv.contents[0][5]}\" />\n      <CheckInputs\n        on=\"☑︎\"\n        off=\"☐\"\n        french=\"Graver les noms des panneaux\"\n        english=\"Engrave the panel names\"\n        bind:checked=\"{$data.tools.engraver.engrave}\" />\n      <CheckInputs\n        on=\"mm\"\n        off=\"{$settings.language.includes('fr') ? 'po' : 'in'}\"\n        french=\"Unites\"\n        english=\"Units\"\n        on:toggle=\"{convertCSVUnits}\"\n        bind:checked=\"{$settings.units}\" />\n    </div>\n    <!-- sheet info -->\n    <Headers\n      on:toggle=\"{() => ($settings.subsettings.sheet = !$settings.subsettings.sheet)}\"\n      open=\"{$settings.subsettings.sheet}\"\n      icon=\"☐\"\n      english=\"Material\"\n      french=\"Matériau\" />\n    <div class=\"subsetting\" class:active=\"{$settings.subsettings.sheet}\">\n      <TextInputs\n        english=\"{$data.csv.contents[0][2] ? $data.csv.contents[0][2] : 'Type of panel'}\"\n        french=\"{$data.csv.contents[0][2] ? $data.csv.contents[0][2] : 'Sorte de panneau'}\"\n        bind:value=\"{$data.csv.contents[0][3]}\" />\n      <NumInputs\n        english=\"Width\"\n        french=\"Largeur\"\n        max=\"61\"\n        bind:value=\"{$settings.material.width}\"\n        step=\"0.0625\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Height\"\n        french=\"Hauteur\"\n        bind:value=\"{$settings.material.height}\"\n        max=\"121\"\n        step=\"0.0625\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Thickness\"\n        french=\"Épaisseur\"\n        on:changed=\"{updateCut}\"\n        bind:value=\"{$settings.material.thickness}\"\n        max=\"5\"\n        step=\"0.005\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Margins\"\n        french=\"Marges\"\n        bind:value=\"{$settings.material.margins}\"\n        max=\"5\"\n        step=\"0.05\"\n        measurement=\"{'\"'}\" />\n    </div>\n    <!-- nesting options -->\n    <Headers\n      on:toggle=\"{() => ($settings.subsettings.nest = !$settings.subsettings.nest)}\"\n      open=\"{$settings.subsettings.nest}\"\n      icon=\"⊞\"\n      english=\"Nesting\"\n      french=\"Nesting\" />\n    <div class=\"subsetting\" class:active=\"{$settings.subsettings.nest}\">\n      <CheckInputs\n        english=\"Aligned to the\"\n        french=\"Aligné avec le\"\n        bind:checked=\"{$settings.nestDirectionBottom}\"\n        on=\"{french ? 'bas' : 'Bottom'} ⤓\"\n        off=\"{french ? 'haut' : 'Top'} ⤒\" />\n      <h5>\n        {french ? 'Classé par le:' : 'Sorted by:'}\n        <span class=\"spread\">{''}</span>\n        <div class=\"filler\">{''}</div>\n        <select class=\"right\" bind:value=\"{$settings.nestOrder}\">\n          <option value=\"automatic\">\n            <span>{french ? 'Automatique' : 'Automatic'}</span>\n          </option>\n          <option value=\"widest\">\n            <span>{french ? 'Plus large' : 'Widest'} ↔︎</span>\n          </option>\n          <option value=\"tallest\">\n            <span>{french ? 'Plus haut' : 'Tallest'} ↕︎</span>\n          </option>\n          <option value=\"biggest\">\n            <span>{french ? 'Plus grand' : 'Biggest'} ⤢</span>\n          </option>\n        </select>\n      </h5>\n      {#if $settings.nestOrder != 'automatic'}\n        <CheckInputs\n          english=\"Placement direction\"\n          french=\"Direction de placement\"\n          bind:checked=\"{$settings.nestTypeColumn}\"\n          on=\"{french ? 'Colonnes' : 'Columns'} ⇈\"\n          off=\"{french ? 'Lignes' : 'Rows'} ⇉\" />\n      {/if}\n    </div>\n    <!-- cutter -->\n    <Headers\n      on:toggle=\"{() => ($settings.subsettings.profile = !$settings.subsettings.profile)}\"\n      open=\"{$settings.subsettings.profile}\"\n      icon=\"⨆\"\n      english=\"Profile cut\"\n      french=\"Coupe profile\" />\n    <div class=\"subsetting\" class:active=\"{$settings.subsettings.profile}\">\n      <h5>\n        {french ? 'Outil:' : 'Tool:'}\n        <span class=\"spread\">{''}</span>\n        <!-- svelte-ignore a11y-no-onchange -->\n        <select\n          bind:value=\"{$settings.tools.profile}\"\n          on:change=\"{activeProfile}\">\n          {#each Object.keys($settings.cnc) as tool}\n            {#if $settings.cnc[tool].type.includes('mill')}\n              <option value=\"{tool}\">\n                ({tool}) -\n                {$settings.cnc[tool].diameter}\n                {$settings.cnc[tool].type}\n              </option>\n            {/if}\n          {/each}\n        </select>\n      </h5>\n      <NumInputs\n        english=\"Cut depth\"\n        french=\"Profondeur coupe\"\n        bind:value=\"{$data.tools.profile.cut_depth}\"\n        max=\"{$settings.cnc[$settings.tools.profile].max_depth}\"\n        step=\"0.05\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Smallest for one pass\"\n        french=\"Plus petit pour un passe\"\n        bind:value=\"{$data.tools.profile.min_size}\"\n        max=\"{$settings.material.width}\"\n        step=\"0.5\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Last pass link\"\n        french=\"Lien pour dernier passe\"\n        bind:value=\"{$data.tools.profile.link}\"\n        max=\"{$settings.material.thickness}\"\n        step=\"0.005\"\n        measurement=\"{'\"'}\" />\n    </div>\n    <!-- engraver -->\n    <Headers\n      on:toggle=\"{() => ($settings.subsettings.engraver = !$settings.subsettings.engraver)}\"\n      open=\"{$settings.subsettings.engraver}\"\n      icon=\"⋁\"\n      english=\"Engraving\"\n      french=\"Graver\" />\n    <div class=\"subsetting\" class:active=\"{$settings.subsettings.engraver}\">\n      <h5>\n        {french ? 'Outil:' : 'Tool:'}\n        <span class=\"spread\">{''}</span>\n        <!-- svelte-ignore a11y-no-onchange -->\n        <select\n          bind:value=\"{$settings.tools.engraver}\"\n          on:change=\"{activeEngraver}\">\n          {#each Object.keys($settings.cnc) as tool}\n            {#if $settings.cnc[tool].type.includes('nose') || $settings.cnc[tool].type.includes('V-')}\n              <option value=\"{tool}\">\n                ({tool}) -\n                {$settings.cnc[tool].diameter}\n                {$settings.cnc[tool].type}\n              </option>\n            {/if}\n          {/each}\n        </select>\n      </h5>\n      <NumInputs\n        english=\"Cut depth\"\n        french=\"Profondeur coupe\"\n        bind:value=\"{$data.tools.engraver.cut_depth}\"\n        max=\"{$settings.cnc[$settings.tools.engraver].max_depth}\"\n        step=\"0.005\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Placement from left\"\n        french=\"Placement de gauche\"\n        bind:value=\"{$data.tools.engraver.xStart}\"\n        max=\"10\"\n        step=\"0.125\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Placement from bottom\"\n        french=\"Placement de bas\"\n        bind:value=\"{$data.tools.engraver.yStart}\"\n        max=\"10\"\n        step=\"0.125\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Letter height\"\n        french=\"Hauteur de la lettre\"\n        bind:value=\"{$data.tools.engraver.size}\"\n        max=\"3\"\n        step=\"0.05\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Space between letters\"\n        french=\"Espace entre les lettres\"\n        bind:value=\"{$data.tools.engraver.spacing}\"\n        max=\"2\"\n        step=\"0.05\"\n        measurement=\"{'\"'}\" />\n    </div>\n    <!-- cnc settings -->\n    <Headers\n      on:toggle=\"{() => ($settings.subsettings.offset = !$settings.subsettings.offset)}\"\n      open=\"{$settings.subsettings.offset}\"\n      icon=\"⩐\"\n      english=\"CNC Offset\"\n      french=\"Offset CNC\" />\n    <div class=\"subsetting\" class:active=\"{$settings.subsettings.offset}\">\n      {#each Object.keys($data.offset) as offset}\n        <NumInputs\n          english=\"{offset}\"\n          french=\"{offset}\"\n          bind:value=\"{$data.offset[offset]}\"\n          max=\"{$settings.units ? 2800 : 121}\"\n          step=\"{$settings.units ? 0.5 : 0.03125}\"\n          bind:unit=\"{$settings.units}\"\n          measurement=\"{$settings.units ? 'mm' : '\"'}\" />\n      {/each}\n    </div>\n    <!-- tool library -->\n    <Headers\n      on:toggle=\"{() => ($settings.subsettings.library = !$settings.subsettings.library)}\"\n      open=\"{$settings.subsettings.library}\"\n      icon=\"⩐\"\n      english=\"CNC Library\"\n      french=\"Bibliotheque CNC\" />\n    <div class=\"subsetting\" class:active=\"{$settings.subsettings.library}\">\n      <h5>\n        {french ? 'Outil #' : 'Tool #'}\n        <span class=\"spread\">{''}</span>\n        <select bind:value=\"{$settings.tools.tool}\">\n          {#each Object.keys($settings.cnc) as tool}\n            {#if $settings.cnc[tool]}\n              <option value=\"{tool}\">\n                ({tool}) -\n                {$settings.cnc[tool].diameter}{$settings.cnc[tool].mm ? 'mm' : '\"'}\n                {$settings.cnc[tool].type}\n              </option>\n            {/if}\n          {/each}\n        </select>\n      </h5>\n      <NumInputs\n        english=\"Diameter\"\n        french=\"Diametre\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].diameter}\"\n        max=\"{$settings.cnc[$settings.tools.tool].mm ? 150 : 5}\"\n        step=\"{$settings.cnc[$settings.tools.tool].mm ? 0.5 : 0.03125}\"\n        on:convert=\"{convertDiameterUnits}\"\n        bind:unit=\"{$settings.cnc[$settings.tools.tool].mm}\"\n        measurement=\"{$settings.cnc[$settings.tools.tool].mm ? 'mm' : '\"'}\" />\n      <TextInputs\n        english=\"Type\"\n        french=\"Type\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].type}\" />\n      <NumInputs\n        english=\"Spindle speed\"\n        french=\"Vitesse spindle\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].spindle}\"\n        max=\"30000\"\n        step=\"100\"\n        measurement=\"RPM\" />\n      <NumInputs\n        english=\"Plunge rate\"\n        french=\"Vitesse de plonge\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].plunge}\"\n        max=\"1000\"\n        step=\"5\"\n        measurement=\"{'\"/min'}\" />\n      <NumInputs\n        english=\"Plunge ramp\"\n        french=\"Longeur de plonge\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].ramp}\"\n        max=\"5\"\n        step=\"0.125\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Feed rate\"\n        french=\"itesse de coupe\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].feed}\"\n        max=\"1000\"\n        step=\"10\"\n        measurement=\"{'\"/min'}\" />\n      <NumInputs\n        english=\"Max cut depth\"\n        french=\"Max profondeur coupe\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].max_depth}\"\n        max=\"5\"\n        step=\"0.03125\"\n        measurement=\"{'\"'}\" />\n      <NumInputs\n        english=\"Max depth/pass\"\n        french=\"Max profondeur/passe\"\n        bind:value=\"{$settings.cnc[$settings.tools.tool].pass_depth}\"\n        max=\"5\"\n        step=\"0.03125\"\n        measurement=\"{'\"'}\" />\n    </div>\n  </div>\n</div>\n","export function Nest(panelCSV, settings) {\n  let ERRORS = [],\n    NEST_ORDER = settings.nestOrder || 'automatic',\n    IS_FROM_BOTTOM = settings.nestDirectionBottom,\n    IS_BY_COLUMNS = settings.nestTypeColumn,\n    CUTTER = settings.cnc[settings.tools.profile].diameter || 0.375,\n    MATERIAL = {\n      width: settings.material.width || 49,\n      height: settings.material.height || 97,\n      margins: settings.material.margins || 0.25,\n      max_width: () => MATERIAL.width - MATERIAL.margins * 2,\n      max_height: () => MATERIAL.height - MATERIAL.margins * 2,\n    }\n  let PANELS = preprocessPanels(panelCSV)\n\n  if (NEST_ORDER == 'automatic') {\n    let sheets = optimalNesting()\n    return {\n      sheets,\n      errors: ERRORS,\n      averageWaste: calculateAverageWaste(sheets),\n    }\n  } else {\n    let sheets = makeSheets(panelsWithNestingOrder(NEST_ORDER))\n    return {\n      sheets,\n      errors: ERRORS,\n      averageWaste: calculateAverageWaste(sheets),\n    }\n  }\n\n  function optimalNesting() {\n    let bestFit = undefined,\n      nestingOrders = ['widest', 'tallest', 'biggest']\n\n    for (let isByColumns of [false, true]) {\n      IS_BY_COLUMNS = isByColumns\n\n      for (let order of nestingOrders) {\n        let panels = panelsWithNestingOrder(order),\n          sheets = makeSheets(panels)\n        if (sheets.empty()) return sheets\n        let sheetSpaceUsed = sheets.last().area,\n          thisFit = {\n            isByColumns,\n            order,\n            sheets: sheets.length,\n            sheetSpaceUsed,\n          }\n\n        if (!bestFit) bestFit = thisFit\n        if (bestFit.sheets > sheets.length) bestFit = thisFit\n        if (bestFit.sheets < sheets.length) continue\n        if (bestFit.sheetSpaceUsed > sheetSpaceUsed) bestFit = thisFit\n      }\n    }\n    IS_BY_COLUMNS = bestFit.isByColumns\n    let panels = panelsWithNestingOrder(bestFit.order)\n    return makeSheets(panels)\n  }\n\n  function calculateAverageWaste(sheets) {\n    if (sheets.empty()) return false\n    return {\n      all:\n        (sheets.reduce((total, v) => total + v.waste_ratio, 0) /\n          sheets.length) *\n        100,\n      full:\n        (sheets.slice(0, -1).reduce((total, v) => total + v.waste_ratio, 0) /\n          (sheets.length - 1)) *\n        100,\n    }\n  }\n\n  //////////// PANEL FUNCTIONS //////////////////////////\n\n  function panelsWithNestingOrder(nestingOrder) {\n    return PANELS.map((v) => new Panel([...v, nestingOrder]))\n  }\n\n  function preprocessPanels(csv) {\n    return new List(csv.flatMap((v) => preprocessor(v))).flat()\n\n    function preprocessor([id, quantity, width, height]) {\n      return removeDoesNotFit()\n\n      function removeDoesNotFit() {\n        if (width > MATERIAL.max_width() || height > MATERIAL.max_height()) {\n          ERRORS.push(`Panneau ${id} est trop gros`)\n          return []\n        } else if (!width || !height || !quantity) return []\n        return makeMultiplesUnique()\n      }\n      function makeMultiplesUnique() {\n        let n = 0,\n          panelOutput = []\n        width += CUTTER\n        height += CUTTER\n        while (quantity > n++) {\n          let qID = ''\n          if (quantity > 1) qID = `${n} sur ${quantity}`\n          // if ( quantity > 1 ) q = `${n} of ${quantity}`\n          panelOutput.push([qID, id, width, height])\n        }\n        return panelOutput\n      }\n    }\n  }\n\n  //////////// NESTING FUNCTIONS //////////////////////////\n\n  function fillRow(panels) {\n    let row = new List(panels.placementBy().place())\n    let maxHeight = row[0].height\n    // add columns of panels to row until no space remains or no more panels\n    while (panels.fitsRow(row, MATERIAL.max_width())) {\n      let column = new List(panels.fitsRow(row, MATERIAL.max_width()).place())\n      // add more panels to column if space remains\n      while (panels.fitsColumn(column, maxHeight)) {\n        column.push(panels.fitsColumn(column, maxHeight).place())\n      }\n      // return nested array only if more than one panel in column\n      if (column.length === 1) row.push(column[0])\n      else row.push(column)\n    }\n    return row.ascendingHeight()\n  }\n  function makeRows(panels) {\n    let rows = new List()\n    while (panels.notPlaced().length > 0) {\n      let row = fillRow(panels)\n      rows.push(\n        new Row(\n          row.rowWidth(),\n          row.rowHeight(),\n          row.totalArea(),\n          row,\n          panels[0].nestOrder\n        )\n      )\n    }\n    return rows\n  }\n\n  function fillColumn(panels) {\n    let column = new List(panels.placementBy().place())\n    let maxWidth = column[0].width\n    // add rows of panels to column until no space remains or no more panels\n    while (panels.fitsColumn(column, MATERIAL.max_height())) {\n      let row = new List(\n        panels.fitsColumn(column, MATERIAL.max_height()).place()\n      )\n      // add more panels to row if space remains\n      while (panels.fitsRow(row, maxWidth)) {\n        row.push(panels.fitsRow(row, maxWidth).place())\n      }\n      // return nested array only if more than one panel in row\n      if (row.length === 1) column.push(row[0])\n      else column.push(row)\n    }\n    // smallest pieces to center of column\n    return column.ascendingWidth()\n  }\n\n  function makeColumns(panels) {\n    let columns = new List()\n    while (panels.notPlaced().length > 0) {\n      let column = fillColumn(panels)\n      columns.push(\n        new Column(\n          column.columnWidth(),\n          column.columnHeight(),\n          column.totalArea(),\n          column,\n          panels[0].nestOrder\n        )\n      )\n    }\n    return columns\n  }\n\n  function fillSheetColumns(columns) {\n    let sheet = new List(columns.placementBy().place())\n    while (columns.fitsSheetColumn(sheet, MATERIAL.max_width())) {\n      sheet.push(columns.fitsSheetColumn(sheet, MATERIAL.max_width()).place())\n    }\n    return sheet.ascendingHeight()\n  }\n\n  function fillSheetRows(rows) {\n    let sheet = new List(rows.placementBy().place())\n    while (rows.fitsSheetRow(sheet, MATERIAL.max_height())) {\n      sheet.push(rows.fitsSheetRow(sheet, MATERIAL.max_height()).place())\n    }\n    return sheet.ascendingWidth()\n  }\n\n  function makeSheets(panels) {\n    let sheets = new List()\n    if (IS_BY_COLUMNS) {\n      let columns = makeColumns(panels)\n      while (columns.notPlaced().length > 0) {\n        let sheet = fillSheetColumns(columns)\n        addCoordinatesColumn(sheet)\n        sheets.push(\n          new Sheet(\n            sheet.rowWidth(),\n            sheet.rowHeight(),\n            sheet.totalArea(),\n            sheet.map((list) => list.group).flatten(2),\n            sheet,\n            sheets.length + 1,\n            MATERIAL\n          )\n        )\n      }\n    } else {\n      let rows = makeRows(panels)\n      while (rows.notPlaced().length > 0) {\n        let sheet = fillSheetRows(rows)\n        addCoordinatesRow(sheet)\n        sheets.push(\n          new Sheet(\n            sheet.columnWidth(), // width\n            sheet.columnHeight(), // height\n            sheet.totalArea(), // area\n            sheet.map((list) => list.group).flatten(2), // group\n            sheet, // columns\n            sheets.length + 1, // id\n            MATERIAL\n          )\n        )\n      }\n    }\n    return sheets\n  }\n\n  function addCoordinatesRow(rows) {\n    let margin = MATERIAL.margins - CUTTER / 2\n\n    let yPos = new List()\n    rows.forEach((row, i) => {\n      if (i === 0) {\n        yPos.push(\n          IS_FROM_BOTTOM ? margin : MATERIAL.height - margin - row.height\n        )\n      } else {\n        yPos.push(\n          IS_FROM_BOTTOM\n            ? yPos.last() + rows[i - 1].height\n            : yPos.last() - row.height\n        )\n      }\n      let xPos = new List()\n      row.group.forEach((column, j, columns) => {\n        // yPos map of rows, first index === start\n        xPos.push(\n          firstIndex(j) ? margin : xPos.last() + columns[j - 1].columnWidth()\n        )\n        // add x and y prop to each row in column\n        // not good clean code -- needs refactoring -- maybe use switch case\n        let isFirstRow = firstIndex(i) && rows.length > 1\n        if (column instanceof Panel) {\n          column.y = isFirstRow // true? align top otherwise align bottom\n            ? yPos[i] + rows[i].height - column.height\n            : yPos[i]\n          column.x = xPos[j]\n        } else {\n          column.forEach((rowCol, k) => {\n            rowCol.y = firstIndex(k)\n              ? isFirstRow // true? align top otherwise align bottom\n                ? yPos[i] + rows[i].height - rowCol.height\n                : yPos[i]\n              : isFirstRow // true? align top otherwise align bottom\n              ? column[k - 1].y - rowCol.height\n              : column[k - 1].y + column[k - 1].height\n            rowCol.x = xPos[j]\n          })\n        }\n      })\n    })\n  }\n\n  function addCoordinatesColumn(columns) {\n    let margin = MATERIAL.margins - CUTTER / 2\n\n    let xPos = new List()\n    columns.forEach((column, i) => {\n      // xPos map of columns, first index === start\n      if (i === 0) {\n        xPos.push(margin)\n      }\n      // everything after calculated += prev. width\n      else {\n        xPos.push(xPos.last() + columns[i - 1].width)\n      }\n      let yPos = new List()\n      column.group.forEach((row, j, rows) => {\n        yPos.push(\n          firstIndex(j)\n            ? IS_FROM_BOTTOM\n              ? margin\n              : MATERIAL.height - margin - row.rowHeight()\n            : IS_FROM_BOTTOM\n            ? yPos.last() + rows[j - 1].rowHeight()\n            : yPos.last() - row.rowHeight()\n        )\n        // add x and y prop to each row in column\n        // not good clean code -- needs refactoring\n        let isFirstColumn = firstIndex(i) && columns.length > 1\n        if (row instanceof Panel) {\n          row.x = isFirstColumn // true? align right otherwise align left\n            ? xPos[i] + columns[i].width - row.width\n            : xPos[i]\n          row.y = yPos[j]\n        } else {\n          row.forEach((rowCol, k) => {\n            rowCol.x = firstIndex(k)\n              ? isFirstColumn // true? align right otherwise align left\n                ? xPos[i] + columns[i].width - rowCol.width\n                : xPos[i]\n              : isFirstColumn // true? align right otherwise align left\n              ? row[k - 1].x - rowCol.width\n              : row[k - 1].x + row[k - 1].width\n            rowCol.y = IS_FROM_BOTTOM ? yPos[j] : yPos[j - 1] - rowCol.height\n          })\n        }\n      })\n    })\n  }\n\n  function firstIndex(index) {\n    return index === 0\n  }\n}\n\n//////////// CLASSES //////////////////////////\n\nclass Placement {\n  constructor(nestOrder) {\n    this.placed = false\n    this.nestOrder = nestOrder\n  }\n  place() {\n    this.placed = true\n    return this\n  }\n}\nclass Panel extends Placement {\n  constructor([quantityID, id, width, height, nestOrder]) {\n    super(nestOrder)\n    this.nestOrder = nestOrder\n    this.quantityID = quantityID\n    this.id = id\n    this.width = width\n    this.height = height\n    this.area = this.height * this.width\n    this.x = 0\n    this.y = 0\n  }\n\n  columnWidth() {\n    return this.width\n  }\n  rowHeight() {\n    return this.height\n  }\n}\nclass Column extends Placement {\n  constructor(width, height, area, group, nestOrder) {\n    super(nestOrder)\n    this.width = width\n    this.height = height\n    this.area = area\n    this.group = group\n  }\n}\nclass Row extends Column {\n  constructor(width, height, area, group, nestOrder) {\n    super(width, height, area, group, nestOrder)\n  }\n}\nclass Sheet extends Column {\n  constructor(width, height, area, group, columns, id, sheet) {\n    super(width, height, area, group)\n    this.columns = columns\n    this.sheet_width = sheet.width\n    this.sheet_height = sheet.height\n    this.sheet_area = sheet.width * sheet.height\n    this.waste_area = this.sheet_area - this.area\n    this.waste_ratio = 1 - this.area / this.sheet_area\n    this.id = 'Feuille ' + id\n    // this.id = \"Sheet \" + id\n    delete this.placed\n  }\n}\nclass List extends Array {\n  first() {\n    return this[0]\n  }\n  last() {\n    return this[this.length - 1]\n  }\n  empty() {\n    return this.length == 0\n  }\n  flatten(dimensions = 1) {\n    let flattened = this\n    while (dimensions--) {\n      flattened = flattened.flat()\n    }\n    return flattened\n  }\n  ascendingWidth() {\n    return new List(...this).sort((a, b) =>\n      b.width != a.width ? b.width - a.width : b.height - a.height\n    )\n  }\n  ascendingHeight() {\n    return new List(...this).sort((a, b) =>\n      b.height != a.height ? b.height - a.height : b.width - a.width\n    )\n  }\n  notPlaced() {\n    return this.filter((panel) => !panel.placed)\n  }\n  widest() {\n    return this.notPlaced().ascendingWidth().first()\n  }\n  narrowest() {\n    return this.notPlaced().ascendingWidth().last()\n  }\n  tallest() {\n    return this.notPlaced().ascendingHeight().first()\n  }\n  shortest() {\n    return this.notPlaced().ascendingHeight().last()\n  }\n  biggest() {\n    return this.sort((a, b) => b.area - a.area)\n      .notPlaced()\n      .first()\n  }\n  smallest() {\n    return this.sort((a, b) => a.area - b.area)\n      .notPlaced()\n      .first()\n  }\n  placementBy() {\n    return {\n      widest: this.widest(),\n      tallest: this.tallest(),\n      biggest: this.biggest(),\n    }[this.length ? this[0].nestOrder : '']\n  }\n  totalWidth() {\n    return this.reduce((total, panel) => {\n      if (panel instanceof List) {\n        return total + panel.ascendingWidth().first().width\n      }\n      return total + panel.width\n    }, 0)\n  }\n  totalHeight() {\n    return this.reduce((total, panel) => {\n      if (panel instanceof List) {\n        return total + panel.ascendingHeight().first().height\n      }\n      return total + panel.height\n    }, 0)\n  }\n  totalArea() {\n    return this.flatten(3).reduce((total, panel) => total + panel.area, 0)\n  }\n  columnWidth() {\n    return this.flat().ascendingWidth().first().width\n  }\n  columnHeight() {\n    return this.totalHeight()\n  }\n  rowWidth() {\n    return this.totalWidth()\n  }\n  rowHeight() {\n    return this.flat().ascendingHeight().first().height\n  }\n  remainingWidth(maxWidth) {\n    return maxWidth - this.totalWidth()\n  }\n  remainingHeight(maxHeight) {\n    return maxHeight - this.totalHeight()\n  }\n  fitsColumn(group, maxHeight) {\n    return this.filter((panel) => panel.width <= group[0].width).fitsSheetRow(\n      group,\n      maxHeight\n    )\n  }\n  fitsRow(group, maxWidth) {\n    return this.filter(\n      (panel) => panel.height <= group[0].height\n    ).fitsSheetColumn(group, maxWidth)\n  }\n  fitsSheetColumn(group, maxWidth) {\n    return this.notPlaced()\n      .filter((panel) => panel.width < group.remainingWidth(maxWidth))\n      .placementBy()\n  }\n  fitsSheetRow(group, maxHeight) {\n    return this.notPlaced()\n      .filter((panel) => panel.height < group.remainingHeight(maxHeight))\n      .placementBy()\n  }\n}\n","export const CHARACTERS = {\n  A: [\n    [0, 0],\n    [0, 1],\n    [1, 4],\n    [2, 1],\n    [2, 0],\n    [2, 1],\n    [0, 1],\n  ],\n  B: [\n    [0, 0],\n    [0, 4],\n    [1, 4],\n    [2, 3],\n    [1, 2],\n    [2, 1],\n    [1, 0],\n    [0, 0],\n  ],\n  C: [\n    [2, 1],\n    [1, 0],\n    [0, 1],\n    [0, 3],\n    [1, 4],\n    [2, 3],\n  ],\n  D: [\n    [0, 0],\n    [0, 4],\n    [1, 4],\n    [2, 3],\n    [2, 1],\n    [1, 0],\n    [0, 0],\n  ],\n  E: [\n    [2, 0],\n    [0, 0],\n    [0, 2],\n    [1, 2],\n    [0, 2],\n    [0, 4],\n    [2, 4],\n  ],\n  F: [\n    [0, 0],\n    [0, 2],\n    [1, 2],\n    [0, 2],\n    [0, 4],\n    [2, 4],\n  ],\n  G: [\n    [1, 2],\n    [2, 2],\n    [2, 1],\n    [1, 0],\n    [0, 1],\n    [0, 3],\n    [1, 4],\n    [2, 3],\n  ],\n  H: [\n    [0, 0],\n    [0, 4],\n    [0, 2],\n    [2, 2],\n    [2, 4],\n    [2, 0],\n  ],\n  I: [\n    [0, 0],\n    [2, 0],\n    [1, 0],\n    [1, 4],\n    [0, 4],\n    [2, 4],\n  ],\n  J: [\n    [0, 1],\n    [1, 0],\n    [2, 1],\n    [2, 4],\n    [1, 4],\n  ],\n  K: [\n    [0, 0],\n    [0, 4],\n    [0, 2],\n    [1, 2],\n    [2, 4],\n    [1, 2],\n    [2, 0],\n  ],\n  L: [\n    [2, 1],\n    [2, 0],\n    [0, 0],\n    [0, 4],\n  ],\n  M: [\n    [0, 0],\n    [0, 4],\n    [1, 2],\n    [2, 4],\n    [2, 0],\n  ],\n  N: [\n    [0, 0],\n    [0, 4],\n    [2, 0],\n    [2, 4],\n  ],\n  O: [\n    [2, 1],\n    [1, 0],\n    [0, 1],\n    [0, 3],\n    [1, 4],\n    [2, 3],\n    [2, 1],\n  ],\n  P: [\n    [0, 0],\n    [0, 4],\n    [1, 4],\n    [2, 3],\n    [1, 2],\n    [0, 2],\n  ],\n  Q: [\n    [1, 2],\n    [2, 1],\n    [1, 0],\n    [0, 1],\n    [0, 3],\n    [1, 4],\n    [2, 3],\n    [2, 1],\n  ],\n  R: [\n    [0, 0],\n    [0, 4],\n    [1, 4],\n    [2, 3],\n    [1, 2],\n    [2, 0],\n  ],\n  S: [\n    [0, 1],\n    [1, 0],\n    [2, 1],\n    [0, 3],\n    [1, 4],\n    [2, 3],\n  ],\n  T: [\n    [1, 0],\n    [1, 4],\n    [0, 4],\n    [2, 4],\n  ],\n  U: [\n    [0, 4],\n    [0, 1],\n    [1, 0],\n    [2, 1],\n    [2, 4],\n  ],\n  V: [\n    [0, 4],\n    [0, 3],\n    [1, 0],\n    [2, 3],\n    [2, 4],\n  ],\n  W: [\n    [0, 4],\n    [0, 0],\n    [1, 2],\n    [2, 0],\n    [2, 4],\n  ],\n  X: [\n    [0, 0],\n    [2, 4],\n    [1, 2],\n    [0, 4],\n    [2, 0],\n  ],\n  Y: [\n    [1, 0],\n    [1, 2],\n    [0, 4],\n    [1, 2],\n    [2, 4],\n  ],\n  Z: [\n    [2, 0],\n    [0, 0],\n    [2, 4],\n    [0, 4],\n  ],\n  1: [\n    [0, 0],\n    [2, 0],\n    [1, 0],\n    [1, 4],\n    [0, 3],\n  ],\n  2: [\n    [0, 3],\n    [1, 4],\n    [2, 3],\n    [0, 0],\n    [2, 0],\n  ],\n  3: [\n    [0, 1],\n    [1, 0],\n    [2, 1],\n    [1, 2],\n    [2, 3],\n    [1, 4],\n    [0, 3],\n  ],\n  4: [\n    [2, 0],\n    [2, 4],\n    [0, 1],\n    [2, 1],\n  ],\n  5: [\n    [0, 1],\n    [1, 0],\n    [2, 1],\n    [2, 2],\n    [1, 3],\n    [0, 2],\n    [0, 4],\n    [2, 4],\n  ],\n  6: [\n    [0, 2],\n    [1, 2],\n    [2, 1],\n    [1, 0],\n    [0, 1],\n    [0, 3],\n    [1, 4],\n    [2, 3],\n  ],\n  7: [\n    [0, 0],\n    [2, 4],\n    [0, 4],\n    [0, 3],\n  ],\n  8: [\n    [1, 0],\n    [0, 1],\n    [2, 3],\n    [1, 4],\n    [0, 3],\n    [2, 1],\n    [1, 0],\n  ],\n  9: [\n    [0, 1],\n    [1, 0],\n    [2, 1],\n    [2, 3],\n    [1, 4],\n    [0, 3],\n    [1, 2],\n    [2, 2],\n  ],\n  0: [\n    [0, 1],\n    [0, 3],\n    [1, 4],\n    [2, 3],\n    [2, 1],\n    [1, 0],\n    [0, 1],\n    [2, 3],\n  ],\n  '=': [\n    // square or back panel icon\n    [\n      [0, 1],\n      [1, 3],\n      [2, 3],\n      [2, 1],\n      [0, 1],\n    ],\n  ],\n  '-': [\n    // dash or shelf icon?\n    [0, 2],\n    [2, 2],\n  ],\n  '[': [\n    // left side icon\n    [0, 1],\n    [0, 3],\n    [1, 3, '+'], // lift bit before next move\n    [1, 3, '-'],\n    [2, 3],\n    [2, 1],\n    [1, 1],\n    [1, 3],\n  ],\n  ']': [\n    //right side icon\n    [0, 1],\n    [0, 3],\n    [1, 3],\n    [1, 1],\n    [0, 1],\n    [2, 1, '+'], // lift bit before next move\n    [2, 1, '-'],\n    [2, 3],\n  ],\n  \"'\": [\n    // top icon\n    [0, 1],\n    [0, 2],\n    [2, 2],\n    [2, 1],\n    [0, 1],\n    [0, 3, '+'],\n    [0, 3, '-'],\n    [2, 3],\n  ],\n\n  ',': [\n    //bot icon\n    [0, 1],\n    [2, 1],\n    [2, 2, '+'],\n    [2, 2, '-'],\n    [0, 2],\n    [0, 3],\n    [2, 3],\n    [2, 2],\n  ],\n}\n","import { CHARACTERS } from './engravingFont.js'\nimport { formatDate, cleanFloat } from './helperFunctions.js'\n\nexport function Gcode(data, settings) {\n  let CURRENT_TOOL = 9\n  const SHEETS = data.sheets,\n    RAPID = '00',\n    FEED = '01',\n    SPINDLE_SPEED = () => settings.cnc[CURRENT_TOOL].spindle,\n    FEED_RATE = () => settings.cnc[CURRENT_TOOL].feed,\n    PLUNGE_RATE = () => settings.cnc[CURRENT_TOOL].plunge,\n    PLUNGE_DISTANCE = () => settings.cnc[CURRENT_TOOL].ramp,\n    X_OFFSET = data.offset.X,\n    Y_OFFSET = data.offset.Y,\n    Z_OFFSET = data.offset.Z,\n    X_HOME = settings.material.width / 2 || 30.0,\n    Y_HOME = Math.min(settings.material.height + 10, 122),\n    MATERIAL_HEIGHT = settings.material.thickness + Z_OFFSET,\n    SAFE_HEIGHT = MATERIAL_HEIGHT + 0.25,\n    PROFILE_DEPTH = cleanFloat(\n      Math.max(MATERIAL_HEIGHT - data.tools.profile.cut_depth, 0)\n    ),\n    MAX_PASS_DEPTH = settings.cnc[CURRENT_TOOL].pass_depth,\n    LINK_DEPTH = PROFILE_DEPTH + data.tools.profile.link,\n    SMALL_PANEL = data.tools.profile.min_size,\n    PROFILE_TOOL = settings.tools.profile,\n    ENGRAVE = data.tools.engraver.engrave,\n    ENGRAVE_TOOL = settings.tools.engraver\n\n  let output = HEADER()\n  SHEETS.forEach((sheet, index, array) => {\n    output += `( []: ${index + 1} )\\n`\n    if (ENGRAVE) {\n      output += TOOL_CHANGE(ENGRAVE_TOOL)\n      sheet.columns.forEach((column, index) => {\n        column.group\n          .flat()\n          .sort((a, b) => sortColumnOrRow(settings.nestTypeColumn, a, b, index))\n          .forEach(\n            (panel) =>\n              (output += ENGRAVE_LABEL({\n                label: panel.id,\n                engravingDepth: data.tools.engraver.cut_depth,\n                xStart: panel.x + 1 + X_OFFSET,\n                yStart: panel.y + 1 + Y_OFFSET,\n                size: data.tools.engraver.size,\n                spacing: data.tools.engraver.spacing,\n                direction: data.tools.engraver.direction,\n              }))\n          )\n      })\n    }\n    output += TOOL_CHANGE(PROFILE_TOOL)\n    sheet.columns.forEach((column, index) => {\n      column.group\n        .flat()\n        .sort((a, b) => sortColumnOrRow(settings.nestTypeColumn, a, b, index))\n        .forEach((panel) => (output += PROFILE_CUT(panel)))\n    })\n    if (index !== array.length - 1) output += SHEET_CHANGE()\n  })\n  output += FOOTER()\n\n  return output.replace('M05\\n', '')\n\n  ///////////////////////////////////\n  //    helpers to write g-code\n  //////////////////////////////////\n\n  function PROFILE_CUT(panel) {\n    const x = cleanFloat(panel.x + X_OFFSET),\n      y = cleanFloat(panel.y + Y_OFFSET),\n      x_ = cleanFloat(x + panel.width),\n      y_ = cleanFloat(y + panel.height),\n      yStart = cleanFloat(y_ - PLUNGE_DISTANCE())\n\n    return (\n      `( ------------------ )\\n` +\n      `( ${panel.id} )\\n` +\n      MOVE({ x, y: yStart, z: SAFE_HEIGHT }) +\n      MOVE({ z: MATERIAL_HEIGHT + 0.005 }) +\n      pass() +\n      MOVE({ g: RAPID, z: SAFE_HEIGHT })\n    )\n\n    function pass() {\n      const contour = (depth) =>\n        MOVE({ g: FEED, y: y_, z: depth, f: PLUNGE_RATE() }) +\n        MOVE({ x: x_, f: FEED_RATE() }) +\n        MOVE({ y }) +\n        MOVE({ x }) +\n        MOVE({ y: depth === PROFILE_DEPTH ? y_ : yStart })\n\n      let fullDepth = false,\n        passes = '',\n        depth = MATERIAL_HEIGHT,\n        smallPanel = () =>\n          depth === PROFILE_DEPTH &&\n          (panel.width < SMALL_PANEL || panel.height < SMALL_PANEL)\n      while (!fullDepth) {\n        depth = Math.max(depth - MAX_PASS_DEPTH, PROFILE_DEPTH)\n        if (smallPanel()) passes += contour(LINK_DEPTH)\n        passes += contour(depth)\n        if (depth === PROFILE_DEPTH) fullDepth = true\n      }\n      return passes\n    }\n  }\n  function ENGRAVE_LABEL({\n    label,\n    engravingDepth = 0.005,\n    xStart = 1,\n    yStart = 1,\n    size = 0.3,\n    spacing = 0.1,\n    direction = 'ltr',\n  }) {\n    return engravingGcode()\n\n    function engravingGcode() {\n      return characterArray()\n        .map((character, index) => characterToGcode(character, index))\n        .join('')\n      function characterArray() {\n        return sanitizeString(label).split('')\n      }\n      function sanitizeString(string) {\n        return (\n          string + ''.toUpperCase().replace(/[^A-Z0-9\\[\\]\\,\\'\\s\\-\\=]/gi, '')\n        )\n      }\n    }\n    function characterToGcode(character, notFirstCharacter) {\n      if (notFirstCharacter) moveStartingPoint()\n      if (character === ' ') return\n\n      return (\n        `( ------------------ )\\n( ${character} )\\n` +\n        engravePath() +\n        liftEngraver()\n      )\n\n      function moveStartingPoint() {\n        if (direction === 'ltr') xStart += spacing + size / 2\n        else yStart -= spacing + size\n      }\n      function engravePath() {\n        return (\n          CHARACTERS[character]\n            .map(([x, y, z = ''], index) => {\n              // only for the first point\n              if (!index) {\n                return (\n                  // rapid move to first point\n                  MOVE({ g: RAPID, x: posX(x), y: posY(y) }) +\n                  // lower engraver to material\n                  MOVE({ g: FEED, z: posZ('-'), f: 200 })\n                )\n              }\n              // move engraver to next point\n              return MOVE({ x: posX(x), y: posY(y), z: posZ(z) })\n            })\n            // turn array back to string\n            .join('')\n        )\n      }\n      function liftEngraver() {\n        return MOVE({ g: RAPID, z: SAFE_HEIGHT })\n      }\n      function posX(x) {\n        return cleanFloat(xStart + resizeCharacter(x))\n      }\n      function posY(y) {\n        return cleanFloat(yStart + resizeCharacter(y))\n      }\n      function posZ(z) {\n        if (z === '+') return SAFE_HEIGHT\n        if (z === '-') return MATERIAL_HEIGHT - engravingDepth\n        return z\n      }\n      function resizeCharacter(point) {\n        return point * 0.25 * size\n      }\n    }\n  }\n  function MOVE({ g = '', x = '', y = '', z = '', f = '' }) {\n    return G() + X() + Y() + Z() + F() + '\\n'\n\n    function G() {\n      return g === '' ? g : `G${g} `\n    }\n    function X() {\n      return x === '' ? x : `X${addDecimal(x)} `\n    }\n    function Y() {\n      return y === '' ? y : `Y${addDecimal(y)} `\n    }\n    function Z() {\n      return z === '' ? z : `Z${addDecimal(z)} `\n    }\n    function F() {\n      return f === '' ? f : `F${f}`\n    }\n  }\n  function HEADER() {\n    let [, , , material, , info] = data.csv.contents[0]\n    return (\n      `( ${formatDate(new Date(), 'dd.mm.yyyy HH:MM')} )\\n` +\n      `( ${data.name} )\\n` +\n      `${info ? `( ${info} )\\n` : ''}` +\n      `( ------------------ )\\n` +\n      `G40 G80 G70\\n` +\n      `( ------------------ )\\n` +\n      `( ${SHEETS.length}: [] ${material ? material : ''} )\\n`\n    )\n  }\n  function TOOL_CHANGE(tool) {\n    if (CURRENT_TOOL === tool) return ''\n    CURRENT_TOOL = tool\n    return (\n      `( ------------------ )\\n` +\n      `M05\\n` +\n      `M06 T${CURRENT_TOOL}\\n` +\n      `G43 H${CURRENT_TOOL}\\n` +\n      `S${SPINDLE_SPEED()} M03\\n` +\n      `G54 G90 G00\\n`\n    )\n  }\n  function SHEET_CHANGE() {\n    return (\n      `( ------------------ )\\n` +\n      `M05 M104\\n` +\n      MOVE({ g: '90', x: X_HOME, y: Y_HOME }) +\n      `M00\\n` +\n      `M103 M03 G00\\n` +\n      `( ------------------ )\\n` +\n      `( CYCLE START :)\\n`\n    )\n  }\n  function FOOTER() {\n    return (\n      `( ------------------ )\\n` +\n      `G40 G80 G91 G28 Z0 M5\\n` +\n      'G90\\n' +\n      MOVE({ g: RAPID, x: X_HOME, y: Y_HOME }) +\n      `M30`\n    )\n  }\n}\n\n// helper functions\n\nfunction addDecimal(num) {\n  if (/\\./.test(num) || num === 0) return num\n  return num.toFixed(1)\n}\n\nfunction sortColumnOrRow(test, a, b, i) {\n  return test ? columnSort() : rowSort()\n  function columnSort() {\n    return i % 2 === 0\n      ? b.y !== a.y\n        ? b.y - a.y\n        : a.x - b.x\n      : a.y !== b.y\n      ? a.y - b.y\n      : b.x - a.x\n  }\n  function rowSort() {\n    return i % 2 === 0\n      ? a.x !== b.x\n        ? a.x - b.x\n        : a.y - b.y\n      : b.x !== a.x\n      ? b.x - a.x\n      : b.y - a.y\n  }\n}\n","<script>\nimport Import from './components/Import.svelte'\nimport Editor from './components/Editor.svelte'\nimport Viewer from './components/Viewer.svelte'\nimport Settings from './components/Settings.svelte'\nimport { Nest } from './nest.js'\nimport { Gcode } from './gCode.js'\nimport { settings, data } from './stores.js'\nimport { toInches } from './helperFunctions.js'\n\nfunction update() {\n  $data.name = $data.csv.contents[0][1]\n  $data.csv.panels = $data.csv.contents.slice($data.csv.headerRows)\n  calculateNest()\n  $data.csv.output = $data.csv.contents.join('\\n')\n  $data.cnc = Gcode($data, $settings)\n}\n\nfunction calculateNest() {\n  let nest = Nest(panelsDimensionsInches(), $settings)\n  $data.sheets = nest.sheets\n  $data.errors = nest.errors\n  $data.averageWaste = nest.averageWaste\n\n  function panelsDimensionsInches() {\n    if ($settings.units)\n      return $data.csv.panels.map((i) => [\n        i[0],\n        i[1],\n        toInches(i[2]),\n        toInches(i[3]),\n      ])\n    return $data.csv.panels\n  }\n}\nupdate()\n\n</script>\n\n<style>\n.container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: grid;\n  grid-template-columns: 8rem minmax(24rem, 20vw) 1fr;\n  overflow: hidden;\n}\n\n.import {\n  position: relative;\n  margin: 2rem;\n  display: flex;\n  flex-direction: column;\n  z-index: 3;\n}\n\n.controls {\n  position: relative;\n  /* height: calc(100vh - 4rem); */\n  margin: 2rem 0;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  z-index: 2;\n}\n\n.main {\n  z-index: 4;\n}\n\n.splash {\n  position: absolute;\n  top: 10vh;\n  left: 45vw;\n  width: 40vw;\n  height: 40vh;\n  z-index: -1;\n}\n.splash-img {\n  position: relative;\n  left: 20%;\n  width: 40%;\n  height: 100%;\n  background-image: url('../favicon.ico');\n  background-size: contain;\n  background-position: left bottom;\n  background-repeat: no-repeat;\n  z-index: -1;\n}\nh1,\nh6 {\n  color: var(--second);\n  position: relative;\n  left: 20%;\n}\n\n</style>\n\n<svelte:body on:change=\"{update}\" />\n<div class=\"container\">\n  <div class=\"import\">\n    <Import on:update=\"{update}\" />\n  </div>\n  <div class=\"controls\">\n    <Settings on:update=\"{update}\" />\n    <Editor on:update=\"{update}\" />\n  </div>\n  <div class=\"main\" on:click=\"{() => ($settings.show = false)}\">\n    <Viewer />\n    {#if !$data.sheets.length}\n      <div class=\"splash\">\n        <div class=\"splash-img\"></div>\n        <h1><span>Ahhh! Nest:</span></h1>\n        <h6><span>sauver une feuille, peut-être deux</span></h6>\n      </div>\n    {/if}\n  </div>\n</div>\n","import App from './App.svelte'\n\nconst app = new App({\n  target: document.body,\n})\n\nexport default app\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","null_to_empty","value","set_store_value","ret","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","undefined","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","select_option","select","option","__value","selected","select_value","selected_option","querySelector","toggle_class","toggle","classList","current_component","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","bind","index","props","bound","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","skip_bound","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","defaultSettings","version_1_0_1","language","navigator","userLanguage","material","width","height","thickness","margins","nestTypeColumn","nestOrder","nestDirectionBottom","units","tools","profile","engraver","tool","cnc","diameter","mm","spindle","feed","plunge","ramp","max_depth","pass_depth","step_over","subsettings","show","project","library","sheet","nest","offset","activePanel","csvTemplate","en","fr","defaultData","sheets","errors","X","Y","Z","engrave","cut_depth","xStart","yStart","size","spacing","direction","link","min_size","csv","new","contents","panels","headerRows","output","svg","settings","initial","str","JSON","stringify","localKey","parse","localStorage","getItem","obj1","obj2","setItem","join","console","log","localStore","sessionStorage","sessionStore","trunc","number","places","Math","round","parseFloat","cleanFloat","num","trailing","toMM","toInches","formatDate","date","format","leadingZero","digits","getMonth","dd","getDate","yy","getFullYear","toString","yyyy","HH","getHours","MM","getMinutes","SS","getSeconds","T","h","replace","matched","CSVToArray","ROW_END","RegExp","COLUMN_END","array","split","column","cell","test","isNaN","includes","item","reduce","total","frac","toFloat","headers","checkHeaderValidity","v","english","french","under","encodeURIComponent","dispatch","dlCSV","dlSVG","dlCNC","open","badFile","updatePanels","$settings","$data","newFile","Date","code","setTimeout","file","click","files","reader","FileReader","readAsText","onload","result","highlight","averageWaste","all","full","sortAscending","sort","sortDescending","metric","findMax","directionStr","max","row","line","id","area","waste_area","waste_ratio","x","y","min","group","sheet_width","sheet_height","last","w","svgFile","displayInfo","top","left","innerHTML","rect","getBoundingClientRect","bottom","right","rows","ceil","columns","icon","step","measurement","unit","checked","on","off","separator","convertUnit","activeLibraryTool","activate","Nest","panelCSV","ERRORS","NEST_ORDER","IS_FROM_BOTTOM","IS_BY_COLUMNS","CUTTER","MATERIAL","max_width","max_height","PANELS","List","flatMap","quantity","removeDoesNotFit","makeMultiplesUnique","n","panelOutput","qID","preprocessor","flat","bestFit","nestingOrders","isByColumns","order","makeSheets","panelsWithNestingOrder","sheetSpaceUsed","thisFit","optimalNesting","calculateAverageWaste","nestingOrder","Panel","fillRow","placementBy","place","maxHeight","fitsRow","fitsColumn","ascendingHeight","fillColumn","maxWidth","ascendingWidth","fillSheetColumns","fitsSheetColumn","fillSheetRows","fitsSheetRow","notPlaced","Column","columnWidth","columnHeight","totalArea","makeColumns","addCoordinatesColumn","Sheet","rowWidth","rowHeight","list","flatten","Row","makeRows","addCoordinatesRow","margin","yPos","xPos","j","firstIndex","isFirstRow","rowCol","k","isFirstColumn","Placement","constructor","placed","quantityID","super","sheet_area","first","dimensions","flattened","panel","widest","narrowest","tallest","shortest","biggest","smallest","totalWidth","totalHeight","remainingWidth","remainingHeight","CHARACTERS","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","U","V","W","Gcode","CURRENT_TOOL","SHEETS","RAPID","FEED","FEED_RATE","PLUNGE_RATE","X_OFFSET","Y_OFFSET","Z_OFFSET","X_HOME","Y_HOME","MATERIAL_HEIGHT","SAFE_HEIGHT","PROFILE_DEPTH","MAX_PASS_DEPTH","LINK_DEPTH","SMALL_PANEL","PROFILE_TOOL","ENGRAVE","ENGRAVE_TOOL","info","HEADER","TOOL_CHANGE","sortColumnOrRow","label","engravingDepth","engravingGcode","characterArray","character","characterToGcode","sanitizeString","string","toUpperCase","notFirstCharacter","moveStartingPoint","engravePath","liftEngraver","z","MOVE","posX","posY","posZ","g","f","resizeCharacter","point","ENGRAVE_LABEL","x_","y_","pass","contour","depth","fullDepth","passes","smallPanel","PROFILE_CUT","addDecimal","toFixed","panelsDimensionsInches","calculateNest","body"],"mappings":"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IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAEN9M,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAEN+M,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENnR,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAEN,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAEN,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAEN,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAEN,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAEN,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAEN,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAEN,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAEN,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAEN,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAEN,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAEN,IAAK,CAEH,CACE,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EA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"}